(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./.storybook/preview.js-generated-config-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),vue_esm=__webpack_require__("./node_modules/vue/dist/vue.esm.js"),element_ui_common=__webpack_require__("./node_modules/element-ui/lib/element-ui.common.js"),element_ui_common_default=__webpack_require__.n(element_ui_common);__webpack_require__("./node_modules/element-ui/lib/theme-chalk/index.css");vue_esm.default.use(element_ui_common_default.a);var parameters={actions:{argTypesRegex:"^[a-z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},options:{storySort:{order:["Customize","Element"]}}};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return Object(ClientApi.d)(value);case"argTypes":return Object(ClientApi.b)(value);case"decorators":return value.forEach((function(decorator){return Object(ClientApi.f)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(ClientApi.g)(loader,!1)}));case"parameters":return Object(ClientApi.h)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.c)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return Object(ClientApi.e)(enhancer)}));case"render":return Object(ClientApi.i)(value);case"globals":case"globalTypes":var v={};return v[key]=value,Object(ClientApi.h)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/vue/dist/esm/client/index.js").configure)([__webpack_require__("./src/storybook sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"),__webpack_require__("./src/storybook sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$")],module,!1)}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module))},"./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UHeader/index.vue?vue&type=style&index=0&id=66a88590&prod&lang=scss&scoped=true&":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.i,".u-header[data-v-66a88590]{display:flex;justify-content:space-between;align-items:center}.u-header .title[data-v-66a88590]{margin:4px 0;font-size:36px}",""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UlButton/index.vue?vue&type=style&index=0&id=4d8018f7&prod&lang=scss&scoped=true&":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.i,".ul-btn[data-v-4d8018f7]{padding:6px 12px;border:1px solid #ccc;color:#333;font-size:14px;line-height:1.42857143;background-color:#fff;border-radius:4px;cursor:pointer}.ul-btn--primary[data-v-4d8018f7]{color:#fff;background-color:#337ab7;border-color:#2e6da4}.ul-btn--success[data-v-4d8018f7]{color:#fff;background-color:#5cb85c;border-color:#4cae4c}.ul-btn--warning[data-v-4d8018f7]{color:#fff;background-color:#f0ad4e;border-color:#eea236}.ul-btn--danger[data-v-4d8018f7]{color:#fff;background-color:#d9534f;border-color:#d43f3a}.ul-btn--info[data-v-4d8018f7]{color:#fff;background-color:#5bc0de;border-color:#46b8da}.ul-btn--link[data-v-4d8018f7]{font-weight:400;color:#337ab7;border-color:rgba(0,0,0,0);border-radius:0}.ul-btn--large[data-v-4d8018f7]{padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.ul-btn--small[data-v-4d8018f7]{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.ul-btn--mini[data-v-4d8018f7]{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px}",""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UserInfo/index.vue?vue&type=style&index=0&id=209aae48&prod&lang=scss&scoped=true&":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.i,".user-info[data-v-209aae48]{display:flex;align-items:center;margin:6px 0}.user-info .avatar .user-avatar[data-v-209aae48]{width:32px;height:32px;border-radius:50%;vertical-align:middle}.user-info[data-v-209aae48] .info-wrap{margin-left:6px;line-height:16px}.user-info[data-v-209aae48] .info-wrap .user-name,.user-info[data-v-209aae48] .info-wrap .user-email{overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}",""]),module.exports=exports},"./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UserSelect/index.vue?vue&type=style&index=0&id=60d16142&prod&lang=scss&scoped=true&":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.i,".user-selector[data-v-60d16142]{position:relative}.user-selector .user-selector__selected[data-v-60d16142]{display:flex;justify-content:space-between;align-items:center;min-height:48px;padding:0 14px;border:1px solid #dcdfe6;border-radius:4px;cursor:pointer}.user-selector .user-selector__dropdown[data-v-60d16142]{position:absolute;top:48px;width:100%;z-index:999;padding:0 14px;border:1px solid #dcdfe6;border-top:none;border-radius:0 0 4px 4px;background:#fff;box-sizing:border-box}.user-selector .user-selector__dropdown .search-input[data-v-60d16142]{width:100%;height:36px;border:none;border-bottom:1px solid #dcdfe6;outline:none;margin:10px 0}.user-selector .user-selector__dropdown .list-wrap[data-v-60d16142]{max-height:420px;overflow-y:scroll;overscroll-behavior:none}.user-selector .user-selector__dropdown .list-wrap .tipMsg[data-v-60d16142]{margin:0;line-height:36px}.user-selector .user-selector__dropdown .user-info[data-v-60d16142]{cursor:pointer}.user-selector .user-selector__dropdown .user-info[data-v-60d16142]:hover{background-color:#f5f7fa}.user-selector .fade-enter-active[data-v-60d16142],.user-selector .fade-leave-active[data-v-60d16142]{transition:all .3s ease}.user-selector .fade-enter[data-v-60d16142],.user-selector .fade-leave-to[data-v-60d16142]{opacity:0;transform:translateY(-20px)}",""]),module.exports=exports},"./node_modules/vue-docgen-loader/lib/index.js?!./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UHeader/index.vue?vue&type=style&index=0&id=66a88590&prod&lang=scss&scoped=true&":function(module,exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UHeader/index.vue?vue&type=style&index=0&id=66a88590&prod&lang=scss&scoped=true&");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./node_modules/vue-docgen-loader/lib/index.js?!./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UlButton/index.vue?vue&type=style&index=0&id=4d8018f7&prod&lang=scss&scoped=true&":function(module,exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UlButton/index.vue?vue&type=style&index=0&id=4d8018f7&prod&lang=scss&scoped=true&");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./node_modules/vue-docgen-loader/lib/index.js?!./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UserInfo/index.vue?vue&type=style&index=0&id=209aae48&prod&lang=scss&scoped=true&":function(module,exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UserInfo/index.vue?vue&type=style&index=0&id=209aae48&prod&lang=scss&scoped=true&");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./node_modules/vue-docgen-loader/lib/index.js?!./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UserSelect/index.vue?vue&type=style&index=0&id=60d16142&prod&lang=scss&scoped=true&":function(module,exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UserSelect/index.vue?vue&type=style&index=0&id=60d16142&prod&lang=scss&scoped=true&");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./src/components/UHeader/index.vue?vue&type=style&index=0&id=66a88590&prod&lang=scss&scoped=true&":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/vue-docgen-loader/lib/index.js?!./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UHeader/index.vue?vue&type=style&index=0&id=66a88590&prod&lang=scss&scoped=true&")},"./src/components/UlButton/index.vue?vue&type=style&index=0&id=4d8018f7&prod&lang=scss&scoped=true&":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/vue-docgen-loader/lib/index.js?!./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UlButton/index.vue?vue&type=style&index=0&id=4d8018f7&prod&lang=scss&scoped=true&")},"./src/components/UserInfo/index.vue":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var components_UserInfovue_type_script_lang_js_={name:"UserInfo",props:{imgUrl:{type:String},name:{type:String},email:{type:String}}},componentNormalizer=(__webpack_require__("./src/components/UserInfo/index.vue?vue&type=style&index=0&id=209aae48&prod&lang=scss&scoped=true&"),__webpack_require__("./node_modules/vue-loader/lib/runtime/componentNormalizer.js"));const __vuedocgen_export_0=Object(componentNormalizer.a)(components_UserInfovue_type_script_lang_js_,(function render(){var _vm=this,_c=_vm._self._c;return _c("div",{staticClass:"user-info"},[_c("div",{staticClass:"avatar"},[_c("img",{staticClass:"user-avatar",attrs:{src:_vm.imgUrl,alt:"avatar"}})]),_vm._v(" "),_c("div",{staticClass:"info-wrap"},[_c("div",{staticClass:"user-name"},[_vm._v(_vm._s(_vm.name))]),_vm._v(" "),_c("div",{staticClass:"user-email"},[_vm._v(_vm._s(_vm.email))])])])}),[],!1,null,"209aae48",null).exports;__webpack_exports__.default=__vuedocgen_export_0;__vuedocgen_export_0.__docgenInfo={displayName:"UserInfo",exportName:"default",description:"",tags:{},props:[{name:"imgUrl",type:{name:"string"}},{name:"name",type:{name:"string"}},{name:"email",type:{name:"string"}}]}},"./src/components/UserInfo/index.vue?vue&type=style&index=0&id=209aae48&prod&lang=scss&scoped=true&":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/vue-docgen-loader/lib/index.js?!./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UserInfo/index.vue?vue&type=style&index=0&id=209aae48&prod&lang=scss&scoped=true&")},"./src/components/UserSelect/index.vue?vue&type=style&index=0&id=60d16142&prod&lang=scss&scoped=true&":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/vue-docgen-loader/lib/index.js?!./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/components/UserSelect/index.vue?vue&type=style&index=0&id=60d16142&prod&lang=scss&scoped=true&")},"./src/storybook sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$":function(module,exports,__webpack_require__){var map={"./customize/UHeader.stories.js":"./src/storybook/customize/UHeader.stories.js","./customize/UlButton.stories.js":"./src/storybook/customize/UlButton.stories.js","./customize/UserInfo.stories.js":"./src/storybook/customize/UserInfo.stories.js","./customize/UserSelect.stories.js":"./src/storybook/customize/UserSelect.stories.js","./element/Button.stories.js":"./src/storybook/element/Button.stories.js","./element/Cascader.stories.js":"./src/storybook/element/Cascader.stories.js","./element/Checkbox.stories.js":"./src/storybook/element/Checkbox.stories.js","./element/ColorPicker.stories.js":"./src/storybook/element/ColorPicker.stories.js","./element/DatePicker.stories.js":"./src/storybook/element/DatePicker.stories.js","./element/DateTimePicker.stories.js":"./src/storybook/element/DateTimePicker.stories.js","./element/Form.stories.js":"./src/storybook/element/Form.stories.js","./element/Input.stories.js":"./src/storybook/element/Input.stories.js","./element/InputNumber.stories.js":"./src/storybook/element/InputNumber.stories.js","./element/Link.stories.js":"./src/storybook/element/Link.stories.js","./element/Message.stories.js":"./src/storybook/element/Message.stories.js","./element/Radio.stories.js":"./src/storybook/element/Radio.stories.js","./element/Rate.stories.js":"./src/storybook/element/Rate.stories.js","./element/Select.stories.js":"./src/storybook/element/Select.stories.js","./element/Slider.stories.js":"./src/storybook/element/Slider.stories.js","./element/Switch.stories.js":"./src/storybook/element/Switch.stories.js","./element/TimePicker.stories.js":"./src/storybook/element/TimePicker.stories.js","./element/Transfer.stories.js":"./src/storybook/element/Transfer.stories.js","./element/Upload.stories.js":"./src/storybook/element/Upload.stories.js"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src/storybook sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.(js|jsx|ts|tsx))$"},"./src/storybook sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$":function(module,exports,__webpack_require__){var map={"./Introduction.stories.mdx":"./src/storybook/Introduction.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src/storybook sync recursive ^\\.(?:(?:^|[\\\\/]|(?:(?:(?!(?:^|[\\\\/])\\.).)*?)[\\\\/])(?!\\.)(?=.)[^\\\\/]*?\\.stories\\.mdx)$"},"./src/storybook/Introduction.stories.mdx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.b,{title:"Introduction",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("h1",null,"基于 storybook 打造的 vue2 组件库"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)("p",null,"假设这里有一堆描述……"))}MDXContent.isMDXComponent=!0;var __page=function(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.a,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},"./src/storybook/customize/UHeader.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法}));var components_UHeadervue_type_script_lang_js_={name:"UHeader",props:{title:{type:String}}},componentNormalizer=(__webpack_require__("./src/components/UHeader/index.vue?vue&type=style&index=0&id=66a88590&prod&lang=scss&scoped=true&"),__webpack_require__("./node_modules/vue-loader/lib/runtime/componentNormalizer.js"));const __vuedocgen_export_0=Object(componentNormalizer.a)(components_UHeadervue_type_script_lang_js_,(function render(){var _c=this._self._c;return _c("div",{staticClass:"u-header"},[_c("div",{staticClass:"header-left"},[_c("h3",{staticClass:"title"},[this._v(this._s(this.title))]),this._v(" "),this._t("description")],2),this._v(" "),_c("div",{staticClass:"header-right"},[this._t("actions")],2)])}),[],!1,null,"66a88590",null).exports;var UHeader=__vuedocgen_export_0;__vuedocgen_export_0.__docgenInfo={displayName:"UHeader",exportName:"default",description:"",tags:{},props:[{name:"title",type:{name:"string"}}],slots:[{name:"description"},{name:"actions"}]};__webpack_exports__.default={title:"Customize/UHeader",component:UHeader,argTypes:{title:{control:"text",description:"标题"}},parameters:{docs:{description:{component:"设置头部通用栏"}}}};var 基础用法=function(args,_ref){var argTypes=_ref.argTypes;return{props:Object.keys(argTypes),components:{UHeader:UHeader},template:'\n  <u-header v-bind="$props">\n    <template #description>\n      <p>hello world!</p>\n    </template>\n    <template #actions>\n      <button>Give me five</button>\n    </template>\n  </u-header>\n  '}}.bind({});基础用法.args={title:"Ulearning"},基础用法.parameters=Object.assign({storySource:{source:'(args, { argTypes }) => ({\r\n  props: Object.keys(argTypes),\r\n  components: { UHeader },\r\n  template: `\r\n  <u-header v-bind="$props">\r\n    <template #description>\r\n      <p>hello world!</p>\r\n    </template>\r\n    <template #actions>\r\n      <button>Give me five</button>\r\n    </template>\r\n  </u-header>\r\n  `\r\n})'}},基础用法.parameters)},"./src/storybook/customize/UlButton.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"预定样式",(function(){return 预定样式})),__webpack_require__.d(__webpack_exports__,"尺寸",(function(){return 尺寸}));var components_UlButtonvue_type_script_lang_js_={name:"UlButton",props:{type:{type:String},size:{type:String}},computed:{classes:function(){return["ul-btn",this.type?"ul-btn--"+this.type:"",this.size?"ul-btn--"+this.size:""]}},methods:{handleClick:function(event){this.$emit("click",event)}}},componentNormalizer=(__webpack_require__("./src/components/UlButton/index.vue?vue&type=style&index=0&id=4d8018f7&prod&lang=scss&scoped=true&"),__webpack_require__("./node_modules/vue-loader/lib/runtime/componentNormalizer.js"));const __vuedocgen_export_0=Object(componentNormalizer.a)(components_UlButtonvue_type_script_lang_js_,(function render(){return(0,this._self._c)("button",{class:this.classes,attrs:{size:this.size,type:this.type},on:{click:this.handleClick}},[this._t("default")],2)}),[],!1,null,"4d8018f7",null).exports;var UlButton=__vuedocgen_export_0;__vuedocgen_export_0.__docgenInfo={displayName:"UlButton",exportName:"default",description:"",tags:{},props:[{name:"type",type:{name:"string"}},{name:"size",type:{name:"string"}}],events:[{name:"click",type:{names:["undefined"]}}],slots:[{name:"default"}]};__webpack_exports__.default={title:"Customize/UlButton",component:UlButton,argTypes:{type:{control:"select",options:["primary","success","warning","danger","info","link"],description:"预设样式"},size:{control:"radio",options:["large","small","mini"],description:"尺寸"}}};var Attributes=function(args,_ref){var argTypes=_ref.argTypes;return{props:Object.keys(argTypes),components:{UlButton:UlButton},template:'<ul-button v-bind="$props">Button</ul-button>'}}.bind({}),预定样式=function(){return{components:{UlButton:UlButton},template:'\n    <div>\n      <ul-button>默认按钮</ul-button>\n      <ul-button type="primary">主要按钮</ul-button>\n      <ul-button type="success">成功按钮</ul-button>\n      <ul-button type="info">信息按钮</ul-button>\n      <ul-button type="warning">警告按钮</ul-button>\n      <ul-button type="danger">危险按钮</ul-button>\n      <ul-button type="link">Link 链接</ul-button>\n    </div>\n  '}},尺寸=function(){return{components:{UlButton:UlButton},template:'\n    <div>\n      <ul-button size="large">大按钮</ul-button>\n      <ul-button>默认按钮</ul-button>\n      <ul-button size="small">小按钮</ul-button>\n      <ul-button size="mini">超小按钮</ul-button>\n    </div>\n  '}};Attributes.parameters=Object.assign({storySource:{source:"(args, { argTypes }) => ({\r\n  props: Object.keys(argTypes),\r\n  components: { UlButton },\r\n  template: '<ul-button v-bind=\"$props\">Button</ul-button>'\r\n})"}},Attributes.parameters),预定样式.parameters=Object.assign({storySource:{source:'() => ({\r\n  components: { UlButton },\r\n  template: `\r\n    <div>\r\n      <ul-button>默认按钮</ul-button>\r\n      <ul-button type="primary">主要按钮</ul-button>\r\n      <ul-button type="success">成功按钮</ul-button>\r\n      <ul-button type="info">信息按钮</ul-button>\r\n      <ul-button type="warning">警告按钮</ul-button>\r\n      <ul-button type="danger">危险按钮</ul-button>\r\n      <ul-button type="link">Link 链接</ul-button>\r\n    </div>\r\n  `\r\n})'}},预定样式.parameters),尺寸.parameters=Object.assign({storySource:{source:'() => ({\r\n  components: { UlButton },\r\n  template: `\r\n    <div>\r\n      <ul-button size="large">大按钮</ul-button>\r\n      <ul-button>默认按钮</ul-button>\r\n      <ul-button size="small">小按钮</ul-button>\r\n      <ul-button size="mini">超小按钮</ul-button>\r\n    </div>\r\n  `\r\n})'}},尺寸.parameters)},"./src/storybook/customize/UserInfo.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法}));var _components_UserInfo__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/UserInfo/index.vue");__webpack_exports__.default={title:"Customize/UserInfo",component:_components_UserInfo__WEBPACK_IMPORTED_MODULE_0__.default,argTypes:{imgUrl:{description:"头像地址"},name:{description:"名字"},email:{description:"邮箱"}}};var 基础用法=function(args,_ref){var argTypes=_ref.argTypes;return{props:Object.keys(argTypes),components:{UserInfo:_components_UserInfo__WEBPACK_IMPORTED_MODULE_0__.default},template:'<user-info v-bind="$props" />'}}.bind({});基础用法.args={imgUrl:"https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80",name:"liyuanfan",email:"liyuanfan@ulearning.com"},基础用法.parameters=Object.assign({storySource:{source:"(args, { argTypes }) => ({\r\n  props: Object.keys(argTypes),\r\n  components: { UserInfo },\r\n  template: '<user-info v-bind=\"$props\" />'\r\n})"}},基础用法.parameters)},"./src/storybook/customize/UserSelect.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法}));var components_UserSelectvue_type_script_lang_js_={props:["adminDTO"],data:function(){return{show:!1,adminList:[{userId:100,name:"测试学生-100",headImage:"https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80",mail:"test@ulearning.com"},{userId:101,name:"测试学生-101",headImage:"https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80",mail:"test@ulearning.com"},{userId:102,name:"测试学生-102",headImage:"https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80",mail:"test@ulearning.com"},{userId:103,name:"测试学生-103",headImage:"https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80",mail:"test@ulearning.com"},{userId:104,name:"测试学生-104",headImage:"https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80",mail:"test@ulearning.com"},{userId:105,name:"测试学生-105",headImage:"https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80",mail:"test@ulearning.com"},{userId:106,name:"测试学生-106",headImage:"https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80",mail:"test@ulearning.com"},{userId:107,name:"测试学生-107",headImage:"https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80",mail:"test@ulearning.com"},{userId:108,name:"测试学生-108",headImage:"https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80",mail:"test@ulearning.com"},{userId:109,name:"测试学生-109",headImage:"https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80",mail:"test@ulearning.com"}],keyword:"",loading:!1,noMore:!1}},methods:{showDropDown:async function(){this.show=!0},handleScroll:async function(){this.adminList.push(this.adminList)},seatchByKeyword:async function(){},selectedItem:function(userInfo){this.$emit("handle-select-user",userInfo)},cancelSelected:function(){this.$emit("handle-select-user",{})}},components:{"user-info":function(){return Promise.resolve().then(__webpack_require__.bind(null,"./src/components/UserInfo/index.vue"))}},mounted:function(){var _this=this;document.addEventListener("click",(function(e){"search-input"!==e.target.className&&"tipMsg"!==e.target.className&&(_this.show=!1)}))}},componentNormalizer=(__webpack_require__("./src/components/UserSelect/index.vue?vue&type=style&index=0&id=60d16142&prod&lang=scss&scoped=true&"),__webpack_require__("./node_modules/vue-loader/lib/runtime/componentNormalizer.js")),component=Object(componentNormalizer.a)(components_UserSelectvue_type_script_lang_js_,(function render(){var _vm=this,_c=_vm._self._c;return _c("div",{staticClass:"user-selector"},[_c("div",{staticClass:"user-selector__selected",on:{click:function($event){return $event.stopPropagation(),_vm.showDropDown.apply(null,arguments)}}},[_vm.adminDTO&&_vm.adminDTO.userId?[_c("user-info",{attrs:{imgUrl:_vm.adminDTO.headImage,name:_vm.adminDTO.name,email:_vm.adminDTO.email},nativeOn:{click:function($event){return _vm.showDropDown.apply(null,arguments)}}}),_vm._v(" "),_c("i",{staticClass:"el-icon-close",on:{click:function($event){return $event.target!==$event.currentTarget?null:_vm.cancelSelected.apply(null,arguments)}}})]:_c("div",{staticStyle:{color:"#dcdfe6"}},[_vm._v("选择管理员")])],2),_vm._v(" "),_c("transition",{attrs:{name:"fade"}},[_c("div",{directives:[{name:"show",rawName:"v-show",value:_vm.show,expression:"show"}],staticClass:"user-selector__dropdown"},[_c("input",{directives:[{name:"model",rawName:"v-model",value:_vm.keyword,expression:"keyword"}],ref:"search-input",staticClass:"search-input",attrs:{type:"text",placeholder:"请输入姓名或者邮箱，回车进行搜索"},domProps:{value:_vm.keyword},on:{keyup:function($event){return!$event.type.indexOf("key")&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")?null:_vm.seatchByKeyword.apply(null,arguments)},input:function($event){$event.target.composing||(_vm.keyword=$event.target.value)}}}),_vm._v(" "),_c("div",{ref:"listWrap",staticClass:"list-wrap",on:{scroll:function($event){return _vm.handleScroll($event)}}},[_c("div",{ref:"list",staticClass:"list"},_vm._l(_vm.adminList,(function(item){return _c("user-info",{key:item.userId,attrs:{imgUrl:item.headImage,name:item.name,email:item.mail},nativeOn:{click:function($event){return _vm.selectedItem(item)}}})})),1),_vm._v(" "),_c("p",{directives:[{name:"show",rawName:"v-show",value:_vm.loading,expression:"loading"}],staticClass:"tipMsg",staticStyle:{"text-align":"center"}},[_vm._v("加载中...")]),_vm._v(" "),_c("p",{directives:[{name:"show",rawName:"v-show",value:_vm.noMore,expression:"noMore"}],staticClass:"tipMsg",staticStyle:{"text-align":"center"}},[_vm._v("没有更多了")])])])])],1)}),[],!1,null,"60d16142",null);const __vuedocgen_export_0=component.exports;var UserSelect=__vuedocgen_export_0;__vuedocgen_export_0.__docgenInfo={exportName:"default",displayName:"UserSelect",description:"",tags:{},props:[{name:"adminDTO",type:{name:"undefined"}}],events:[{name:"handle-select-user",type:{names:["undefined"]}}]};__webpack_exports__.default={title:"Customize/UserSelect",component:UserSelect};var 基础用法=function(args,_ref){_ref.argTypes;return{components:{UserSelect:UserSelect},template:"\n  <user-select\n    :adminDTO=\"{\n      userId: '001',\n      headImage: 'https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80',\n      name: 'liyuanfan',\n      email: 'liyuanfan@ulearning.com'\n    }\"\n  ></user-select>\n  "}};基础用法.parameters=Object.assign({storySource:{source:"(args, { argTypes }) => ({\r\n  components: { UserSelect },\r\n  template: `\r\n  <user-select\r\n    :adminDTO=\"{\r\n      userId: '001',\r\n      headImage: 'https://www.ulearning.app/common/img/defaultHeaderLg.png?imageView2/1/w/80/h/80',\r\n      name: 'liyuanfan',\r\n      email: 'liyuanfan@ulearning.com'\r\n    }\"\r\n  ></user-select>\r\n  `\r\n})"}},基础用法.parameters)},"./src/storybook/element/Button.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"禁用状态",(function(){return 禁用状态})),__webpack_require__.d(__webpack_exports__,"文字按钮",(function(){return 文字按钮})),__webpack_require__.d(__webpack_exports__,"图标按钮",(function(){return 图标按钮})),__webpack_require__.d(__webpack_exports__,"按钮组",(function(){return 按钮组})),__webpack_require__.d(__webpack_exports__,"加载中",(function(){return 加载中})),__webpack_require__.d(__webpack_exports__,"不同尺寸",(function(){return 不同尺寸}));__webpack_exports__.default={title:"Element/Button",argTypes:{size:{control:{type:"radio"},options:["medium","small","mini"],description:"尺寸"},type:{control:{type:"select"},options:["primary","success","warning","danger","info","text"],description:"类型"},plain:{control:"boolean",defaultValue:!1,description:"是否朴素按钮"},round:{control:"boolean",defaultValue:!1,description:"是否圆角按钮"},circle:{control:"boolean",defaultValue:!1,description:"是否圆形按钮"},loading:{control:{type:"boolean"},defaultValue:!1,description:"是否加载中状态"},disabled:{control:"boolean",defaultValue:!1,description:"是否禁用状态"},icon:{control:"text",description:"图标类名"},autofocus:{control:"boolean",defaultValue:!1,description:"是否默认聚焦"},"native-type":{control:"radio",options:["button","submit","reset"],defaultValue:"button",description:"原生 type 属性"}},parameters:{docs:{description:{component:"常用的操作按钮。"}}}};var Attributes=function(){return{}},基础用法=function(){return{template:'\n  <div>\n    <el-row style="margin: 10px 0">\n      <el-button>默认按钮</el-button>\n      <el-button type="primary">主要按钮</el-button>\n      <el-button type="success">成功按钮</el-button>\n      <el-button type="info">信息按钮</el-button>\n      <el-button type="warning">警告按钮</el-button>\n      <el-button type="danger">危险按钮</el-button>\n    </el-row>\n\n    <el-row style="margin: 10px 0">\n      <el-button plain>朴素按钮</el-button>\n      <el-button type="primary" plain>主要按钮</el-button>\n      <el-button type="success" plain>成功按钮</el-button>\n      <el-button type="info" plain>信息按钮</el-button>\n      <el-button type="warning" plain>警告按钮</el-button>\n      <el-button type="danger" plain>危险按钮</el-button>\n    </el-row>\n\n    <el-row style="margin: 10px 0">\n      <el-button round>圆角按钮</el-button>\n      <el-button type="primary" round>主要按钮</el-button>\n      <el-button type="success" round>成功按钮</el-button>\n      <el-button type="info" round>信息按钮</el-button>\n      <el-button type="warning" round>警告按钮</el-button>\n      <el-button type="danger" round>危险按钮</el-button>\n    </el-row>\n\n    <el-row style="margin: 10px 0">\n      <el-button icon="el-icon-search" circle></el-button>\n      <el-button type="primary" icon="el-icon-edit" circle></el-button>\n      <el-button type="success" icon="el-icon-check" circle></el-button>\n      <el-button type="info" icon="el-icon-message" circle></el-button>\n      <el-button type="warning" icon="el-icon-star-off" circle></el-button>\n      <el-button type="danger" icon="el-icon-delete" circle></el-button>\n    </el-row>\n  </div>\n  '}};基础用法.parameters={docs:{description:{story:"基础的按钮用法。"}}};var 禁用状态=function(){return{template:'\n  <div>\n    <el-row style="margin: 10px 0">\n      <el-button disabled>默认按钮</el-button>\n      <el-button type="primary" disabled>主要按钮</el-button>\n      <el-button type="success" disabled>成功按钮</el-button>\n      <el-button type="info" disabled>信息按钮</el-button>\n      <el-button type="warning" disabled>警告按钮</el-button>\n      <el-button type="danger" disabled>危险按钮</el-button>\n    </el-row>\n\n    <el-row style="margin: 10px 0">\n      <el-button plain disabled>朴素按钮</el-button>\n      <el-button type="primary" plain disabled>主要按钮</el-button>\n      <el-button type="success" plain disabled>成功按钮</el-button>\n      <el-button type="info" plain disabled>信息按钮</el-button>\n      <el-button type="warning" plain disabled>警告按钮</el-button>\n      <el-button type="danger" plain disabled>危险按钮</el-button>\n    </el-row>\n  </div>\n  '}};禁用状态.parameters={docs:{description:{story:"按钮不可用状态。"}}};var 文字按钮=function(){return{template:'\n  <div>\n    <el-button type="text">文字按钮</el-button>\n    <el-button type="text" disabled>文字按钮</el-button>\n  </div>\n  '}};文字按钮.parameters={docs:{description:{story:"没有边框和背景色的按钮。"}}};var 图标按钮=function(){return{template:'\n  <div>\n    <el-button type="primary" icon="el-icon-edit"></el-button>\n    <el-button type="primary" icon="el-icon-share"></el-button>\n    <el-button type="primary" icon="el-icon-delete"></el-button>\n    <el-button type="primary" icon="el-icon-search">搜索</el-button>\n    <el-button type="primary">上传<i class="el-icon-upload el-icon--right"></i></el-button>\n  </div>\n  '}};图标按钮.parameters={docs:{description:{story:"带图标的按钮可增强辨识度（有文字）或节省空间（无文字）。"}}};var 按钮组=function(){return{template:'\n  <div>\n    <el-button-group>\n      <el-button type="primary" icon="el-icon-arrow-left">上一页</el-button>\n      <el-button type="primary">下一页<i class="el-icon-arrow-right el-icon--right"></i></el-button>\n    </el-button-group>\n    <el-button-group>\n      <el-button type="primary" icon="el-icon-edit"></el-button>\n      <el-button type="primary" icon="el-icon-share"></el-button>\n      <el-button type="primary" icon="el-icon-delete"></el-button>\n    </el-button-group>\n  </div>\n  '}};按钮组.parameters={docs:{description:{story:"以按钮组的方式出现，常用于多项类似操作。"}}};var 加载中=function(){return{template:'\n  <div>\n    <el-button type="primary" :loading="true">加载中</el-button>\n  </div>\n  '}};加载中.parameters={docs:{description:{story:"点击按钮后进行数据加载操作，在按钮上显示加载状态。"}}};var 不同尺寸=function(){return{template:'\n  <div>\n    <el-row>\n      <el-button>默认按钮</el-button>\n      <el-button size="medium">中等按钮</el-button>\n      <el-button size="small">小型按钮</el-button>\n      <el-button size="mini">超小按钮</el-button>\n    </el-row>\n    <el-row>\n      <el-button round>默认按钮</el-button>\n      <el-button size="medium" round>中等按钮</el-button>\n      <el-button size="small" round>小型按钮</el-button>\n      <el-button size="mini" round>超小按钮</el-button>\n    </el-row>\n  </div>\n  '}};不同尺寸.parameters={docs:{description:{story:"Button 组件提供除了默认值以外的三种尺寸，可以在不同场景下选择合适的按钮尺寸。"}}},Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),基础用法.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-row style="margin: 10px 0">\r\n      <el-button>默认按钮</el-button>\r\n      <el-button type="primary">主要按钮</el-button>\r\n      <el-button type="success">成功按钮</el-button>\r\n      <el-button type="info">信息按钮</el-button>\r\n      <el-button type="warning">警告按钮</el-button>\r\n      <el-button type="danger">危险按钮</el-button>\r\n    </el-row>\r\n\r\n    <el-row style="margin: 10px 0">\r\n      <el-button plain>朴素按钮</el-button>\r\n      <el-button type="primary" plain>主要按钮</el-button>\r\n      <el-button type="success" plain>成功按钮</el-button>\r\n      <el-button type="info" plain>信息按钮</el-button>\r\n      <el-button type="warning" plain>警告按钮</el-button>\r\n      <el-button type="danger" plain>危险按钮</el-button>\r\n    </el-row>\r\n\r\n    <el-row style="margin: 10px 0">\r\n      <el-button round>圆角按钮</el-button>\r\n      <el-button type="primary" round>主要按钮</el-button>\r\n      <el-button type="success" round>成功按钮</el-button>\r\n      <el-button type="info" round>信息按钮</el-button>\r\n      <el-button type="warning" round>警告按钮</el-button>\r\n      <el-button type="danger" round>危险按钮</el-button>\r\n    </el-row>\r\n\r\n    <el-row style="margin: 10px 0">\r\n      <el-button icon="el-icon-search" circle></el-button>\r\n      <el-button type="primary" icon="el-icon-edit" circle></el-button>\r\n      <el-button type="success" icon="el-icon-check" circle></el-button>\r\n      <el-button type="info" icon="el-icon-message" circle></el-button>\r\n      <el-button type="warning" icon="el-icon-star-off" circle></el-button>\r\n      <el-button type="danger" icon="el-icon-delete" circle></el-button>\r\n    </el-row>\r\n  </div>\r\n  `\r\n})'}},基础用法.parameters),禁用状态.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-row style="margin: 10px 0">\r\n      <el-button disabled>默认按钮</el-button>\r\n      <el-button type="primary" disabled>主要按钮</el-button>\r\n      <el-button type="success" disabled>成功按钮</el-button>\r\n      <el-button type="info" disabled>信息按钮</el-button>\r\n      <el-button type="warning" disabled>警告按钮</el-button>\r\n      <el-button type="danger" disabled>危险按钮</el-button>\r\n    </el-row>\r\n\r\n    <el-row style="margin: 10px 0">\r\n      <el-button plain disabled>朴素按钮</el-button>\r\n      <el-button type="primary" plain disabled>主要按钮</el-button>\r\n      <el-button type="success" plain disabled>成功按钮</el-button>\r\n      <el-button type="info" plain disabled>信息按钮</el-button>\r\n      <el-button type="warning" plain disabled>警告按钮</el-button>\r\n      <el-button type="danger" plain disabled>危险按钮</el-button>\r\n    </el-row>\r\n  </div>\r\n  `\r\n})'}},禁用状态.parameters),文字按钮.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-button type="text">文字按钮</el-button>\r\n    <el-button type="text" disabled>文字按钮</el-button>\r\n  </div>\r\n  `\r\n})'}},文字按钮.parameters),图标按钮.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-button type="primary" icon="el-icon-edit"></el-button>\r\n    <el-button type="primary" icon="el-icon-share"></el-button>\r\n    <el-button type="primary" icon="el-icon-delete"></el-button>\r\n    <el-button type="primary" icon="el-icon-search">搜索</el-button>\r\n    <el-button type="primary">上传<i class="el-icon-upload el-icon--right"></i></el-button>\r\n  </div>\r\n  `\r\n})'}},图标按钮.parameters),按钮组.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-button-group>\r\n      <el-button type="primary" icon="el-icon-arrow-left">上一页</el-button>\r\n      <el-button type="primary">下一页<i class="el-icon-arrow-right el-icon--right"></i></el-button>\r\n    </el-button-group>\r\n    <el-button-group>\r\n      <el-button type="primary" icon="el-icon-edit"></el-button>\r\n      <el-button type="primary" icon="el-icon-share"></el-button>\r\n      <el-button type="primary" icon="el-icon-delete"></el-button>\r\n    </el-button-group>\r\n  </div>\r\n  `\r\n})'}},按钮组.parameters),加载中.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-button type="primary" :loading="true">加载中</el-button>\r\n  </div>\r\n  `\r\n})'}},加载中.parameters),不同尺寸.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-row>\r\n      <el-button>默认按钮</el-button>\r\n      <el-button size="medium">中等按钮</el-button>\r\n      <el-button size="small">小型按钮</el-button>\r\n      <el-button size="mini">超小按钮</el-button>\r\n    </el-row>\r\n    <el-row>\r\n      <el-button round>默认按钮</el-button>\r\n      <el-button size="medium" round>中等按钮</el-button>\r\n      <el-button size="small" round>小型按钮</el-button>\r\n      <el-button size="mini" round>超小按钮</el-button>\r\n    </el-row>\r\n  </div>\r\n  `\r\n})'}},不同尺寸.parameters)},"./src/storybook/element/Cascader.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"禁用选项",(function(){return 禁用选项})),__webpack_require__.d(__webpack_exports__,"可清空",(function(){return 可清空})),__webpack_require__.d(__webpack_exports__,"仅显示最后一级",(function(){return 仅显示最后一级})),__webpack_require__.d(__webpack_exports__,"多选",(function(){return 多选})),__webpack_require__.d(__webpack_exports__,"选择任意一级选项",(function(){return 选择任意一级选项})),__webpack_require__.d(__webpack_exports__,"动态加载",(function(){return 动态加载})),__webpack_require__.d(__webpack_exports__,"可搜索",(function(){return 可搜索})),__webpack_require__.d(__webpack_exports__,"自定义节点内容",(function(){return 自定义节点内容})),__webpack_require__.d(__webpack_exports__,"级联面板",(function(){return 级联面板}));__webpack_exports__.default={title:"Element/Cascader",argTypes:{value:{control:"text",description:"选中项绑定值"},options:{control:"object",description:"可选项数据源，键名可通过 Props 属性配置"},size:{control:"radio",options:["medium","small","mini"],description:"配置选项"},placeholder:{control:"text",defaultValue:"请选择",description:"输入框占位文本"},disabled:{control:"boolean",defaultValue:!1,description:"是否禁用"},clearable:{control:"boolean",defaultValue:!1,description:"是否支持清空选项"},"show-all-levels":{control:"boolean",defaultValue:!0,description:"输入框中是否显示选中值的完整路径"},"collapse-tags":{control:"boolean",defaultValue:!1,description:"多选模式下是否折叠Tag"},separator:{control:"text",default:"/",description:"选项分隔符"},filterable:{control:"boolean",defaultValue:!1,description:"是否可搜索选项"},"filter-method":{control:"object",description:"自定义搜索逻辑，第一个参数是节点node，第二个参数是搜索关键词keyword，通过返回布尔值表示是否命中"},debounce:{control:"number",defaultValue:300,description:"搜索关键词输入的去抖延迟，毫秒"},"before-filter":{control:"object",description:"筛选之前的钩子，参数为输入的值，若返回 false 或者返回 Promise 且被 reject，则停止筛选"},"popper-class":{control:"text",description:"自定义浮层类名"}},parameters:{docs:{description:{component:"当一个数据集合有清晰的层级结构时，可通过级联选择器逐级查看并选择。"}}}};var Attributes=function(){return{}},基础用法=function(){return{template:'\n  <div>\n    <div class="block">\n    <span class="demonstration">默认 click 触发子菜单</span>\n    <el-cascader \n      v-model="value" \n      :options="options" \n      @change="handleChange"></el-cascader>\n    </div>\n    <div class="block">\n      <span class="demonstration">hover 触发子菜单</span>\n      <el-cascader\n        v-model="value"\n        :options="options"\n        :props="{ expandTrigger: \'hover\' }"\n        @change="handleChange"></el-cascader>\n    </div>\n  </div>\n  ',data:function(){return{value:[],options:[{value:"zhinan",label:"指南",children:[{value:"shejiyuanze",label:"设计原则",children:[{value:"yizhi",label:"一致"},{value:"fankui",label:"反馈"},{value:"xiaolv",label:"效率"},{value:"kekong",label:"可控"}]},{value:"daohang",label:"导航",children:[{value:"cexiangdaohang",label:"侧向导航"},{value:"dingbudaohang",label:"顶部导航"}]}]},{value:"zujian",label:"组件",children:[{value:"basic",label:"Basic",children:[{value:"layout",label:"Layout 布局"},{value:"color",label:"Color 色彩"},{value:"typography",label:"Typography 字体"},{value:"icon",label:"Icon 图标"},{value:"button",label:"Button 按钮"}]},{value:"form",label:"Form",children:[{value:"radio",label:"Radio 单选框"},{value:"checkbox",label:"Checkbox 多选框"},{value:"input",label:"Input 输入框"},{value:"input-number",label:"InputNumber 计数器"},{value:"select",label:"Select 选择器"},{value:"cascader",label:"Cascader 级联选择器"},{value:"switch",label:"Switch 开关"},{value:"slider",label:"Slider 滑块"},{value:"time-picker",label:"TimePicker 时间选择器"},{value:"date-picker",label:"DatePicker 日期选择器"},{value:"datetime-picker",label:"DateTimePicker 日期时间选择器"},{value:"upload",label:"Upload 上传"},{value:"rate",label:"Rate 评分"},{value:"form",label:"Form 表单"}]},{value:"data",label:"Data",children:[{value:"table",label:"Table 表格"},{value:"tag",label:"Tag 标签"},{value:"progress",label:"Progress 进度条"},{value:"tree",label:"Tree 树形控件"},{value:"pagination",label:"Pagination 分页"},{value:"badge",label:"Badge 标记"}]},{value:"notice",label:"Notice",children:[{value:"alert",label:"Alert 警告"},{value:"loading",label:"Loading 加载"},{value:"message",label:"Message 消息提示"},{value:"message-box",label:"MessageBox 弹框"},{value:"notification",label:"Notification 通知"}]},{value:"navigation",label:"Navigation",children:[{value:"menu",label:"NavMenu 导航菜单"},{value:"tabs",label:"Tabs 标签页"},{value:"breadcrumb",label:"Breadcrumb 面包屑"},{value:"dropdown",label:"Dropdown 下拉菜单"},{value:"steps",label:"Steps 步骤条"}]},{value:"others",label:"Others",children:[{value:"dialog",label:"Dialog 对话框"},{value:"tooltip",label:"Tooltip 文字提示"},{value:"popover",label:"Popover 弹出框"},{value:"card",label:"Card 卡片"},{value:"carousel",label:"Carousel 走马灯"},{value:"collapse",label:"Collapse 折叠面板"}]}]},{value:"ziyuan",label:"资源",children:[{value:"axure",label:"Axure Components"},{value:"sketch",label:"Sketch Templates"},{value:"jiaohu",label:"组件交互文档"}]}]}},methods:{handleChange:function(value){console.log(value)}}}};基础用法.parameters={docs:{description:{story:"有两种触发子菜单的方式"}}};var 禁用选项=function(){return{template:'<el-cascader :options="options"></el-cascader>',data:function(){return{options:[{value:"zhinan",label:"指南",disabled:!0,children:[{value:"shejiyuanze",label:"设计原则",children:[{value:"yizhi",label:"一致"},{value:"fankui",label:"反馈"},{value:"xiaolv",label:"效率"},{value:"kekong",label:"可控"}]},{value:"daohang",label:"导航",children:[{value:"cexiangdaohang",label:"侧向导航"},{value:"dingbudaohang",label:"顶部导航"}]}]},{value:"zujian",label:"组件",children:[{value:"basic",label:"Basic",children:[{value:"layout",label:"Layout 布局"},{value:"color",label:"Color 色彩"},{value:"typography",label:"Typography 字体"},{value:"icon",label:"Icon 图标"},{value:"button",label:"Button 按钮"}]},{value:"form",label:"Form",children:[{value:"radio",label:"Radio 单选框"},{value:"checkbox",label:"Checkbox 多选框"},{value:"input",label:"Input 输入框"},{value:"input-number",label:"InputNumber 计数器"},{value:"select",label:"Select 选择器"},{value:"cascader",label:"Cascader 级联选择器"},{value:"switch",label:"Switch 开关"},{value:"slider",label:"Slider 滑块"},{value:"time-picker",label:"TimePicker 时间选择器"},{value:"date-picker",label:"DatePicker 日期选择器"},{value:"datetime-picker",label:"DateTimePicker 日期时间选择器"},{value:"upload",label:"Upload 上传"},{value:"rate",label:"Rate 评分"},{value:"form",label:"Form 表单"}]},{value:"data",label:"Data",children:[{value:"table",label:"Table 表格"},{value:"tag",label:"Tag 标签"},{value:"progress",label:"Progress 进度条"},{value:"tree",label:"Tree 树形控件"},{value:"pagination",label:"Pagination 分页"},{value:"badge",label:"Badge 标记"}]},{value:"notice",label:"Notice",children:[{value:"alert",label:"Alert 警告"},{value:"loading",label:"Loading 加载"},{value:"message",label:"Message 消息提示"},{value:"message-box",label:"MessageBox 弹框"},{value:"notification",label:"Notification 通知"}]},{value:"navigation",label:"Navigation",children:[{value:"menu",label:"NavMenu 导航菜单"},{value:"tabs",label:"Tabs 标签页"},{value:"breadcrumb",label:"Breadcrumb 面包屑"},{value:"dropdown",label:"Dropdown 下拉菜单"},{value:"steps",label:"Steps 步骤条"}]},{value:"others",label:"Others",children:[{value:"dialog",label:"Dialog 对话框"},{value:"tooltip",label:"Tooltip 文字提示"},{value:"popover",label:"Popover 弹出框"},{value:"card",label:"Card 卡片"},{value:"carousel",label:"Carousel 走马灯"},{value:"collapse",label:"Collapse 折叠面板"}]}]},{value:"ziyuan",label:"资源",children:[{value:"axure",label:"Axure Components"},{value:"sketch",label:"Sketch Templates"},{value:"jiaohu",label:"组件交互文档"}]}]}}}};禁用选项.parameters={docs:{description:{story:"通过在数据源中设置 disabled 字段来声明该选项是禁用的"}}};var 可清空=function(){return{template:'<el-cascader :options="options" clearable></el-cascader>',data:function(){return{options:[{value:"zhinan",label:"指南",children:[{value:"shejiyuanze",label:"设计原则",children:[{value:"yizhi",label:"一致"},{value:"fankui",label:"反馈"},{value:"xiaolv",label:"效率"},{value:"kekong",label:"可控"}]},{value:"daohang",label:"导航",children:[{value:"cexiangdaohang",label:"侧向导航"},{value:"dingbudaohang",label:"顶部导航"}]}]},{value:"zujian",label:"组件",children:[{value:"basic",label:"Basic",children:[{value:"layout",label:"Layout 布局"},{value:"color",label:"Color 色彩"},{value:"typography",label:"Typography 字体"},{value:"icon",label:"Icon 图标"},{value:"button",label:"Button 按钮"}]},{value:"form",label:"Form",children:[{value:"radio",label:"Radio 单选框"},{value:"checkbox",label:"Checkbox 多选框"},{value:"input",label:"Input 输入框"},{value:"input-number",label:"InputNumber 计数器"},{value:"select",label:"Select 选择器"},{value:"cascader",label:"Cascader 级联选择器"},{value:"switch",label:"Switch 开关"},{value:"slider",label:"Slider 滑块"},{value:"time-picker",label:"TimePicker 时间选择器"},{value:"date-picker",label:"DatePicker 日期选择器"},{value:"datetime-picker",label:"DateTimePicker 日期时间选择器"},{value:"upload",label:"Upload 上传"},{value:"rate",label:"Rate 评分"},{value:"form",label:"Form 表单"}]},{value:"data",label:"Data",children:[{value:"table",label:"Table 表格"},{value:"tag",label:"Tag 标签"},{value:"progress",label:"Progress 进度条"},{value:"tree",label:"Tree 树形控件"},{value:"pagination",label:"Pagination 分页"},{value:"badge",label:"Badge 标记"}]},{value:"notice",label:"Notice",children:[{value:"alert",label:"Alert 警告"},{value:"loading",label:"Loading 加载"},{value:"message",label:"Message 消息提示"},{value:"message-box",label:"MessageBox 弹框"},{value:"notification",label:"Notification 通知"}]},{value:"navigation",label:"Navigation",children:[{value:"menu",label:"NavMenu 导航菜单"},{value:"tabs",label:"Tabs 标签页"},{value:"breadcrumb",label:"Breadcrumb 面包屑"},{value:"dropdown",label:"Dropdown 下拉菜单"},{value:"steps",label:"Steps 步骤条"}]},{value:"others",label:"Others",children:[{value:"dialog",label:"Dialog 对话框"},{value:"tooltip",label:"Tooltip 文字提示"},{value:"popover",label:"Popover 弹出框"},{value:"card",label:"Card 卡片"},{value:"carousel",label:"Carousel 走马灯"},{value:"collapse",label:"Collapse 折叠面板"}]}]},{value:"ziyuan",label:"资源",children:[{value:"axure",label:"Axure Components"},{value:"sketch",label:"Sketch Templates"},{value:"jiaohu",label:"组件交互文档"}]}]}}}};可清空.parameters={docs:{description:{story:"通过 clearable 设置输入框可清空"}}};var 仅显示最后一级=function(){return{template:'<el-cascader :options="options" :show-all-levels="false"></el-cascader>',data:function(){return{options:[{value:"zhinan",label:"指南",children:[{value:"shejiyuanze",label:"设计原则",children:[{value:"yizhi",label:"一致"},{value:"fankui",label:"反馈"},{value:"xiaolv",label:"效率"},{value:"kekong",label:"可控"}]},{value:"daohang",label:"导航",children:[{value:"cexiangdaohang",label:"侧向导航"},{value:"dingbudaohang",label:"顶部导航"}]}]},{value:"zujian",label:"组件",children:[{value:"basic",label:"Basic",children:[{value:"layout",label:"Layout 布局"},{value:"color",label:"Color 色彩"},{value:"typography",label:"Typography 字体"},{value:"icon",label:"Icon 图标"},{value:"button",label:"Button 按钮"}]},{value:"form",label:"Form",children:[{value:"radio",label:"Radio 单选框"},{value:"checkbox",label:"Checkbox 多选框"},{value:"input",label:"Input 输入框"},{value:"input-number",label:"InputNumber 计数器"},{value:"select",label:"Select 选择器"},{value:"cascader",label:"Cascader 级联选择器"},{value:"switch",label:"Switch 开关"},{value:"slider",label:"Slider 滑块"},{value:"time-picker",label:"TimePicker 时间选择器"},{value:"date-picker",label:"DatePicker 日期选择器"},{value:"datetime-picker",label:"DateTimePicker 日期时间选择器"},{value:"upload",label:"Upload 上传"},{value:"rate",label:"Rate 评分"},{value:"form",label:"Form 表单"}]},{value:"data",label:"Data",children:[{value:"table",label:"Table 表格"},{value:"tag",label:"Tag 标签"},{value:"progress",label:"Progress 进度条"},{value:"tree",label:"Tree 树形控件"},{value:"pagination",label:"Pagination 分页"},{value:"badge",label:"Badge 标记"}]},{value:"notice",label:"Notice",children:[{value:"alert",label:"Alert 警告"},{value:"loading",label:"Loading 加载"},{value:"message",label:"Message 消息提示"},{value:"message-box",label:"MessageBox 弹框"},{value:"notification",label:"Notification 通知"}]},{value:"navigation",label:"Navigation",children:[{value:"menu",label:"NavMenu 导航菜单"},{value:"tabs",label:"Tabs 标签页"},{value:"breadcrumb",label:"Breadcrumb 面包屑"},{value:"dropdown",label:"Dropdown 下拉菜单"},{value:"steps",label:"Steps 步骤条"}]},{value:"others",label:"Others",children:[{value:"dialog",label:"Dialog 对话框"},{value:"tooltip",label:"Tooltip 文字提示"},{value:"popover",label:"Popover 弹出框"},{value:"card",label:"Card 卡片"},{value:"carousel",label:"Carousel 走马灯"},{value:"collapse",label:"Collapse 折叠面板"}]}]},{value:"ziyuan",label:"资源",children:[{value:"axure",label:"Axure Components"},{value:"sketch",label:"Sketch Templates"},{value:"jiaohu",label:"组件交互文档"}]}]}}}};仅显示最后一级.parameters={docs:{description:{story:"可以仅在输入框中显示选中项最后一级的标签，而不是选中项所在的完整路径。"}}};var 多选=function(){return{template:'\n  <div>\n    <div class="block">\n    <span class="demonstration">默认显示所有Tag</span>\n    <el-cascader\n      :options="options"\n      :props="props"\n      clearable></el-cascader>\n    </div>\n    <div class="block">\n      <span class="demonstration">折叠展示Tag</span>\n      <el-cascader\n        :options="options"\n        :props="props"\n        collapse-tags\n        clearable></el-cascader>\n    </div>\n  </div>\n  ',data:function(){return{props:{multiple:!0},options:[{value:1,label:"东南",children:[{value:2,label:"上海",children:[{value:3,label:"普陀"},{value:4,label:"黄埔"},{value:5,label:"徐汇"}]},{value:7,label:"江苏",children:[{value:8,label:"南京"},{value:9,label:"苏州"},{value:10,label:"无锡"}]},{value:12,label:"浙江",children:[{value:13,label:"杭州"},{value:14,label:"宁波"},{value:15,label:"嘉兴"}]}]},{value:17,label:"西北",children:[{value:18,label:"陕西",children:[{value:19,label:"西安"},{value:20,label:"延安"}]},{value:21,label:"新疆维吾尔族自治区",children:[{value:22,label:"乌鲁木齐"},{value:23,label:"克拉玛依"}]}]}]}}}};多选.parameters={docs:{description:{story:"可通过 props.multiple = true 来开启多选模式"}}};var 选择任意一级选项=function(){return{template:'\n  <div>\n    <div class="block">\n    <span class="demonstration">单选选择任意一级选项</span>\n    <el-cascader\n      :options="options"\n      :props="{ checkStrictly: true }"\n      clearable></el-cascader>\n    </div>\n    <div class="block">\n      <span class="demonstration">多选选择任意一级选项</span>\n      <el-cascader\n        :options="options"\n        :props="{ multiple: true, checkStrictly: true }"\n        clearable></el-cascader>\n    </div>\n  </div>\n  ',data:function(){return{options:[{value:"zhinan",label:"指南",children:[{value:"shejiyuanze",label:"设计原则",children:[{value:"yizhi",label:"一致"},{value:"fankui",label:"反馈"},{value:"xiaolv",label:"效率"},{value:"kekong",label:"可控"}]},{value:"daohang",label:"导航",children:[{value:"cexiangdaohang",label:"侧向导航"},{value:"dingbudaohang",label:"顶部导航"}]}]},{value:"zujian",label:"组件",children:[{value:"basic",label:"Basic",children:[{value:"layout",label:"Layout 布局"},{value:"color",label:"Color 色彩"},{value:"typography",label:"Typography 字体"},{value:"icon",label:"Icon 图标"},{value:"button",label:"Button 按钮"}]},{value:"form",label:"Form",children:[{value:"radio",label:"Radio 单选框"},{value:"checkbox",label:"Checkbox 多选框"},{value:"input",label:"Input 输入框"},{value:"input-number",label:"InputNumber 计数器"},{value:"select",label:"Select 选择器"},{value:"cascader",label:"Cascader 级联选择器"},{value:"switch",label:"Switch 开关"},{value:"slider",label:"Slider 滑块"},{value:"time-picker",label:"TimePicker 时间选择器"},{value:"date-picker",label:"DatePicker 日期选择器"},{value:"datetime-picker",label:"DateTimePicker 日期时间选择器"},{value:"upload",label:"Upload 上传"},{value:"rate",label:"Rate 评分"},{value:"form",label:"Form 表单"}]},{value:"data",label:"Data",children:[{value:"table",label:"Table 表格"},{value:"tag",label:"Tag 标签"},{value:"progress",label:"Progress 进度条"},{value:"tree",label:"Tree 树形控件"},{value:"pagination",label:"Pagination 分页"},{value:"badge",label:"Badge 标记"}]},{value:"notice",label:"Notice",children:[{value:"alert",label:"Alert 警告"},{value:"loading",label:"Loading 加载"},{value:"message",label:"Message 消息提示"},{value:"message-box",label:"MessageBox 弹框"},{value:"notification",label:"Notification 通知"}]},{value:"navigation",label:"Navigation",children:[{value:"menu",label:"NavMenu 导航菜单"},{value:"tabs",label:"Tabs 标签页"},{value:"breadcrumb",label:"Breadcrumb 面包屑"},{value:"dropdown",label:"Dropdown 下拉菜单"},{value:"steps",label:"Steps 步骤条"}]},{value:"others",label:"Others",children:[{value:"dialog",label:"Dialog 对话框"},{value:"tooltip",label:"Tooltip 文字提示"},{value:"popover",label:"Popover 弹出框"},{value:"card",label:"Card 卡片"},{value:"carousel",label:"Carousel 走马灯"},{value:"collapse",label:"Collapse 折叠面板"}]}]},{value:"ziyuan",label:"资源",children:[{value:"axure",label:"Axure Components"},{value:"sketch",label:"Sketch Templates"},{value:"jiaohu",label:"组件交互文档"}]}]}}}};选择任意一级选项.parameters={docs:{description:{story:"在单选模式下，你只能选择叶子节点；而在多选模式下，勾选父节点真正选中的都是叶子节点。启用该功能后，可让父子节点取消关联，选择任意一级选项。"}}};var 动态加载=function(){return{template:'<el-cascader :props="props"></el-cascader>',data:function(){var id=0;return{props:{lazy:!0,lazyLoad:function(node,resolve){var level=node.level;setTimeout((function(){var nodes=Array.from({length:level+1}).map((function(item){return{value:++id,label:`选项${id}`,leaf:level>=2}}));resolve(nodes)}),1e3)}}}}}};动态加载.parameters={docs:{description:{story:"当选中某一级时，动态加载该级下的选项。"}}};var 可搜索=function(){return{template:'\n  <div>\n    <div class="block">\n    <span class="demonstration">单选可搜索</span>\n    <el-cascader\n      placeholder="试试搜索：指南"\n      :options="options"\n      filterable></el-cascader>\n    </div>\n    <div class="block">\n      <span class="demonstration">多选可搜索</span>\n      <el-cascader\n        placeholder="试试搜索：指南"\n        :options="options"\n        :props="{ multiple: true }"\n        filterable></el-cascader>\n    </div>\n  </div>\n  ',data:function(){return{options:[{value:"zhinan",label:"指南",children:[{value:"shejiyuanze",label:"设计原则",children:[{value:"yizhi",label:"一致"},{value:"fankui",label:"反馈"},{value:"xiaolv",label:"效率"},{value:"kekong",label:"可控"}]},{value:"daohang",label:"导航",children:[{value:"cexiangdaohang",label:"侧向导航"},{value:"dingbudaohang",label:"顶部导航"}]}]},{value:"zujian",label:"组件",children:[{value:"basic",label:"Basic",children:[{value:"layout",label:"Layout 布局"},{value:"color",label:"Color 色彩"},{value:"typography",label:"Typography 字体"},{value:"icon",label:"Icon 图标"},{value:"button",label:"Button 按钮"}]},{value:"form",label:"Form",children:[{value:"radio",label:"Radio 单选框"},{value:"checkbox",label:"Checkbox 多选框"},{value:"input",label:"Input 输入框"},{value:"input-number",label:"InputNumber 计数器"},{value:"select",label:"Select 选择器"},{value:"cascader",label:"Cascader 级联选择器"},{value:"switch",label:"Switch 开关"},{value:"slider",label:"Slider 滑块"},{value:"time-picker",label:"TimePicker 时间选择器"},{value:"date-picker",label:"DatePicker 日期选择器"},{value:"datetime-picker",label:"DateTimePicker 日期时间选择器"},{value:"upload",label:"Upload 上传"},{value:"rate",label:"Rate 评分"},{value:"form",label:"Form 表单"}]},{value:"data",label:"Data",children:[{value:"table",label:"Table 表格"},{value:"tag",label:"Tag 标签"},{value:"progress",label:"Progress 进度条"},{value:"tree",label:"Tree 树形控件"},{value:"pagination",label:"Pagination 分页"},{value:"badge",label:"Badge 标记"}]},{value:"notice",label:"Notice",children:[{value:"alert",label:"Alert 警告"},{value:"loading",label:"Loading 加载"},{value:"message",label:"Message 消息提示"},{value:"message-box",label:"MessageBox 弹框"},{value:"notification",label:"Notification 通知"}]},{value:"navigation",label:"Navigation",children:[{value:"menu",label:"NavMenu 导航菜单"},{value:"tabs",label:"Tabs 标签页"},{value:"breadcrumb",label:"Breadcrumb 面包屑"},{value:"dropdown",label:"Dropdown 下拉菜单"},{value:"steps",label:"Steps 步骤条"}]},{value:"others",label:"Others",children:[{value:"dialog",label:"Dialog 对话框"},{value:"tooltip",label:"Tooltip 文字提示"},{value:"popover",label:"Popover 弹出框"},{value:"card",label:"Card 卡片"},{value:"carousel",label:"Carousel 走马灯"},{value:"collapse",label:"Collapse 折叠面板"}]}]},{value:"ziyuan",label:"资源",children:[{value:"axure",label:"Axure Components"},{value:"sketch",label:"Sketch Templates"},{value:"jiaohu",label:"组件交互文档"}]}]}}}};可搜索.parameters={docs:{description:{story:"可以快捷地搜索选项并选择。"}}};var 自定义节点内容=function(){return{template:'\n  <el-cascader :options="options">\n    <template slot-scope="{ node, data }">\n      <span>{{ data.label }}</span>\n      <span v-if="!node.isLeaf"> ({{ data.children.length }}) </span>\n    </template>\n  </el-cascader>\n  ',data:function(){return{options:[{value:"zhinan",label:"指南",children:[{value:"shejiyuanze",label:"设计原则",children:[{value:"yizhi",label:"一致"},{value:"fankui",label:"反馈"},{value:"xiaolv",label:"效率"},{value:"kekong",label:"可控"}]},{value:"daohang",label:"导航",children:[{value:"cexiangdaohang",label:"侧向导航"},{value:"dingbudaohang",label:"顶部导航"}]}]},{value:"zujian",label:"组件",children:[{value:"basic",label:"Basic",children:[{value:"layout",label:"Layout 布局"},{value:"color",label:"Color 色彩"},{value:"typography",label:"Typography 字体"},{value:"icon",label:"Icon 图标"},{value:"button",label:"Button 按钮"}]},{value:"form",label:"Form",children:[{value:"radio",label:"Radio 单选框"},{value:"checkbox",label:"Checkbox 多选框"},{value:"input",label:"Input 输入框"},{value:"input-number",label:"InputNumber 计数器"},{value:"select",label:"Select 选择器"},{value:"cascader",label:"Cascader 级联选择器"},{value:"switch",label:"Switch 开关"},{value:"slider",label:"Slider 滑块"},{value:"time-picker",label:"TimePicker 时间选择器"},{value:"date-picker",label:"DatePicker 日期选择器"},{value:"datetime-picker",label:"DateTimePicker 日期时间选择器"},{value:"upload",label:"Upload 上传"},{value:"rate",label:"Rate 评分"},{value:"form",label:"Form 表单"}]},{value:"data",label:"Data",children:[{value:"table",label:"Table 表格"},{value:"tag",label:"Tag 标签"},{value:"progress",label:"Progress 进度条"},{value:"tree",label:"Tree 树形控件"},{value:"pagination",label:"Pagination 分页"},{value:"badge",label:"Badge 标记"}]},{value:"notice",label:"Notice",children:[{value:"alert",label:"Alert 警告"},{value:"loading",label:"Loading 加载"},{value:"message",label:"Message 消息提示"},{value:"message-box",label:"MessageBox 弹框"},{value:"notification",label:"Notification 通知"}]},{value:"navigation",label:"Navigation",children:[{value:"menu",label:"NavMenu 导航菜单"},{value:"tabs",label:"Tabs 标签页"},{value:"breadcrumb",label:"Breadcrumb 面包屑"},{value:"dropdown",label:"Dropdown 下拉菜单"},{value:"steps",label:"Steps 步骤条"}]},{value:"others",label:"Others",children:[{value:"dialog",label:"Dialog 对话框"},{value:"tooltip",label:"Tooltip 文字提示"},{value:"popover",label:"Popover 弹出框"},{value:"card",label:"Card 卡片"},{value:"carousel",label:"Carousel 走马灯"},{value:"collapse",label:"Collapse 折叠面板"}]}]},{value:"ziyuan",label:"资源",children:[{value:"axure",label:"Axure Components"},{value:"sketch",label:"Sketch Templates"},{value:"jiaohu",label:"组件交互文档"}]}]}}}};自定义节点内容.parameters={docs:{description:{story:"可以自定义备选项的节点内容"}}};var 级联面板=function(){return{template:'<el-cascader-panel :options="options"></el-cascader-panel>',data:function(){return{options:[{value:"zhinan",label:"指南",children:[{value:"shejiyuanze",label:"设计原则",children:[{value:"yizhi",label:"一致"},{value:"fankui",label:"反馈"},{value:"xiaolv",label:"效率"},{value:"kekong",label:"可控"}]},{value:"daohang",label:"导航",children:[{value:"cexiangdaohang",label:"侧向导航"},{value:"dingbudaohang",label:"顶部导航"}]}]},{value:"zujian",label:"组件",children:[{value:"basic",label:"Basic",children:[{value:"layout",label:"Layout 布局"},{value:"color",label:"Color 色彩"},{value:"typography",label:"Typography 字体"},{value:"icon",label:"Icon 图标"},{value:"button",label:"Button 按钮"}]},{value:"form",label:"Form",children:[{value:"radio",label:"Radio 单选框"},{value:"checkbox",label:"Checkbox 多选框"},{value:"input",label:"Input 输入框"},{value:"input-number",label:"InputNumber 计数器"},{value:"select",label:"Select 选择器"},{value:"cascader",label:"Cascader 级联选择器"},{value:"switch",label:"Switch 开关"},{value:"slider",label:"Slider 滑块"},{value:"time-picker",label:"TimePicker 时间选择器"},{value:"date-picker",label:"DatePicker 日期选择器"},{value:"datetime-picker",label:"DateTimePicker 日期时间选择器"},{value:"upload",label:"Upload 上传"},{value:"rate",label:"Rate 评分"},{value:"form",label:"Form 表单"}]},{value:"data",label:"Data",children:[{value:"table",label:"Table 表格"},{value:"tag",label:"Tag 标签"},{value:"progress",label:"Progress 进度条"},{value:"tree",label:"Tree 树形控件"},{value:"pagination",label:"Pagination 分页"},{value:"badge",label:"Badge 标记"}]},{value:"notice",label:"Notice",children:[{value:"alert",label:"Alert 警告"},{value:"loading",label:"Loading 加载"},{value:"message",label:"Message 消息提示"},{value:"message-box",label:"MessageBox 弹框"},{value:"notification",label:"Notification 通知"}]},{value:"navigation",label:"Navigation",children:[{value:"menu",label:"NavMenu 导航菜单"},{value:"tabs",label:"Tabs 标签页"},{value:"breadcrumb",label:"Breadcrumb 面包屑"},{value:"dropdown",label:"Dropdown 下拉菜单"},{value:"steps",label:"Steps 步骤条"}]},{value:"others",label:"Others",children:[{value:"dialog",label:"Dialog 对话框"},{value:"tooltip",label:"Tooltip 文字提示"},{value:"popover",label:"Popover 弹出框"},{value:"card",label:"Card 卡片"},{value:"carousel",label:"Carousel 走马灯"},{value:"collapse",label:"Collapse 折叠面板"}]}]},{value:"ziyuan",label:"资源",children:[{value:"axure",label:"Axure Components"},{value:"sketch",label:"Sketch Templates"},{value:"jiaohu",label:"组件交互文档"}]}]}}}};级联面板.parameters={docs:{description:{story:"级联面板是级联选择器的核心组件，与级联选择器一样，有单选、多选、动态加载等多种功能。"}}},Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),基础用法.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <div>\r\n    <div class=\"block\">\r\n    <span class=\"demonstration\">默认 click 触发子菜单</span>\r\n    <el-cascader \r\n      v-model=\"value\" \r\n      :options=\"options\" \r\n      @change=\"handleChange\"></el-cascader>\r\n    </div>\r\n    <div class=\"block\">\r\n      <span class=\"demonstration\">hover 触发子菜单</span>\r\n      <el-cascader\r\n        v-model=\"value\"\r\n        :options=\"options\"\r\n        :props=\"{ expandTrigger: 'hover' }\"\r\n        @change=\"handleChange\"></el-cascader>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: [],\r\n      options: [\r\n        {\r\n          value: 'zhinan',\r\n          label: '指南',\r\n          children: [\r\n            {\r\n              value: 'shejiyuanze',\r\n              label: '设计原则',\r\n              children: [\r\n                {\r\n                  value: 'yizhi',\r\n                  label: '一致'\r\n                },\r\n                {\r\n                  value: 'fankui',\r\n                  label: '反馈'\r\n                },\r\n                {\r\n                  value: 'xiaolv',\r\n                  label: '效率'\r\n                },\r\n                {\r\n                  value: 'kekong',\r\n                  label: '可控'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'daohang',\r\n              label: '导航',\r\n              children: [\r\n                {\r\n                  value: 'cexiangdaohang',\r\n                  label: '侧向导航'\r\n                },\r\n                {\r\n                  value: 'dingbudaohang',\r\n                  label: '顶部导航'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'zujian',\r\n          label: '组件',\r\n          children: [\r\n            {\r\n              value: 'basic',\r\n              label: 'Basic',\r\n              children: [\r\n                {\r\n                  value: 'layout',\r\n                  label: 'Layout 布局'\r\n                },\r\n                {\r\n                  value: 'color',\r\n                  label: 'Color 色彩'\r\n                },\r\n                {\r\n                  value: 'typography',\r\n                  label: 'Typography 字体'\r\n                },\r\n                {\r\n                  value: 'icon',\r\n                  label: 'Icon 图标'\r\n                },\r\n                {\r\n                  value: 'button',\r\n                  label: 'Button 按钮'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'form',\r\n              label: 'Form',\r\n              children: [\r\n                {\r\n                  value: 'radio',\r\n                  label: 'Radio 单选框'\r\n                },\r\n                {\r\n                  value: 'checkbox',\r\n                  label: 'Checkbox 多选框'\r\n                },\r\n                {\r\n                  value: 'input',\r\n                  label: 'Input 输入框'\r\n                },\r\n                {\r\n                  value: 'input-number',\r\n                  label: 'InputNumber 计数器'\r\n                },\r\n                {\r\n                  value: 'select',\r\n                  label: 'Select 选择器'\r\n                },\r\n                {\r\n                  value: 'cascader',\r\n                  label: 'Cascader 级联选择器'\r\n                },\r\n                {\r\n                  value: 'switch',\r\n                  label: 'Switch 开关'\r\n                },\r\n                {\r\n                  value: 'slider',\r\n                  label: 'Slider 滑块'\r\n                },\r\n                {\r\n                  value: 'time-picker',\r\n                  label: 'TimePicker 时间选择器'\r\n                },\r\n                {\r\n                  value: 'date-picker',\r\n                  label: 'DatePicker 日期选择器'\r\n                },\r\n                {\r\n                  value: 'datetime-picker',\r\n                  label: 'DateTimePicker 日期时间选择器'\r\n                },\r\n                {\r\n                  value: 'upload',\r\n                  label: 'Upload 上传'\r\n                },\r\n                {\r\n                  value: 'rate',\r\n                  label: 'Rate 评分'\r\n                },\r\n                {\r\n                  value: 'form',\r\n                  label: 'Form 表单'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'data',\r\n              label: 'Data',\r\n              children: [\r\n                {\r\n                  value: 'table',\r\n                  label: 'Table 表格'\r\n                },\r\n                {\r\n                  value: 'tag',\r\n                  label: 'Tag 标签'\r\n                },\r\n                {\r\n                  value: 'progress',\r\n                  label: 'Progress 进度条'\r\n                },\r\n                {\r\n                  value: 'tree',\r\n                  label: 'Tree 树形控件'\r\n                },\r\n                {\r\n                  value: 'pagination',\r\n                  label: 'Pagination 分页'\r\n                },\r\n                {\r\n                  value: 'badge',\r\n                  label: 'Badge 标记'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'notice',\r\n              label: 'Notice',\r\n              children: [\r\n                {\r\n                  value: 'alert',\r\n                  label: 'Alert 警告'\r\n                },\r\n                {\r\n                  value: 'loading',\r\n                  label: 'Loading 加载'\r\n                },\r\n                {\r\n                  value: 'message',\r\n                  label: 'Message 消息提示'\r\n                },\r\n                {\r\n                  value: 'message-box',\r\n                  label: 'MessageBox 弹框'\r\n                },\r\n                {\r\n                  value: 'notification',\r\n                  label: 'Notification 通知'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'navigation',\r\n              label: 'Navigation',\r\n              children: [\r\n                {\r\n                  value: 'menu',\r\n                  label: 'NavMenu 导航菜单'\r\n                },\r\n                {\r\n                  value: 'tabs',\r\n                  label: 'Tabs 标签页'\r\n                },\r\n                {\r\n                  value: 'breadcrumb',\r\n                  label: 'Breadcrumb 面包屑'\r\n                },\r\n                {\r\n                  value: 'dropdown',\r\n                  label: 'Dropdown 下拉菜单'\r\n                },\r\n                {\r\n                  value: 'steps',\r\n                  label: 'Steps 步骤条'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'others',\r\n              label: 'Others',\r\n              children: [\r\n                {\r\n                  value: 'dialog',\r\n                  label: 'Dialog 对话框'\r\n                },\r\n                {\r\n                  value: 'tooltip',\r\n                  label: 'Tooltip 文字提示'\r\n                },\r\n                {\r\n                  value: 'popover',\r\n                  label: 'Popover 弹出框'\r\n                },\r\n                {\r\n                  value: 'card',\r\n                  label: 'Card 卡片'\r\n                },\r\n                {\r\n                  value: 'carousel',\r\n                  label: 'Carousel 走马灯'\r\n                },\r\n                {\r\n                  value: 'collapse',\r\n                  label: 'Collapse 折叠面板'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'ziyuan',\r\n          label: '资源',\r\n          children: [\r\n            {\r\n              value: 'axure',\r\n              label: 'Axure Components'\r\n            },\r\n            {\r\n              value: 'sketch',\r\n              label: 'Sketch Templates'\r\n            },\r\n            {\r\n              value: 'jiaohu',\r\n              label: '组件交互文档'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange(value) {\r\n      console.log(value)\r\n    }\r\n  }\r\n})"}},基础用法.parameters),禁用选项.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `<el-cascader :options=\"options\"></el-cascader>`,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: 'zhinan',\r\n          label: '指南',\r\n          disabled: true,\r\n          children: [\r\n            {\r\n              value: 'shejiyuanze',\r\n              label: '设计原则',\r\n              children: [\r\n                {\r\n                  value: 'yizhi',\r\n                  label: '一致'\r\n                },\r\n                {\r\n                  value: 'fankui',\r\n                  label: '反馈'\r\n                },\r\n                {\r\n                  value: 'xiaolv',\r\n                  label: '效率'\r\n                },\r\n                {\r\n                  value: 'kekong',\r\n                  label: '可控'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'daohang',\r\n              label: '导航',\r\n              children: [\r\n                {\r\n                  value: 'cexiangdaohang',\r\n                  label: '侧向导航'\r\n                },\r\n                {\r\n                  value: 'dingbudaohang',\r\n                  label: '顶部导航'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'zujian',\r\n          label: '组件',\r\n          children: [\r\n            {\r\n              value: 'basic',\r\n              label: 'Basic',\r\n              children: [\r\n                {\r\n                  value: 'layout',\r\n                  label: 'Layout 布局'\r\n                },\r\n                {\r\n                  value: 'color',\r\n                  label: 'Color 色彩'\r\n                },\r\n                {\r\n                  value: 'typography',\r\n                  label: 'Typography 字体'\r\n                },\r\n                {\r\n                  value: 'icon',\r\n                  label: 'Icon 图标'\r\n                },\r\n                {\r\n                  value: 'button',\r\n                  label: 'Button 按钮'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'form',\r\n              label: 'Form',\r\n              children: [\r\n                {\r\n                  value: 'radio',\r\n                  label: 'Radio 单选框'\r\n                },\r\n                {\r\n                  value: 'checkbox',\r\n                  label: 'Checkbox 多选框'\r\n                },\r\n                {\r\n                  value: 'input',\r\n                  label: 'Input 输入框'\r\n                },\r\n                {\r\n                  value: 'input-number',\r\n                  label: 'InputNumber 计数器'\r\n                },\r\n                {\r\n                  value: 'select',\r\n                  label: 'Select 选择器'\r\n                },\r\n                {\r\n                  value: 'cascader',\r\n                  label: 'Cascader 级联选择器'\r\n                },\r\n                {\r\n                  value: 'switch',\r\n                  label: 'Switch 开关'\r\n                },\r\n                {\r\n                  value: 'slider',\r\n                  label: 'Slider 滑块'\r\n                },\r\n                {\r\n                  value: 'time-picker',\r\n                  label: 'TimePicker 时间选择器'\r\n                },\r\n                {\r\n                  value: 'date-picker',\r\n                  label: 'DatePicker 日期选择器'\r\n                },\r\n                {\r\n                  value: 'datetime-picker',\r\n                  label: 'DateTimePicker 日期时间选择器'\r\n                },\r\n                {\r\n                  value: 'upload',\r\n                  label: 'Upload 上传'\r\n                },\r\n                {\r\n                  value: 'rate',\r\n                  label: 'Rate 评分'\r\n                },\r\n                {\r\n                  value: 'form',\r\n                  label: 'Form 表单'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'data',\r\n              label: 'Data',\r\n              children: [\r\n                {\r\n                  value: 'table',\r\n                  label: 'Table 表格'\r\n                },\r\n                {\r\n                  value: 'tag',\r\n                  label: 'Tag 标签'\r\n                },\r\n                {\r\n                  value: 'progress',\r\n                  label: 'Progress 进度条'\r\n                },\r\n                {\r\n                  value: 'tree',\r\n                  label: 'Tree 树形控件'\r\n                },\r\n                {\r\n                  value: 'pagination',\r\n                  label: 'Pagination 分页'\r\n                },\r\n                {\r\n                  value: 'badge',\r\n                  label: 'Badge 标记'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'notice',\r\n              label: 'Notice',\r\n              children: [\r\n                {\r\n                  value: 'alert',\r\n                  label: 'Alert 警告'\r\n                },\r\n                {\r\n                  value: 'loading',\r\n                  label: 'Loading 加载'\r\n                },\r\n                {\r\n                  value: 'message',\r\n                  label: 'Message 消息提示'\r\n                },\r\n                {\r\n                  value: 'message-box',\r\n                  label: 'MessageBox 弹框'\r\n                },\r\n                {\r\n                  value: 'notification',\r\n                  label: 'Notification 通知'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'navigation',\r\n              label: 'Navigation',\r\n              children: [\r\n                {\r\n                  value: 'menu',\r\n                  label: 'NavMenu 导航菜单'\r\n                },\r\n                {\r\n                  value: 'tabs',\r\n                  label: 'Tabs 标签页'\r\n                },\r\n                {\r\n                  value: 'breadcrumb',\r\n                  label: 'Breadcrumb 面包屑'\r\n                },\r\n                {\r\n                  value: 'dropdown',\r\n                  label: 'Dropdown 下拉菜单'\r\n                },\r\n                {\r\n                  value: 'steps',\r\n                  label: 'Steps 步骤条'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'others',\r\n              label: 'Others',\r\n              children: [\r\n                {\r\n                  value: 'dialog',\r\n                  label: 'Dialog 对话框'\r\n                },\r\n                {\r\n                  value: 'tooltip',\r\n                  label: 'Tooltip 文字提示'\r\n                },\r\n                {\r\n                  value: 'popover',\r\n                  label: 'Popover 弹出框'\r\n                },\r\n                {\r\n                  value: 'card',\r\n                  label: 'Card 卡片'\r\n                },\r\n                {\r\n                  value: 'carousel',\r\n                  label: 'Carousel 走马灯'\r\n                },\r\n                {\r\n                  value: 'collapse',\r\n                  label: 'Collapse 折叠面板'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'ziyuan',\r\n          label: '资源',\r\n          children: [\r\n            {\r\n              value: 'axure',\r\n              label: 'Axure Components'\r\n            },\r\n            {\r\n              value: 'sketch',\r\n              label: 'Sketch Templates'\r\n            },\r\n            {\r\n              value: 'jiaohu',\r\n              label: '组件交互文档'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n})"}},禁用选项.parameters),可清空.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `<el-cascader :options=\"options\" clearable></el-cascader>`,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: 'zhinan',\r\n          label: '指南',\r\n          children: [\r\n            {\r\n              value: 'shejiyuanze',\r\n              label: '设计原则',\r\n              children: [\r\n                {\r\n                  value: 'yizhi',\r\n                  label: '一致'\r\n                },\r\n                {\r\n                  value: 'fankui',\r\n                  label: '反馈'\r\n                },\r\n                {\r\n                  value: 'xiaolv',\r\n                  label: '效率'\r\n                },\r\n                {\r\n                  value: 'kekong',\r\n                  label: '可控'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'daohang',\r\n              label: '导航',\r\n              children: [\r\n                {\r\n                  value: 'cexiangdaohang',\r\n                  label: '侧向导航'\r\n                },\r\n                {\r\n                  value: 'dingbudaohang',\r\n                  label: '顶部导航'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'zujian',\r\n          label: '组件',\r\n          children: [\r\n            {\r\n              value: 'basic',\r\n              label: 'Basic',\r\n              children: [\r\n                {\r\n                  value: 'layout',\r\n                  label: 'Layout 布局'\r\n                },\r\n                {\r\n                  value: 'color',\r\n                  label: 'Color 色彩'\r\n                },\r\n                {\r\n                  value: 'typography',\r\n                  label: 'Typography 字体'\r\n                },\r\n                {\r\n                  value: 'icon',\r\n                  label: 'Icon 图标'\r\n                },\r\n                {\r\n                  value: 'button',\r\n                  label: 'Button 按钮'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'form',\r\n              label: 'Form',\r\n              children: [\r\n                {\r\n                  value: 'radio',\r\n                  label: 'Radio 单选框'\r\n                },\r\n                {\r\n                  value: 'checkbox',\r\n                  label: 'Checkbox 多选框'\r\n                },\r\n                {\r\n                  value: 'input',\r\n                  label: 'Input 输入框'\r\n                },\r\n                {\r\n                  value: 'input-number',\r\n                  label: 'InputNumber 计数器'\r\n                },\r\n                {\r\n                  value: 'select',\r\n                  label: 'Select 选择器'\r\n                },\r\n                {\r\n                  value: 'cascader',\r\n                  label: 'Cascader 级联选择器'\r\n                },\r\n                {\r\n                  value: 'switch',\r\n                  label: 'Switch 开关'\r\n                },\r\n                {\r\n                  value: 'slider',\r\n                  label: 'Slider 滑块'\r\n                },\r\n                {\r\n                  value: 'time-picker',\r\n                  label: 'TimePicker 时间选择器'\r\n                },\r\n                {\r\n                  value: 'date-picker',\r\n                  label: 'DatePicker 日期选择器'\r\n                },\r\n                {\r\n                  value: 'datetime-picker',\r\n                  label: 'DateTimePicker 日期时间选择器'\r\n                },\r\n                {\r\n                  value: 'upload',\r\n                  label: 'Upload 上传'\r\n                },\r\n                {\r\n                  value: 'rate',\r\n                  label: 'Rate 评分'\r\n                },\r\n                {\r\n                  value: 'form',\r\n                  label: 'Form 表单'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'data',\r\n              label: 'Data',\r\n              children: [\r\n                {\r\n                  value: 'table',\r\n                  label: 'Table 表格'\r\n                },\r\n                {\r\n                  value: 'tag',\r\n                  label: 'Tag 标签'\r\n                },\r\n                {\r\n                  value: 'progress',\r\n                  label: 'Progress 进度条'\r\n                },\r\n                {\r\n                  value: 'tree',\r\n                  label: 'Tree 树形控件'\r\n                },\r\n                {\r\n                  value: 'pagination',\r\n                  label: 'Pagination 分页'\r\n                },\r\n                {\r\n                  value: 'badge',\r\n                  label: 'Badge 标记'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'notice',\r\n              label: 'Notice',\r\n              children: [\r\n                {\r\n                  value: 'alert',\r\n                  label: 'Alert 警告'\r\n                },\r\n                {\r\n                  value: 'loading',\r\n                  label: 'Loading 加载'\r\n                },\r\n                {\r\n                  value: 'message',\r\n                  label: 'Message 消息提示'\r\n                },\r\n                {\r\n                  value: 'message-box',\r\n                  label: 'MessageBox 弹框'\r\n                },\r\n                {\r\n                  value: 'notification',\r\n                  label: 'Notification 通知'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'navigation',\r\n              label: 'Navigation',\r\n              children: [\r\n                {\r\n                  value: 'menu',\r\n                  label: 'NavMenu 导航菜单'\r\n                },\r\n                {\r\n                  value: 'tabs',\r\n                  label: 'Tabs 标签页'\r\n                },\r\n                {\r\n                  value: 'breadcrumb',\r\n                  label: 'Breadcrumb 面包屑'\r\n                },\r\n                {\r\n                  value: 'dropdown',\r\n                  label: 'Dropdown 下拉菜单'\r\n                },\r\n                {\r\n                  value: 'steps',\r\n                  label: 'Steps 步骤条'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'others',\r\n              label: 'Others',\r\n              children: [\r\n                {\r\n                  value: 'dialog',\r\n                  label: 'Dialog 对话框'\r\n                },\r\n                {\r\n                  value: 'tooltip',\r\n                  label: 'Tooltip 文字提示'\r\n                },\r\n                {\r\n                  value: 'popover',\r\n                  label: 'Popover 弹出框'\r\n                },\r\n                {\r\n                  value: 'card',\r\n                  label: 'Card 卡片'\r\n                },\r\n                {\r\n                  value: 'carousel',\r\n                  label: 'Carousel 走马灯'\r\n                },\r\n                {\r\n                  value: 'collapse',\r\n                  label: 'Collapse 折叠面板'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'ziyuan',\r\n          label: '资源',\r\n          children: [\r\n            {\r\n              value: 'axure',\r\n              label: 'Axure Components'\r\n            },\r\n            {\r\n              value: 'sketch',\r\n              label: 'Sketch Templates'\r\n            },\r\n            {\r\n              value: 'jiaohu',\r\n              label: '组件交互文档'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n})"}},可清空.parameters),仅显示最后一级.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `<el-cascader :options=\"options\" :show-all-levels=\"false\"></el-cascader>`,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: 'zhinan',\r\n          label: '指南',\r\n          children: [\r\n            {\r\n              value: 'shejiyuanze',\r\n              label: '设计原则',\r\n              children: [\r\n                {\r\n                  value: 'yizhi',\r\n                  label: '一致'\r\n                },\r\n                {\r\n                  value: 'fankui',\r\n                  label: '反馈'\r\n                },\r\n                {\r\n                  value: 'xiaolv',\r\n                  label: '效率'\r\n                },\r\n                {\r\n                  value: 'kekong',\r\n                  label: '可控'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'daohang',\r\n              label: '导航',\r\n              children: [\r\n                {\r\n                  value: 'cexiangdaohang',\r\n                  label: '侧向导航'\r\n                },\r\n                {\r\n                  value: 'dingbudaohang',\r\n                  label: '顶部导航'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'zujian',\r\n          label: '组件',\r\n          children: [\r\n            {\r\n              value: 'basic',\r\n              label: 'Basic',\r\n              children: [\r\n                {\r\n                  value: 'layout',\r\n                  label: 'Layout 布局'\r\n                },\r\n                {\r\n                  value: 'color',\r\n                  label: 'Color 色彩'\r\n                },\r\n                {\r\n                  value: 'typography',\r\n                  label: 'Typography 字体'\r\n                },\r\n                {\r\n                  value: 'icon',\r\n                  label: 'Icon 图标'\r\n                },\r\n                {\r\n                  value: 'button',\r\n                  label: 'Button 按钮'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'form',\r\n              label: 'Form',\r\n              children: [\r\n                {\r\n                  value: 'radio',\r\n                  label: 'Radio 单选框'\r\n                },\r\n                {\r\n                  value: 'checkbox',\r\n                  label: 'Checkbox 多选框'\r\n                },\r\n                {\r\n                  value: 'input',\r\n                  label: 'Input 输入框'\r\n                },\r\n                {\r\n                  value: 'input-number',\r\n                  label: 'InputNumber 计数器'\r\n                },\r\n                {\r\n                  value: 'select',\r\n                  label: 'Select 选择器'\r\n                },\r\n                {\r\n                  value: 'cascader',\r\n                  label: 'Cascader 级联选择器'\r\n                },\r\n                {\r\n                  value: 'switch',\r\n                  label: 'Switch 开关'\r\n                },\r\n                {\r\n                  value: 'slider',\r\n                  label: 'Slider 滑块'\r\n                },\r\n                {\r\n                  value: 'time-picker',\r\n                  label: 'TimePicker 时间选择器'\r\n                },\r\n                {\r\n                  value: 'date-picker',\r\n                  label: 'DatePicker 日期选择器'\r\n                },\r\n                {\r\n                  value: 'datetime-picker',\r\n                  label: 'DateTimePicker 日期时间选择器'\r\n                },\r\n                {\r\n                  value: 'upload',\r\n                  label: 'Upload 上传'\r\n                },\r\n                {\r\n                  value: 'rate',\r\n                  label: 'Rate 评分'\r\n                },\r\n                {\r\n                  value: 'form',\r\n                  label: 'Form 表单'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'data',\r\n              label: 'Data',\r\n              children: [\r\n                {\r\n                  value: 'table',\r\n                  label: 'Table 表格'\r\n                },\r\n                {\r\n                  value: 'tag',\r\n                  label: 'Tag 标签'\r\n                },\r\n                {\r\n                  value: 'progress',\r\n                  label: 'Progress 进度条'\r\n                },\r\n                {\r\n                  value: 'tree',\r\n                  label: 'Tree 树形控件'\r\n                },\r\n                {\r\n                  value: 'pagination',\r\n                  label: 'Pagination 分页'\r\n                },\r\n                {\r\n                  value: 'badge',\r\n                  label: 'Badge 标记'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'notice',\r\n              label: 'Notice',\r\n              children: [\r\n                {\r\n                  value: 'alert',\r\n                  label: 'Alert 警告'\r\n                },\r\n                {\r\n                  value: 'loading',\r\n                  label: 'Loading 加载'\r\n                },\r\n                {\r\n                  value: 'message',\r\n                  label: 'Message 消息提示'\r\n                },\r\n                {\r\n                  value: 'message-box',\r\n                  label: 'MessageBox 弹框'\r\n                },\r\n                {\r\n                  value: 'notification',\r\n                  label: 'Notification 通知'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'navigation',\r\n              label: 'Navigation',\r\n              children: [\r\n                {\r\n                  value: 'menu',\r\n                  label: 'NavMenu 导航菜单'\r\n                },\r\n                {\r\n                  value: 'tabs',\r\n                  label: 'Tabs 标签页'\r\n                },\r\n                {\r\n                  value: 'breadcrumb',\r\n                  label: 'Breadcrumb 面包屑'\r\n                },\r\n                {\r\n                  value: 'dropdown',\r\n                  label: 'Dropdown 下拉菜单'\r\n                },\r\n                {\r\n                  value: 'steps',\r\n                  label: 'Steps 步骤条'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'others',\r\n              label: 'Others',\r\n              children: [\r\n                {\r\n                  value: 'dialog',\r\n                  label: 'Dialog 对话框'\r\n                },\r\n                {\r\n                  value: 'tooltip',\r\n                  label: 'Tooltip 文字提示'\r\n                },\r\n                {\r\n                  value: 'popover',\r\n                  label: 'Popover 弹出框'\r\n                },\r\n                {\r\n                  value: 'card',\r\n                  label: 'Card 卡片'\r\n                },\r\n                {\r\n                  value: 'carousel',\r\n                  label: 'Carousel 走马灯'\r\n                },\r\n                {\r\n                  value: 'collapse',\r\n                  label: 'Collapse 折叠面板'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'ziyuan',\r\n          label: '资源',\r\n          children: [\r\n            {\r\n              value: 'axure',\r\n              label: 'Axure Components'\r\n            },\r\n            {\r\n              value: 'sketch',\r\n              label: 'Sketch Templates'\r\n            },\r\n            {\r\n              value: 'jiaohu',\r\n              label: '组件交互文档'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n})"}},仅显示最后一级.parameters),多选.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <div>\r\n    <div class=\"block\">\r\n    <span class=\"demonstration\">默认显示所有Tag</span>\r\n    <el-cascader\r\n      :options=\"options\"\r\n      :props=\"props\"\r\n      clearable></el-cascader>\r\n    </div>\r\n    <div class=\"block\">\r\n      <span class=\"demonstration\">折叠展示Tag</span>\r\n      <el-cascader\r\n        :options=\"options\"\r\n        :props=\"props\"\r\n        collapse-tags\r\n        clearable></el-cascader>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      props: { multiple: true },\r\n      options: [\r\n        {\r\n          value: 1,\r\n          label: '东南',\r\n          children: [\r\n            {\r\n              value: 2,\r\n              label: '上海',\r\n              children: [\r\n                { value: 3, label: '普陀' },\r\n                { value: 4, label: '黄埔' },\r\n                { value: 5, label: '徐汇' }\r\n              ]\r\n            },\r\n            {\r\n              value: 7,\r\n              label: '江苏',\r\n              children: [\r\n                { value: 8, label: '南京' },\r\n                { value: 9, label: '苏州' },\r\n                { value: 10, label: '无锡' }\r\n              ]\r\n            },\r\n            {\r\n              value: 12,\r\n              label: '浙江',\r\n              children: [\r\n                { value: 13, label: '杭州' },\r\n                { value: 14, label: '宁波' },\r\n                { value: 15, label: '嘉兴' }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 17,\r\n          label: '西北',\r\n          children: [\r\n            {\r\n              value: 18,\r\n              label: '陕西',\r\n              children: [\r\n                { value: 19, label: '西安' },\r\n                { value: 20, label: '延安' }\r\n              ]\r\n            },\r\n            {\r\n              value: 21,\r\n              label: '新疆维吾尔族自治区',\r\n              children: [\r\n                { value: 22, label: '乌鲁木齐' },\r\n                { value: 23, label: '克拉玛依' }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n})"}},多选.parameters),选择任意一级选项.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <div>\r\n    <div class=\"block\">\r\n    <span class=\"demonstration\">单选选择任意一级选项</span>\r\n    <el-cascader\r\n      :options=\"options\"\r\n      :props=\"{ checkStrictly: true }\"\r\n      clearable></el-cascader>\r\n    </div>\r\n    <div class=\"block\">\r\n      <span class=\"demonstration\">多选选择任意一级选项</span>\r\n      <el-cascader\r\n        :options=\"options\"\r\n        :props=\"{ multiple: true, checkStrictly: true }\"\r\n        clearable></el-cascader>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: 'zhinan',\r\n          label: '指南',\r\n          children: [\r\n            {\r\n              value: 'shejiyuanze',\r\n              label: '设计原则',\r\n              children: [\r\n                {\r\n                  value: 'yizhi',\r\n                  label: '一致'\r\n                },\r\n                {\r\n                  value: 'fankui',\r\n                  label: '反馈'\r\n                },\r\n                {\r\n                  value: 'xiaolv',\r\n                  label: '效率'\r\n                },\r\n                {\r\n                  value: 'kekong',\r\n                  label: '可控'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'daohang',\r\n              label: '导航',\r\n              children: [\r\n                {\r\n                  value: 'cexiangdaohang',\r\n                  label: '侧向导航'\r\n                },\r\n                {\r\n                  value: 'dingbudaohang',\r\n                  label: '顶部导航'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'zujian',\r\n          label: '组件',\r\n          children: [\r\n            {\r\n              value: 'basic',\r\n              label: 'Basic',\r\n              children: [\r\n                {\r\n                  value: 'layout',\r\n                  label: 'Layout 布局'\r\n                },\r\n                {\r\n                  value: 'color',\r\n                  label: 'Color 色彩'\r\n                },\r\n                {\r\n                  value: 'typography',\r\n                  label: 'Typography 字体'\r\n                },\r\n                {\r\n                  value: 'icon',\r\n                  label: 'Icon 图标'\r\n                },\r\n                {\r\n                  value: 'button',\r\n                  label: 'Button 按钮'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'form',\r\n              label: 'Form',\r\n              children: [\r\n                {\r\n                  value: 'radio',\r\n                  label: 'Radio 单选框'\r\n                },\r\n                {\r\n                  value: 'checkbox',\r\n                  label: 'Checkbox 多选框'\r\n                },\r\n                {\r\n                  value: 'input',\r\n                  label: 'Input 输入框'\r\n                },\r\n                {\r\n                  value: 'input-number',\r\n                  label: 'InputNumber 计数器'\r\n                },\r\n                {\r\n                  value: 'select',\r\n                  label: 'Select 选择器'\r\n                },\r\n                {\r\n                  value: 'cascader',\r\n                  label: 'Cascader 级联选择器'\r\n                },\r\n                {\r\n                  value: 'switch',\r\n                  label: 'Switch 开关'\r\n                },\r\n                {\r\n                  value: 'slider',\r\n                  label: 'Slider 滑块'\r\n                },\r\n                {\r\n                  value: 'time-picker',\r\n                  label: 'TimePicker 时间选择器'\r\n                },\r\n                {\r\n                  value: 'date-picker',\r\n                  label: 'DatePicker 日期选择器'\r\n                },\r\n                {\r\n                  value: 'datetime-picker',\r\n                  label: 'DateTimePicker 日期时间选择器'\r\n                },\r\n                {\r\n                  value: 'upload',\r\n                  label: 'Upload 上传'\r\n                },\r\n                {\r\n                  value: 'rate',\r\n                  label: 'Rate 评分'\r\n                },\r\n                {\r\n                  value: 'form',\r\n                  label: 'Form 表单'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'data',\r\n              label: 'Data',\r\n              children: [\r\n                {\r\n                  value: 'table',\r\n                  label: 'Table 表格'\r\n                },\r\n                {\r\n                  value: 'tag',\r\n                  label: 'Tag 标签'\r\n                },\r\n                {\r\n                  value: 'progress',\r\n                  label: 'Progress 进度条'\r\n                },\r\n                {\r\n                  value: 'tree',\r\n                  label: 'Tree 树形控件'\r\n                },\r\n                {\r\n                  value: 'pagination',\r\n                  label: 'Pagination 分页'\r\n                },\r\n                {\r\n                  value: 'badge',\r\n                  label: 'Badge 标记'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'notice',\r\n              label: 'Notice',\r\n              children: [\r\n                {\r\n                  value: 'alert',\r\n                  label: 'Alert 警告'\r\n                },\r\n                {\r\n                  value: 'loading',\r\n                  label: 'Loading 加载'\r\n                },\r\n                {\r\n                  value: 'message',\r\n                  label: 'Message 消息提示'\r\n                },\r\n                {\r\n                  value: 'message-box',\r\n                  label: 'MessageBox 弹框'\r\n                },\r\n                {\r\n                  value: 'notification',\r\n                  label: 'Notification 通知'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'navigation',\r\n              label: 'Navigation',\r\n              children: [\r\n                {\r\n                  value: 'menu',\r\n                  label: 'NavMenu 导航菜单'\r\n                },\r\n                {\r\n                  value: 'tabs',\r\n                  label: 'Tabs 标签页'\r\n                },\r\n                {\r\n                  value: 'breadcrumb',\r\n                  label: 'Breadcrumb 面包屑'\r\n                },\r\n                {\r\n                  value: 'dropdown',\r\n                  label: 'Dropdown 下拉菜单'\r\n                },\r\n                {\r\n                  value: 'steps',\r\n                  label: 'Steps 步骤条'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'others',\r\n              label: 'Others',\r\n              children: [\r\n                {\r\n                  value: 'dialog',\r\n                  label: 'Dialog 对话框'\r\n                },\r\n                {\r\n                  value: 'tooltip',\r\n                  label: 'Tooltip 文字提示'\r\n                },\r\n                {\r\n                  value: 'popover',\r\n                  label: 'Popover 弹出框'\r\n                },\r\n                {\r\n                  value: 'card',\r\n                  label: 'Card 卡片'\r\n                },\r\n                {\r\n                  value: 'carousel',\r\n                  label: 'Carousel 走马灯'\r\n                },\r\n                {\r\n                  value: 'collapse',\r\n                  label: 'Collapse 折叠面板'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'ziyuan',\r\n          label: '资源',\r\n          children: [\r\n            {\r\n              value: 'axure',\r\n              label: 'Axure Components'\r\n            },\r\n            {\r\n              value: 'sketch',\r\n              label: 'Sketch Templates'\r\n            },\r\n            {\r\n              value: 'jiaohu',\r\n              label: '组件交互文档'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n})"}},选择任意一级选项.parameters),动态加载.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `<el-cascader :props="props"></el-cascader>`,\r\n  data() {\r\n    let id = 0\r\n    return {\r\n      props: {\r\n        lazy: true,\r\n        lazyLoad(node, resolve) {\r\n          const { level } = node\r\n          setTimeout(() => {\r\n            const nodes = Array.from({ length: level + 1 }).map(item => ({\r\n              value: ++id,\r\n              label: `选项${id}`,\r\n              leaf: level >= 2\r\n            }))\r\n            // 通过调用resolve将子节点数据返回，通知组件数据加载完成\r\n            resolve(nodes)\r\n          }, 1000)\r\n        }\r\n      }\r\n    }\r\n  }\r\n})'}},动态加载.parameters),可搜索.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <div>\r\n    <div class=\"block\">\r\n    <span class=\"demonstration\">单选可搜索</span>\r\n    <el-cascader\r\n      placeholder=\"试试搜索：指南\"\r\n      :options=\"options\"\r\n      filterable></el-cascader>\r\n    </div>\r\n    <div class=\"block\">\r\n      <span class=\"demonstration\">多选可搜索</span>\r\n      <el-cascader\r\n        placeholder=\"试试搜索：指南\"\r\n        :options=\"options\"\r\n        :props=\"{ multiple: true }\"\r\n        filterable></el-cascader>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: 'zhinan',\r\n          label: '指南',\r\n          children: [\r\n            {\r\n              value: 'shejiyuanze',\r\n              label: '设计原则',\r\n              children: [\r\n                {\r\n                  value: 'yizhi',\r\n                  label: '一致'\r\n                },\r\n                {\r\n                  value: 'fankui',\r\n                  label: '反馈'\r\n                },\r\n                {\r\n                  value: 'xiaolv',\r\n                  label: '效率'\r\n                },\r\n                {\r\n                  value: 'kekong',\r\n                  label: '可控'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'daohang',\r\n              label: '导航',\r\n              children: [\r\n                {\r\n                  value: 'cexiangdaohang',\r\n                  label: '侧向导航'\r\n                },\r\n                {\r\n                  value: 'dingbudaohang',\r\n                  label: '顶部导航'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'zujian',\r\n          label: '组件',\r\n          children: [\r\n            {\r\n              value: 'basic',\r\n              label: 'Basic',\r\n              children: [\r\n                {\r\n                  value: 'layout',\r\n                  label: 'Layout 布局'\r\n                },\r\n                {\r\n                  value: 'color',\r\n                  label: 'Color 色彩'\r\n                },\r\n                {\r\n                  value: 'typography',\r\n                  label: 'Typography 字体'\r\n                },\r\n                {\r\n                  value: 'icon',\r\n                  label: 'Icon 图标'\r\n                },\r\n                {\r\n                  value: 'button',\r\n                  label: 'Button 按钮'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'form',\r\n              label: 'Form',\r\n              children: [\r\n                {\r\n                  value: 'radio',\r\n                  label: 'Radio 单选框'\r\n                },\r\n                {\r\n                  value: 'checkbox',\r\n                  label: 'Checkbox 多选框'\r\n                },\r\n                {\r\n                  value: 'input',\r\n                  label: 'Input 输入框'\r\n                },\r\n                {\r\n                  value: 'input-number',\r\n                  label: 'InputNumber 计数器'\r\n                },\r\n                {\r\n                  value: 'select',\r\n                  label: 'Select 选择器'\r\n                },\r\n                {\r\n                  value: 'cascader',\r\n                  label: 'Cascader 级联选择器'\r\n                },\r\n                {\r\n                  value: 'switch',\r\n                  label: 'Switch 开关'\r\n                },\r\n                {\r\n                  value: 'slider',\r\n                  label: 'Slider 滑块'\r\n                },\r\n                {\r\n                  value: 'time-picker',\r\n                  label: 'TimePicker 时间选择器'\r\n                },\r\n                {\r\n                  value: 'date-picker',\r\n                  label: 'DatePicker 日期选择器'\r\n                },\r\n                {\r\n                  value: 'datetime-picker',\r\n                  label: 'DateTimePicker 日期时间选择器'\r\n                },\r\n                {\r\n                  value: 'upload',\r\n                  label: 'Upload 上传'\r\n                },\r\n                {\r\n                  value: 'rate',\r\n                  label: 'Rate 评分'\r\n                },\r\n                {\r\n                  value: 'form',\r\n                  label: 'Form 表单'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'data',\r\n              label: 'Data',\r\n              children: [\r\n                {\r\n                  value: 'table',\r\n                  label: 'Table 表格'\r\n                },\r\n                {\r\n                  value: 'tag',\r\n                  label: 'Tag 标签'\r\n                },\r\n                {\r\n                  value: 'progress',\r\n                  label: 'Progress 进度条'\r\n                },\r\n                {\r\n                  value: 'tree',\r\n                  label: 'Tree 树形控件'\r\n                },\r\n                {\r\n                  value: 'pagination',\r\n                  label: 'Pagination 分页'\r\n                },\r\n                {\r\n                  value: 'badge',\r\n                  label: 'Badge 标记'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'notice',\r\n              label: 'Notice',\r\n              children: [\r\n                {\r\n                  value: 'alert',\r\n                  label: 'Alert 警告'\r\n                },\r\n                {\r\n                  value: 'loading',\r\n                  label: 'Loading 加载'\r\n                },\r\n                {\r\n                  value: 'message',\r\n                  label: 'Message 消息提示'\r\n                },\r\n                {\r\n                  value: 'message-box',\r\n                  label: 'MessageBox 弹框'\r\n                },\r\n                {\r\n                  value: 'notification',\r\n                  label: 'Notification 通知'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'navigation',\r\n              label: 'Navigation',\r\n              children: [\r\n                {\r\n                  value: 'menu',\r\n                  label: 'NavMenu 导航菜单'\r\n                },\r\n                {\r\n                  value: 'tabs',\r\n                  label: 'Tabs 标签页'\r\n                },\r\n                {\r\n                  value: 'breadcrumb',\r\n                  label: 'Breadcrumb 面包屑'\r\n                },\r\n                {\r\n                  value: 'dropdown',\r\n                  label: 'Dropdown 下拉菜单'\r\n                },\r\n                {\r\n                  value: 'steps',\r\n                  label: 'Steps 步骤条'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'others',\r\n              label: 'Others',\r\n              children: [\r\n                {\r\n                  value: 'dialog',\r\n                  label: 'Dialog 对话框'\r\n                },\r\n                {\r\n                  value: 'tooltip',\r\n                  label: 'Tooltip 文字提示'\r\n                },\r\n                {\r\n                  value: 'popover',\r\n                  label: 'Popover 弹出框'\r\n                },\r\n                {\r\n                  value: 'card',\r\n                  label: 'Card 卡片'\r\n                },\r\n                {\r\n                  value: 'carousel',\r\n                  label: 'Carousel 走马灯'\r\n                },\r\n                {\r\n                  value: 'collapse',\r\n                  label: 'Collapse 折叠面板'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'ziyuan',\r\n          label: '资源',\r\n          children: [\r\n            {\r\n              value: 'axure',\r\n              label: 'Axure Components'\r\n            },\r\n            {\r\n              value: 'sketch',\r\n              label: 'Sketch Templates'\r\n            },\r\n            {\r\n              value: 'jiaohu',\r\n              label: '组件交互文档'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n})"}},可搜索.parameters),自定义节点内容.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-cascader :options=\"options\">\r\n    <template slot-scope=\"{ node, data }\">\r\n      <span>{{ data.label }}</span>\r\n      <span v-if=\"!node.isLeaf\"> ({{ data.children.length }}) </span>\r\n    </template>\r\n  </el-cascader>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: 'zhinan',\r\n          label: '指南',\r\n          children: [\r\n            {\r\n              value: 'shejiyuanze',\r\n              label: '设计原则',\r\n              children: [\r\n                {\r\n                  value: 'yizhi',\r\n                  label: '一致'\r\n                },\r\n                {\r\n                  value: 'fankui',\r\n                  label: '反馈'\r\n                },\r\n                {\r\n                  value: 'xiaolv',\r\n                  label: '效率'\r\n                },\r\n                {\r\n                  value: 'kekong',\r\n                  label: '可控'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'daohang',\r\n              label: '导航',\r\n              children: [\r\n                {\r\n                  value: 'cexiangdaohang',\r\n                  label: '侧向导航'\r\n                },\r\n                {\r\n                  value: 'dingbudaohang',\r\n                  label: '顶部导航'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'zujian',\r\n          label: '组件',\r\n          children: [\r\n            {\r\n              value: 'basic',\r\n              label: 'Basic',\r\n              children: [\r\n                {\r\n                  value: 'layout',\r\n                  label: 'Layout 布局'\r\n                },\r\n                {\r\n                  value: 'color',\r\n                  label: 'Color 色彩'\r\n                },\r\n                {\r\n                  value: 'typography',\r\n                  label: 'Typography 字体'\r\n                },\r\n                {\r\n                  value: 'icon',\r\n                  label: 'Icon 图标'\r\n                },\r\n                {\r\n                  value: 'button',\r\n                  label: 'Button 按钮'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'form',\r\n              label: 'Form',\r\n              children: [\r\n                {\r\n                  value: 'radio',\r\n                  label: 'Radio 单选框'\r\n                },\r\n                {\r\n                  value: 'checkbox',\r\n                  label: 'Checkbox 多选框'\r\n                },\r\n                {\r\n                  value: 'input',\r\n                  label: 'Input 输入框'\r\n                },\r\n                {\r\n                  value: 'input-number',\r\n                  label: 'InputNumber 计数器'\r\n                },\r\n                {\r\n                  value: 'select',\r\n                  label: 'Select 选择器'\r\n                },\r\n                {\r\n                  value: 'cascader',\r\n                  label: 'Cascader 级联选择器'\r\n                },\r\n                {\r\n                  value: 'switch',\r\n                  label: 'Switch 开关'\r\n                },\r\n                {\r\n                  value: 'slider',\r\n                  label: 'Slider 滑块'\r\n                },\r\n                {\r\n                  value: 'time-picker',\r\n                  label: 'TimePicker 时间选择器'\r\n                },\r\n                {\r\n                  value: 'date-picker',\r\n                  label: 'DatePicker 日期选择器'\r\n                },\r\n                {\r\n                  value: 'datetime-picker',\r\n                  label: 'DateTimePicker 日期时间选择器'\r\n                },\r\n                {\r\n                  value: 'upload',\r\n                  label: 'Upload 上传'\r\n                },\r\n                {\r\n                  value: 'rate',\r\n                  label: 'Rate 评分'\r\n                },\r\n                {\r\n                  value: 'form',\r\n                  label: 'Form 表单'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'data',\r\n              label: 'Data',\r\n              children: [\r\n                {\r\n                  value: 'table',\r\n                  label: 'Table 表格'\r\n                },\r\n                {\r\n                  value: 'tag',\r\n                  label: 'Tag 标签'\r\n                },\r\n                {\r\n                  value: 'progress',\r\n                  label: 'Progress 进度条'\r\n                },\r\n                {\r\n                  value: 'tree',\r\n                  label: 'Tree 树形控件'\r\n                },\r\n                {\r\n                  value: 'pagination',\r\n                  label: 'Pagination 分页'\r\n                },\r\n                {\r\n                  value: 'badge',\r\n                  label: 'Badge 标记'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'notice',\r\n              label: 'Notice',\r\n              children: [\r\n                {\r\n                  value: 'alert',\r\n                  label: 'Alert 警告'\r\n                },\r\n                {\r\n                  value: 'loading',\r\n                  label: 'Loading 加载'\r\n                },\r\n                {\r\n                  value: 'message',\r\n                  label: 'Message 消息提示'\r\n                },\r\n                {\r\n                  value: 'message-box',\r\n                  label: 'MessageBox 弹框'\r\n                },\r\n                {\r\n                  value: 'notification',\r\n                  label: 'Notification 通知'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'navigation',\r\n              label: 'Navigation',\r\n              children: [\r\n                {\r\n                  value: 'menu',\r\n                  label: 'NavMenu 导航菜单'\r\n                },\r\n                {\r\n                  value: 'tabs',\r\n                  label: 'Tabs 标签页'\r\n                },\r\n                {\r\n                  value: 'breadcrumb',\r\n                  label: 'Breadcrumb 面包屑'\r\n                },\r\n                {\r\n                  value: 'dropdown',\r\n                  label: 'Dropdown 下拉菜单'\r\n                },\r\n                {\r\n                  value: 'steps',\r\n                  label: 'Steps 步骤条'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'others',\r\n              label: 'Others',\r\n              children: [\r\n                {\r\n                  value: 'dialog',\r\n                  label: 'Dialog 对话框'\r\n                },\r\n                {\r\n                  value: 'tooltip',\r\n                  label: 'Tooltip 文字提示'\r\n                },\r\n                {\r\n                  value: 'popover',\r\n                  label: 'Popover 弹出框'\r\n                },\r\n                {\r\n                  value: 'card',\r\n                  label: 'Card 卡片'\r\n                },\r\n                {\r\n                  value: 'carousel',\r\n                  label: 'Carousel 走马灯'\r\n                },\r\n                {\r\n                  value: 'collapse',\r\n                  label: 'Collapse 折叠面板'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'ziyuan',\r\n          label: '资源',\r\n          children: [\r\n            {\r\n              value: 'axure',\r\n              label: 'Axure Components'\r\n            },\r\n            {\r\n              value: 'sketch',\r\n              label: 'Sketch Templates'\r\n            },\r\n            {\r\n              value: 'jiaohu',\r\n              label: '组件交互文档'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n})"}},自定义节点内容.parameters),级联面板.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `<el-cascader-panel :options=\"options\"></el-cascader-panel>`,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: 'zhinan',\r\n          label: '指南',\r\n          children: [\r\n            {\r\n              value: 'shejiyuanze',\r\n              label: '设计原则',\r\n              children: [\r\n                {\r\n                  value: 'yizhi',\r\n                  label: '一致'\r\n                },\r\n                {\r\n                  value: 'fankui',\r\n                  label: '反馈'\r\n                },\r\n                {\r\n                  value: 'xiaolv',\r\n                  label: '效率'\r\n                },\r\n                {\r\n                  value: 'kekong',\r\n                  label: '可控'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'daohang',\r\n              label: '导航',\r\n              children: [\r\n                {\r\n                  value: 'cexiangdaohang',\r\n                  label: '侧向导航'\r\n                },\r\n                {\r\n                  value: 'dingbudaohang',\r\n                  label: '顶部导航'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'zujian',\r\n          label: '组件',\r\n          children: [\r\n            {\r\n              value: 'basic',\r\n              label: 'Basic',\r\n              children: [\r\n                {\r\n                  value: 'layout',\r\n                  label: 'Layout 布局'\r\n                },\r\n                {\r\n                  value: 'color',\r\n                  label: 'Color 色彩'\r\n                },\r\n                {\r\n                  value: 'typography',\r\n                  label: 'Typography 字体'\r\n                },\r\n                {\r\n                  value: 'icon',\r\n                  label: 'Icon 图标'\r\n                },\r\n                {\r\n                  value: 'button',\r\n                  label: 'Button 按钮'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'form',\r\n              label: 'Form',\r\n              children: [\r\n                {\r\n                  value: 'radio',\r\n                  label: 'Radio 单选框'\r\n                },\r\n                {\r\n                  value: 'checkbox',\r\n                  label: 'Checkbox 多选框'\r\n                },\r\n                {\r\n                  value: 'input',\r\n                  label: 'Input 输入框'\r\n                },\r\n                {\r\n                  value: 'input-number',\r\n                  label: 'InputNumber 计数器'\r\n                },\r\n                {\r\n                  value: 'select',\r\n                  label: 'Select 选择器'\r\n                },\r\n                {\r\n                  value: 'cascader',\r\n                  label: 'Cascader 级联选择器'\r\n                },\r\n                {\r\n                  value: 'switch',\r\n                  label: 'Switch 开关'\r\n                },\r\n                {\r\n                  value: 'slider',\r\n                  label: 'Slider 滑块'\r\n                },\r\n                {\r\n                  value: 'time-picker',\r\n                  label: 'TimePicker 时间选择器'\r\n                },\r\n                {\r\n                  value: 'date-picker',\r\n                  label: 'DatePicker 日期选择器'\r\n                },\r\n                {\r\n                  value: 'datetime-picker',\r\n                  label: 'DateTimePicker 日期时间选择器'\r\n                },\r\n                {\r\n                  value: 'upload',\r\n                  label: 'Upload 上传'\r\n                },\r\n                {\r\n                  value: 'rate',\r\n                  label: 'Rate 评分'\r\n                },\r\n                {\r\n                  value: 'form',\r\n                  label: 'Form 表单'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'data',\r\n              label: 'Data',\r\n              children: [\r\n                {\r\n                  value: 'table',\r\n                  label: 'Table 表格'\r\n                },\r\n                {\r\n                  value: 'tag',\r\n                  label: 'Tag 标签'\r\n                },\r\n                {\r\n                  value: 'progress',\r\n                  label: 'Progress 进度条'\r\n                },\r\n                {\r\n                  value: 'tree',\r\n                  label: 'Tree 树形控件'\r\n                },\r\n                {\r\n                  value: 'pagination',\r\n                  label: 'Pagination 分页'\r\n                },\r\n                {\r\n                  value: 'badge',\r\n                  label: 'Badge 标记'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'notice',\r\n              label: 'Notice',\r\n              children: [\r\n                {\r\n                  value: 'alert',\r\n                  label: 'Alert 警告'\r\n                },\r\n                {\r\n                  value: 'loading',\r\n                  label: 'Loading 加载'\r\n                },\r\n                {\r\n                  value: 'message',\r\n                  label: 'Message 消息提示'\r\n                },\r\n                {\r\n                  value: 'message-box',\r\n                  label: 'MessageBox 弹框'\r\n                },\r\n                {\r\n                  value: 'notification',\r\n                  label: 'Notification 通知'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'navigation',\r\n              label: 'Navigation',\r\n              children: [\r\n                {\r\n                  value: 'menu',\r\n                  label: 'NavMenu 导航菜单'\r\n                },\r\n                {\r\n                  value: 'tabs',\r\n                  label: 'Tabs 标签页'\r\n                },\r\n                {\r\n                  value: 'breadcrumb',\r\n                  label: 'Breadcrumb 面包屑'\r\n                },\r\n                {\r\n                  value: 'dropdown',\r\n                  label: 'Dropdown 下拉菜单'\r\n                },\r\n                {\r\n                  value: 'steps',\r\n                  label: 'Steps 步骤条'\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              value: 'others',\r\n              label: 'Others',\r\n              children: [\r\n                {\r\n                  value: 'dialog',\r\n                  label: 'Dialog 对话框'\r\n                },\r\n                {\r\n                  value: 'tooltip',\r\n                  label: 'Tooltip 文字提示'\r\n                },\r\n                {\r\n                  value: 'popover',\r\n                  label: 'Popover 弹出框'\r\n                },\r\n                {\r\n                  value: 'card',\r\n                  label: 'Card 卡片'\r\n                },\r\n                {\r\n                  value: 'carousel',\r\n                  label: 'Carousel 走马灯'\r\n                },\r\n                {\r\n                  value: 'collapse',\r\n                  label: 'Collapse 折叠面板'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          value: 'ziyuan',\r\n          label: '资源',\r\n          children: [\r\n            {\r\n              value: 'axure',\r\n              label: 'Axure Components'\r\n            },\r\n            {\r\n              value: 'sketch',\r\n              label: 'Sketch Templates'\r\n            },\r\n            {\r\n              value: 'jiaohu',\r\n              label: '组件交互文档'\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n})"}},级联面板.parameters)},"./src/storybook/element/Checkbox.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"禁用状态",(function(){return 禁用状态})),__webpack_require__.d(__webpack_exports__,"多选框组",(function(){return 多选框组})),__webpack_require__.d(__webpack_exports__,"indeterminate状态",(function(){return indeterminate状态})),__webpack_require__.d(__webpack_exports__,"可选项目数量的限制",(function(){return 可选项目数量的限制})),__webpack_require__.d(__webpack_exports__,"按钮样式",(function(){return 按钮样式})),__webpack_require__.d(__webpack_exports__,"带有边框",(function(){return 带有边框}));__webpack_exports__.default={title:"Element/Checkbox",argTypes:{"v-model":{control:"text",description:"绑定值"},label:{control:"text",description:"选中状态的值（只有在checkbox-group或者绑定对象类型为array时有效）"},"true-label":{control:"text",description:"选中时的值"},"false-label":{control:"text",description:"没有选中时的值"},disabled:{control:"boolean",defaultValue:!1,description:"是否禁用"},border:{control:"boolean",defaultValue:!1,description:"是否显示边框"},size:{control:"radio",options:["medium","small","mini"],description:"Checkbox 的尺寸，仅在 border 为真时有效"},name:{control:"text",description:"原生 name 属性"},checked:{control:"boolean",defaultValue:!1,description:"当前是否勾选"},indeterminate:{control:"boolean",defaultValue:!1,description:"设置 indeterminate 状态，只负责样式控制"}},parameters:{docs:{description:{component:"一组备选项中进行多选"}}}};var Attributes=function(){return{}},基础用法=function(){return{template:'<el-checkbox v-model="checked">备选项</el-checkbox>',data:function(){return{checked:!0}}}};基础用法.parameters={docs:{description:{story:"单独使用可以表示两种状态之间的切换，写在标签中的内容为 checkbox 按钮后的介绍。"}}};var 禁用状态=function(){return{template:'\n  <div>\n    <el-checkbox v-model="checked1" disabled>备选项1</el-checkbox>\n    <el-checkbox v-model="checked2" disabled>备选项</el-checkbox>\n  </div>\n  ',data:function(){return{checked1:!1,checked2:!0}}}};禁用状态.parameters={docs:{description:{story:"多选框不可用状态。"}}};var 多选框组=function(){return{template:'\n  <el-checkbox-group v-model="checkList">\n    <el-checkbox label="复选框 A"></el-checkbox>\n    <el-checkbox label="复选框 B"></el-checkbox>\n    <el-checkbox label="复选框 C"></el-checkbox>\n    <el-checkbox label="禁用" disabled></el-checkbox>\n    <el-checkbox label="选中且禁用" disabled></el-checkbox>\n  </el-checkbox-group>\n  ',data:function(){return{checkList:["选中且禁用","复选框 A"]}}}};多选框组.parameters={docs:{description:{story:"适用于多个勾选框绑定到同一个数组的情景，通过是否勾选来表示这一组选项中选中的项。"}}};var indeterminate状态=function(){return{template:'\n  <div>\n    <el-checkbox :indeterminate="isIndeterminate" v-model="checkAll" @change="handleCheckAllChange">全选</el-checkbox>\n    <div style="margin: 15px 0;"></div>\n    <el-checkbox-group v-model="checkedCities" @change="handleCheckedCitiesChange">\n      <el-checkbox v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox>\n    </el-checkbox-group>\n  </div>\n  ',data:function(){return{checkAll:!1,checkedCities:["上海","北京"],cities:["上海","北京","广州","深圳"],isIndeterminate:!0}},methods:{handleCheckAllChange:function(val){this.checkedCities=val?cityOptions:[],this.isIndeterminate=!1},handleCheckedCitiesChange:function(value){var checkedCount=value.length;this.checkAll=checkedCount===this.cities.length,this.isIndeterminate=checkedCount>0&&checkedCount<this.cities.length}}}};indeterminate状态.parameters={docs:{description:{story:"indeterminate 属性用以表示 checkbox 的不确定状态，一般用于实现全选的效果"}}};var 可选项目数量的限制=function(){return{template:'\n  <el-checkbox-group \n    v-model="checkedCities"\n    :min="1"\n    :max="2">\n    <el-checkbox v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox>\n  </el-checkbox-group>\n  ',data:function(){return{checkedCities:["上海","北京"],cities:["上海","北京","广州","深圳"]}}}};可选项目数量的限制.parameters={docs:{description:{story:"使用 min 和 max 属性能够限制可以被勾选的项目的数量。"}}};var 按钮样式=function(){return{template:'\n  <div>\n    <div>\n      <el-checkbox-group v-model="checkboxGroup1">\n        <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\n      </el-checkbox-group>\n    </div>\n    <div style="margin-top: 20px">\n      <el-checkbox-group v-model="checkboxGroup2" size="medium">\n        <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\n      </el-checkbox-group>\n    </div>\n    <div style="margin-top: 20px">\n      <el-checkbox-group v-model="checkboxGroup3" size="small">\n        <el-checkbox-button v-for="city in cities" :label="city" :disabled="city === \'北京\'" :key="city">{{city}}</el-checkbox-button>\n      </el-checkbox-group>\n    </div>\n    <div style="margin-top: 20px">\n      <el-checkbox-group v-model="checkboxGroup4" size="mini" disabled>\n        <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\n      </el-checkbox-group>\n    </div>\n  </div>',data:function(){return{checkboxGroup1:["上海"],checkboxGroup2:["上海"],checkboxGroup3:["上海"],checkboxGroup4:["上海"],cities:["上海","北京","广州","深圳"]}}}};按钮样式.parameters={docs:{description:{story:"按钮样式的多选组合。"}}};var 带有边框=function(){return{template:'\n  <div>\n    <div>\n      <el-checkbox v-model="checked1" label="备选项1" border></el-checkbox>\n      <el-checkbox v-model="checked2" label="备选项2" border></el-checkbox>\n    </div>\n    <div style="margin-top: 20px">\n      <el-checkbox v-model="checked3" label="备选项1" border size="medium"></el-checkbox>\n      <el-checkbox v-model="checked4" label="备选项2" border size="medium"></el-checkbox>\n    </div>\n    <div style="margin-top: 20px">\n      <el-checkbox-group v-model="checkboxGroup1" size="small">\n        <el-checkbox label="备选项1" border></el-checkbox>\n        <el-checkbox label="备选项2" border disabled></el-checkbox>\n      </el-checkbox-group>\n    </div>\n    <div style="margin-top: 20px">\n      <el-checkbox-group v-model="checkboxGroup2" size="mini" disabled>\n        <el-checkbox label="备选项1" border></el-checkbox>\n        <el-checkbox label="备选项2" border></el-checkbox>\n      </el-checkbox-group>\n    </div>\n  </div>\n  ',data:function(){return{checked1:!0,checked2:!1,checked3:!1,checked4:!0,checkboxGroup1:[],checkboxGroup2:[]}}}};Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),基础用法.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `<el-checkbox v-model="checked">备选项</el-checkbox>`,\r\n  data() {\r\n    return {\r\n      checked: true\r\n    }\r\n  }\r\n})'}},基础用法.parameters),禁用状态.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-checkbox v-model="checked1" disabled>备选项1</el-checkbox>\r\n    <el-checkbox v-model="checked2" disabled>备选项</el-checkbox>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      checked1: false,\r\n      checked2: true\r\n    }\r\n  }\r\n})'}},禁用状态.parameters),多选框组.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-checkbox-group v-model="checkList">\r\n    <el-checkbox label="复选框 A"></el-checkbox>\r\n    <el-checkbox label="复选框 B"></el-checkbox>\r\n    <el-checkbox label="复选框 C"></el-checkbox>\r\n    <el-checkbox label="禁用" disabled></el-checkbox>\r\n    <el-checkbox label="选中且禁用" disabled></el-checkbox>\r\n  </el-checkbox-group>\r\n  `,\r\n  data() {\r\n    return {\r\n      checkList: [\'选中且禁用\', \'复选框 A\']\r\n    }\r\n  }\r\n})'}},多选框组.parameters),indeterminate状态.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-checkbox :indeterminate="isIndeterminate" v-model="checkAll" @change="handleCheckAllChange">全选</el-checkbox>\r\n    <div style="margin: 15px 0;"></div>\r\n    <el-checkbox-group v-model="checkedCities" @change="handleCheckedCitiesChange">\r\n      <el-checkbox v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox>\r\n    </el-checkbox-group>\r\n  </div>\r\n  `,\r\n  data() {\r\n    const cityOptions = [\'上海\', \'北京\', \'广州\', \'深圳\']\r\n    return {\r\n      checkAll: false,\r\n      checkedCities: [\'上海\', \'北京\'],\r\n      cities: cityOptions,\r\n      isIndeterminate: true\r\n    }\r\n  },\r\n  methods: {\r\n    handleCheckAllChange(val) {\r\n      this.checkedCities = val ? cityOptions : []\r\n      this.isIndeterminate = false\r\n    },\r\n    handleCheckedCitiesChange(value) {\r\n      let checkedCount = value.length\r\n      this.checkAll = checkedCount === this.cities.length\r\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length\r\n    }\r\n  }\r\n})'}},indeterminate状态.parameters),可选项目数量的限制.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-checkbox-group \r\n    v-model=\"checkedCities\"\r\n    :min=\"1\"\r\n    :max=\"2\">\r\n    <el-checkbox v-for=\"city in cities\" :label=\"city\" :key=\"city\">{{city}}</el-checkbox>\r\n  </el-checkbox-group>\r\n  `,\r\n  data() {\r\n    const cityOptions = ['上海', '北京', '广州', '深圳']\r\n    return {\r\n      checkedCities: ['上海', '北京'],\r\n      cities: cityOptions\r\n    }\r\n  }\r\n})"}},可选项目数量的限制.parameters),按钮样式.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div>\r\n      <el-checkbox-group v-model="checkboxGroup1">\r\n        <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\r\n      </el-checkbox-group>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-checkbox-group v-model="checkboxGroup2" size="medium">\r\n        <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\r\n      </el-checkbox-group>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-checkbox-group v-model="checkboxGroup3" size="small">\r\n        <el-checkbox-button v-for="city in cities" :label="city" :disabled="city === \'北京\'" :key="city">{{city}}</el-checkbox-button>\r\n      </el-checkbox-group>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-checkbox-group v-model="checkboxGroup4" size="mini" disabled>\r\n        <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\r\n      </el-checkbox-group>\r\n    </div>\r\n  </div>`,\r\n  data() {\r\n    const cityOptions = [\'上海\', \'北京\', \'广州\', \'深圳\']\r\n    return {\r\n      checkboxGroup1: [\'上海\'],\r\n      checkboxGroup2: [\'上海\'],\r\n      checkboxGroup3: [\'上海\'],\r\n      checkboxGroup4: [\'上海\'],\r\n      cities: cityOptions\r\n    }\r\n  }\r\n})'}},按钮样式.parameters),带有边框.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div>\r\n      <el-checkbox v-model="checked1" label="备选项1" border></el-checkbox>\r\n      <el-checkbox v-model="checked2" label="备选项2" border></el-checkbox>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-checkbox v-model="checked3" label="备选项1" border size="medium"></el-checkbox>\r\n      <el-checkbox v-model="checked4" label="备选项2" border size="medium"></el-checkbox>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-checkbox-group v-model="checkboxGroup1" size="small">\r\n        <el-checkbox label="备选项1" border></el-checkbox>\r\n        <el-checkbox label="备选项2" border disabled></el-checkbox>\r\n      </el-checkbox-group>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-checkbox-group v-model="checkboxGroup2" size="mini" disabled>\r\n        <el-checkbox label="备选项1" border></el-checkbox>\r\n        <el-checkbox label="备选项2" border></el-checkbox>\r\n      </el-checkbox-group>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      checked1: true,\r\n      checked2: false,\r\n      checked3: false,\r\n      checked4: true,\r\n      checkboxGroup1: [],\r\n      checkboxGroup2: []\r\n    }\r\n  }\r\n})'}},带有边框.parameters)},"./src/storybook/element/ColorPicker.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"选择透明度",(function(){return 选择透明度})),__webpack_require__.d(__webpack_exports__,"预定义颜色",(function(){return 预定义颜色})),__webpack_require__.d(__webpack_exports__,"不同尺寸",(function(){return 不同尺寸}));__webpack_exports__.default={title:"Element/ColorPicker",argTypes:{value:{control:"text",description:"绑定值"},disabled:{control:"boolean",defaultValue:!1,description:"是否禁用"},size:{control:"radio",options:["medium","small","mini"],description:"尺寸"},"show-alpha":{control:"boolean",defaultValue:!1,description:"是否支持透明度选择"},"color-format":{control:"select",options:["hsl","hsv","hex","rgb"],description:"写入 v-model 的颜色的格式"},"popper-class":{control:"text",description:"ColorPicker 下拉框的类名"},predefine:{control:"object",description:"预定义颜色"}},parameters:{docs:{description:{component:"用于颜色选择，支持多种格式。"}}}};var Attributes=function(){return{}},基础用法=function(){return{template:'\n  <div>\n    <div class="block">\n      <span class="demonstration">有默认值</span>\n      <el-color-picker v-model="color1"></el-color-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">无默认值</span>\n      <el-color-picker v-model="color2"></el-color-picker>\n    </div>\n  </div>\n  ',data:function(){return{color1:"#409EFF",color2:null}}}},选择透明度=function(){return{template:'<el-color-picker v-model="color" show-alpha></el-color-picker>',data:function(){return{color:"rgba(19, 206, 102, 0.8)"}}}},预定义颜色=function(){return{template:'\n  <el-color-picker\n    v-model="color"\n    show-alpha\n    :predefine="predefineColors">\n  </el-color-picker>\n  ',data:function(){return{color:"rgba(255, 69, 0, 0.68)",predefineColors:["#ff4500","#ff8c00","#ffd700","#90ee90","#00ced1","#1e90ff","#c71585","rgba(255, 69, 0, 0.68)","rgb(255, 120, 0)","hsv(51, 100, 98)","hsva(120, 40, 94, 0.5)","hsl(181, 100%, 37%)","hsla(209, 100%, 56%, 0.73)","#c7158577"]}}}},不同尺寸=function(){return{template:'\n  <div>\n    <el-color-picker v-model="color"></el-color-picker>\n    <el-color-picker v-model="color" size="medium"></el-color-picker>\n    <el-color-picker v-model="color" size="small"></el-color-picker>\n    <el-color-picker v-model="color" size="mini"></el-color-picker>\n  </div>\n  ',data:function(){return{color:"#409EFF"}}}};Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),基础用法.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div class="block">\r\n      <span class="demonstration">有默认值</span>\r\n      <el-color-picker v-model="color1"></el-color-picker>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">无默认值</span>\r\n      <el-color-picker v-model="color2"></el-color-picker>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      color1: \'#409EFF\',\r\n      color2: null\r\n    }\r\n  }\r\n})'}},基础用法.parameters),选择透明度.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `<el-color-picker v-model=\"color\" show-alpha></el-color-picker>`,\r\n  data() {\r\n    return {\r\n      color: 'rgba(19, 206, 102, 0.8)'\r\n    }\r\n  }\r\n})"}},选择透明度.parameters),预定义颜色.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-color-picker\r\n    v-model=\"color\"\r\n    show-alpha\r\n    :predefine=\"predefineColors\">\r\n  </el-color-picker>\r\n  `,\r\n  data() {\r\n    return {\r\n      color: 'rgba(255, 69, 0, 0.68)',\r\n      predefineColors: [\r\n        '#ff4500',\r\n        '#ff8c00',\r\n        '#ffd700',\r\n        '#90ee90',\r\n        '#00ced1',\r\n        '#1e90ff',\r\n        '#c71585',\r\n        'rgba(255, 69, 0, 0.68)',\r\n        'rgb(255, 120, 0)',\r\n        'hsv(51, 100, 98)',\r\n        'hsva(120, 40, 94, 0.5)',\r\n        'hsl(181, 100%, 37%)',\r\n        'hsla(209, 100%, 56%, 0.73)',\r\n        '#c7158577'\r\n      ]\r\n    }\r\n  }\r\n})"}},预定义颜色.parameters),不同尺寸.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-color-picker v-model="color"></el-color-picker>\r\n    <el-color-picker v-model="color" size="medium"></el-color-picker>\r\n    <el-color-picker v-model="color" size="small"></el-color-picker>\r\n    <el-color-picker v-model="color" size="mini"></el-color-picker>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      color: \'#409EFF\'\r\n    }\r\n  }\r\n})'}},不同尺寸.parameters)},"./src/storybook/element/DatePicker.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"选择日",(function(){return 选择日})),__webpack_require__.d(__webpack_exports__,"其他日期单位",(function(){return 其他日期单位})),__webpack_require__.d(__webpack_exports__,"选择日期范围",(function(){return 选择日期范围})),__webpack_require__.d(__webpack_exports__,"选择月份范围",(function(){return 选择月份范围})),__webpack_require__.d(__webpack_exports__,"日期格式",(function(){return 日期格式})),__webpack_require__.d(__webpack_exports__,"默认显示日期",(function(){return 默认显示日期}));__webpack_exports__.default={title:"Element/DatePicker",argTypes:{value:{control:"text",description:"绑定值"},readonly:{control:"boolean",defaultValue:!1,description:"完全只读"},disabled:{control:"boolean",defaultValue:!1,description:"禁用"},editable:{control:"boolean",defaultValue:!0,description:"文本框可输入"},clearable:{control:"boolean",defaultValue:!0,description:"是否显示清除按钮"},size:{control:"radio",options:["medium","small","mini"],description:"输入框尺寸"},placeholder:{control:"text",description:"非范围选择时的占位内容"},"start-placeholder":{control:"text",description:"范围选择时开始日期的占位内容"},"end-placeholder":{control:"text",description:"范围选择时开始日期的占位内容"},type:{control:"select",options:["year","month","date","dates","week","datetime","datetimerange","daterange","monthrange"],defaultValue:"date",description:"显示类型"},format:{control:"string",default:"yyyy-MM-dd",description:"显示在输入框中的格式"},align:{control:"radio",options:["left","center","right"],defaultValue:"left",description:"对齐方式"},"popper-class":{control:"text",description:"DatePicker 下拉框的类名"},"picker-options":{control:"object",description:"当前时间日期选择器特有的选项"},"range-separator":{control:"text",defaultValue:"-",description:"选择范围时的分隔符"},"default-value":{control:"text",description:"可选，选择器打开时默认显示的时间"},"default-time":{control:"object",description:"范围选择时选中日期所使用的当日内具体时刻"},"value-format":{control:"text",description:"可选，仅TimePicker时可用，绑定值的格式。不指定则绑定值为 Date 对象"},name:{control:"text",description:"原生属性"},"unlink-panels":{control:"boolean",defaultValue:!1,description:"在范围选择器里取消两个日期面板之间的联动"},"prefix-icon":{control:"text",defaultValue:"el-icon-date",description:"自定义头部图标的类名"},"clear-icon":{control:"text",defaultValue:"el-icon-circle-close",description:"自定义清空图标的类名"},"validate-event":{control:"boolean",defaultValue:!0,description:"输入时是否触发表单的校验"}},parameters:{docs:{description:{component:"用于选择或输入日期"}}}};var Attributes=function(){return{}},选择日=function(){return{template:'\n  <div>\n    <div class="block">\n      <span class="demonstration">默认</span>\n      <el-date-picker\n        v-model="value1"\n        type="date"\n        placeholder="选择日期">\n      </el-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">带快捷选项</span>\n      <el-date-picker\n        v-model="value2"\n        align="right"\n        type="date"\n        placeholder="选择日期"\n        :picker-options="pickerOptions">\n      </el-date-picker>\n    </div>\n  </div>\n  ',data:function(){return{pickerOptions:{disabledDate:function(time){return time.getTime()>Date.now()},shortcuts:[{text:"今天",onClick:function(picker){picker.$emit("pick",new Date)}},{text:"昨天",onClick:function(picker){var date=new Date;date.setTime(date.getTime()-864e5),picker.$emit("pick",date)}},{text:"一周前",onClick:function(picker){var date=new Date;date.setTime(date.getTime()-6048e5),picker.$emit("pick",date)}}]},value1:"",value2:""}}}};选择日.parameters={docs:{description:{story:"以「日」为基本单位，基础的日期选择控件"}}};var 其他日期单位=function(){return{template:'\n  <div>\n    <div class="container">\n      <div class="block">\n        <span class="demonstration">周</span>\n        <el-date-picker\n          v-model="value1"\n          type="week"\n          format="yyyy 第 WW 周"\n          placeholder="选择周">\n        </el-date-picker>\n      </div>\n      <div class="block">\n        <span class="demonstration">月</span>\n        <el-date-picker\n          v-model="value2"\n          type="month"\n          placeholder="选择月">\n        </el-date-picker>\n      </div>\n    </div>\n    <div class="container">\n      <div class="block">\n        <span class="demonstration">年</span>\n        <el-date-picker\n          v-model="value3"\n          type="year"\n          placeholder="选择年">\n        </el-date-picker>\n      </div>\n      <div class="block">\n        <span class="demonstration">多个日期</span>\n        <el-date-picker\n          type="dates"\n          v-model="value4"\n          placeholder="选择一个或多个日期">\n        </el-date-picker>\n      </div>\n    </div>\n  </div>\n  ',data:function(){return{value1:"",value2:"",value3:"",value4:""}}}};其他日期单位.parameters={docs:{description:{story:"通过扩展基础的日期选择，可以选择周、月、年或多个日期"}}};var 选择日期范围=function(){return{template:'\n  <div>\n    <div class="block">\n      <span class="demonstration">默认</span>\n      <el-date-picker\n        v-model="value1"\n        type="daterange"\n        range-separator="至"\n        start-placeholder="开始日期"\n        end-placeholder="结束日期">\n      </el-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">带快捷选项</span>\n      <el-date-picker\n        v-model="value2"\n        type="daterange"\n        align="right"\n        unlink-panels\n        range-separator="至"\n        start-placeholder="开始日期"\n        end-placeholder="结束日期"\n        :picker-options="pickerOptions">\n      </el-date-picker>\n    </div>\n  </div>\n  ',data:function(){return{pickerOptions:{shortcuts:[{text:"最近一周",onClick:function(picker){var end=new Date,start=new Date;start.setTime(start.getTime()-6048e5),picker.$emit("pick",[start,end])}},{text:"最近一个月",onClick:function(picker){var end=new Date,start=new Date;start.setTime(start.getTime()-2592e6),picker.$emit("pick",[start,end])}},{text:"最近三个月",onClick:function(picker){var end=new Date,start=new Date;start.setTime(start.getTime()-7776e6),picker.$emit("pick",[start,end])}}]},value1:"",value2:""}}}};选择日期范围.parameters={docs:{description:{story:"可在一个选择器中便捷地选择一个时间范围"}}};var 选择月份范围=function(){return{template:'\n  <div>\n    <div class="block">\n      <span class="demonstration">默认</span>\n      <el-date-picker\n        v-model="value1"\n        type="monthrange"\n        range-separator="至"\n        start-placeholder="开始月份"\n        end-placeholder="结束月份">\n      </el-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">带快捷选项</span>\n      <el-date-picker\n        v-model="value2"\n        type="monthrange"\n        align="right"\n        unlink-panels\n        range-separator="至"\n        start-placeholder="开始月份"\n        end-placeholder="结束月份"\n        :picker-options="pickerOptions">\n      </el-date-picker>\n    </div>\n  </div>\n  ',data:function(){return{pickerOptions:{shortcuts:[{text:"本月",onClick:function(picker){picker.$emit("pick",[new Date,new Date])}},{text:"今年至今",onClick:function(picker){var end=new Date,start=new Date((new Date).getFullYear(),0);picker.$emit("pick",[start,end])}},{text:"最近六个月",onClick:function(picker){var end=new Date,start=new Date;start.setMonth(start.getMonth()-6),picker.$emit("pick",[start,end])}}]},value1:"",value2:""}}}};选择月份范围.parameters={docs:{description:{story:"可在一个选择器中便捷地选择一个月份范围"}}};var 日期格式=function(){return{template:'\n  <div>\n    <div class="block">\n      <span class="demonstration">默认为 Date 对象</span>\n      <div class="demonstration">值：{{ value1 }}</div>\n      <el-date-picker\n        v-model="value1"\n        type="date"\n        placeholder="选择日期"\n        format="yyyy 年 MM 月 dd 日">\n      </el-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">使用 value-format</span>\n      <div class="demonstration">值：{{ value2 }}</div>\n      <el-date-picker\n        v-model="value2"\n        type="date"\n        placeholder="选择日期"\n        format="yyyy 年 MM 月 dd 日"\n        value-format="yyyy-MM-dd">\n      </el-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">时间戳</span>\n      <div class="demonstration">值：{{ value3 }}</div>\n      <el-date-picker\n        v-model="value3"\n        type="date"\n        placeholder="选择日期"\n        format="yyyy 年 MM 月 dd 日"\n        value-format="timestamp">\n      </el-date-picker>\n    </div>\n  </div>\n  ',data:function(){return{value1:"",value2:"",value3:""}}}};日期格式.parameters={docs:{description:{story:"使用format指定输入框的格式；使用value-format指定绑定值的格式。默认情况下，组件接受并返回Date对象。"}}};var 默认显示日期=function(){return{template:'\n  <div class="block">\n    <p>组件值：{{ value }}</p>\n    <el-date-picker\n      v-model="value"\n      type="daterange"\n      start-placeholder="开始日期"\n      end-placeholder="结束日期"\n      :default-time="[\'00:00:00\', \'23:59:59\']">\n    </el-date-picker>\n  </div>\n  ',data:function(){return{value:""}}}};默认显示日期.parameters={docs:{description:{story:"在选择日期范围时，指定起始日期和结束日期的默认时刻。"}}},Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),选择日.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div class="block">\r\n      <span class="demonstration">默认</span>\r\n      <el-date-picker\r\n        v-model="value1"\r\n        type="date"\r\n        placeholder="选择日期">\r\n      </el-date-picker>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">带快捷选项</span>\r\n      <el-date-picker\r\n        v-model="value2"\r\n        align="right"\r\n        type="date"\r\n        placeholder="选择日期"\r\n        :picker-options="pickerOptions">\r\n      </el-date-picker>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      pickerOptions: {\r\n        disabledDate(time) {\r\n          return time.getTime() > Date.now()\r\n        },\r\n        shortcuts: [\r\n          {\r\n            text: \'今天\',\r\n            onClick(picker) {\r\n              picker.$emit(\'pick\', new Date())\r\n            }\r\n          },\r\n          {\r\n            text: \'昨天\',\r\n            onClick(picker) {\r\n              const date = new Date()\r\n              date.setTime(date.getTime() - 3600 * 1000 * 24)\r\n              picker.$emit(\'pick\', date)\r\n            }\r\n          },\r\n          {\r\n            text: \'一周前\',\r\n            onClick(picker) {\r\n              const date = new Date()\r\n              date.setTime(date.getTime() - 3600 * 1000 * 24 * 7)\r\n              picker.$emit(\'pick\', date)\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      value1: \'\',\r\n      value2: \'\'\r\n    }\r\n  }\r\n})'}},选择日.parameters),其他日期单位.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div class="container">\r\n      <div class="block">\r\n        <span class="demonstration">周</span>\r\n        <el-date-picker\r\n          v-model="value1"\r\n          type="week"\r\n          format="yyyy 第 WW 周"\r\n          placeholder="选择周">\r\n        </el-date-picker>\r\n      </div>\r\n      <div class="block">\r\n        <span class="demonstration">月</span>\r\n        <el-date-picker\r\n          v-model="value2"\r\n          type="month"\r\n          placeholder="选择月">\r\n        </el-date-picker>\r\n      </div>\r\n    </div>\r\n    <div class="container">\r\n      <div class="block">\r\n        <span class="demonstration">年</span>\r\n        <el-date-picker\r\n          v-model="value3"\r\n          type="year"\r\n          placeholder="选择年">\r\n        </el-date-picker>\r\n      </div>\r\n      <div class="block">\r\n        <span class="demonstration">多个日期</span>\r\n        <el-date-picker\r\n          type="dates"\r\n          v-model="value4"\r\n          placeholder="选择一个或多个日期">\r\n        </el-date-picker>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value1: \'\',\r\n      value2: \'\',\r\n      value3: \'\',\r\n      value4: \'\'\r\n    }\r\n  }\r\n})'}},其他日期单位.parameters),选择日期范围.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div class="block">\r\n      <span class="demonstration">默认</span>\r\n      <el-date-picker\r\n        v-model="value1"\r\n        type="daterange"\r\n        range-separator="至"\r\n        start-placeholder="开始日期"\r\n        end-placeholder="结束日期">\r\n      </el-date-picker>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">带快捷选项</span>\r\n      <el-date-picker\r\n        v-model="value2"\r\n        type="daterange"\r\n        align="right"\r\n        unlink-panels\r\n        range-separator="至"\r\n        start-placeholder="开始日期"\r\n        end-placeholder="结束日期"\r\n        :picker-options="pickerOptions">\r\n      </el-date-picker>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      pickerOptions: {\r\n        shortcuts: [\r\n          {\r\n            text: \'最近一周\',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\r\n              picker.$emit(\'pick\', [start, end])\r\n            }\r\n          },\r\n          {\r\n            text: \'最近一个月\',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n              picker.$emit(\'pick\', [start, end])\r\n            }\r\n          },\r\n          {\r\n            text: \'最近三个月\',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n              picker.$emit(\'pick\', [start, end])\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      value1: \'\',\r\n      value2: \'\'\r\n    }\r\n  }\r\n})'}},选择日期范围.parameters),选择月份范围.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div class="block">\r\n      <span class="demonstration">默认</span>\r\n      <el-date-picker\r\n        v-model="value1"\r\n        type="monthrange"\r\n        range-separator="至"\r\n        start-placeholder="开始月份"\r\n        end-placeholder="结束月份">\r\n      </el-date-picker>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">带快捷选项</span>\r\n      <el-date-picker\r\n        v-model="value2"\r\n        type="monthrange"\r\n        align="right"\r\n        unlink-panels\r\n        range-separator="至"\r\n        start-placeholder="开始月份"\r\n        end-placeholder="结束月份"\r\n        :picker-options="pickerOptions">\r\n      </el-date-picker>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      pickerOptions: {\r\n        shortcuts: [\r\n          {\r\n            text: \'本月\',\r\n            onClick(picker) {\r\n              picker.$emit(\'pick\', [new Date(), new Date()])\r\n            }\r\n          },\r\n          {\r\n            text: \'今年至今\',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date(new Date().getFullYear(), 0)\r\n              picker.$emit(\'pick\', [start, end])\r\n            }\r\n          },\r\n          {\r\n            text: \'最近六个月\',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setMonth(start.getMonth() - 6)\r\n              picker.$emit(\'pick\', [start, end])\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      value1: \'\',\r\n      value2: \'\'\r\n    }\r\n  }\r\n})'}},选择月份范围.parameters),日期格式.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div class="block">\r\n      <span class="demonstration">默认为 Date 对象</span>\r\n      <div class="demonstration">值：{{ value1 }}</div>\r\n      <el-date-picker\r\n        v-model="value1"\r\n        type="date"\r\n        placeholder="选择日期"\r\n        format="yyyy 年 MM 月 dd 日">\r\n      </el-date-picker>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">使用 value-format</span>\r\n      <div class="demonstration">值：{{ value2 }}</div>\r\n      <el-date-picker\r\n        v-model="value2"\r\n        type="date"\r\n        placeholder="选择日期"\r\n        format="yyyy 年 MM 月 dd 日"\r\n        value-format="yyyy-MM-dd">\r\n      </el-date-picker>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">时间戳</span>\r\n      <div class="demonstration">值：{{ value3 }}</div>\r\n      <el-date-picker\r\n        v-model="value3"\r\n        type="date"\r\n        placeholder="选择日期"\r\n        format="yyyy 年 MM 月 dd 日"\r\n        value-format="timestamp">\r\n      </el-date-picker>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value1: \'\',\r\n      value2: \'\',\r\n      value3: \'\'\r\n    }\r\n  }\r\n})'}},日期格式.parameters),默认显示日期.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div class="block">\r\n    <p>组件值：{{ value }}</p>\r\n    <el-date-picker\r\n      v-model="value"\r\n      type="daterange"\r\n      start-placeholder="开始日期"\r\n      end-placeholder="结束日期"\r\n      :default-time="[\'00:00:00\', \'23:59:59\']">\r\n    </el-date-picker>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: \'\'\r\n    }\r\n  }\r\n})'}},默认显示日期.parameters)},"./src/storybook/element/DateTimePicker.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"日期和时间点",(function(){return 日期和时间点})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"默认的起始与结束时刻",(function(){return 默认的起始与结束时刻}));__webpack_exports__.default={title:"Element/DateTimePicker",argTypes:{value:{control:"text",description:"绑定值"},readonly:{control:"boolean",defaultValue:!1,description:"完全只读"},disabled:{control:"boolean",defaultValue:!1,description:"禁用"},editable:{control:"boolean",defaultValue:!0,description:"文本框可输入"},clearable:{control:"boolean",defaultValue:!0,description:"是否显示清除按钮"},size:{control:"radio",options:["medium","small","mini"],description:"输入框尺寸"},placeholder:{control:"text",description:"非范围选择时的占位内容"},"start-placeholder":{control:"text",description:"范围选择时开始日期的占位内容"},"end-placeholder":{control:"text",description:"范围选择时结束日期的占位内容"},"time-arrow-control":{control:"boolean",defaultValue:!1,description:"是否使用箭头进行时间选择"},type:{control:"select",options:["year","month","date","week","datetime","datetimerange","daterange"],defaultValue:"date",description:"显示类型"},format:{control:"string",default:"yyyy-MM-dd HH:mm:ss",description:"显示在输入框中的格式"},align:{control:"radio",options:["left","center","right"],defaultValue:"left",description:"对齐方式"},"popper-class":{control:"text",description:"DateTimePicker 下拉框的类名"},"picker-options":{control:"object",description:"当前时间日期选择器特有的选项"},"range-separator":{control:"text",defaultValue:"-",description:"选择范围时的分隔符"},"default-value":{control:"text",description:"可选，选择器打开时默认显示的时间"},"default-time":{control:"object",description:"选中日期后的默认具体时刻"},"value-format":{control:"text",description:"可选，绑定值的格式。不指定则绑定值为 Date 对象"},name:{control:"text",description:"原生属性"},"unlink-panels":{control:"boolean",defaultValue:!1,description:"在范围选择器里取消两个日期面板之间的联动"},"prefix-icon":{control:"text",defaultValue:"el-icon-date",description:"自定义头部图标的类名"},"clear-icon":{control:"text",defaultValue:"el-icon-circle-close",description:"自定义清空图标的类名"}},parameters:{docs:{description:{component:"在同一个选择器里选择日期和时间"}}}};var Attributes=function(){return{}},日期和时间点=function(){return{template:'\n  <div>\n    <div class="block">\n      <span class="demonstration">默认</span>\n      <el-date-picker\n        v-model="value1"\n        type="datetime"\n        placeholder="选择日期时间">\n      </el-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">带快捷选项</span>\n      <el-date-picker\n        v-model="value2"\n        type="datetime"\n        placeholder="选择日期时间"\n        align="right"\n        :picker-options="pickerOptions">\n      </el-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">设置默认时间</span>\n      <el-date-picker\n        v-model="value3"\n        type="datetime"\n        placeholder="选择日期时间"\n        default-time="12:00:00">\n      </el-date-picker>\n    </div>\n  </div>\n  ',data:function(){return{pickerOptions:{shortcuts:[{text:"今天",onClick:function(picker){picker.$emit("pick",new Date)}},{text:"昨天",onClick:function(picker){var date=new Date;date.setTime(date.getTime()-864e5),picker.$emit("pick",date)}},{text:"一周前",onClick:function(picker){var date=new Date;date.setTime(date.getTime()-6048e5),picker.$emit("pick",date)}}]},value1:"",value2:"",value3:""}}}},基础用法=function(){return{template:'\n  <div class="block">\n    <span class="demonstration">默认</span>\n    <el-date-picker\n      v-model="value1"\n      type="datetimerange"\n      range-separator="至"\n      start-placeholder="开始日期"\n      end-placeholder="结束日期">\n    </el-date-picker>\n  </div>\n  <div class="block">\n    <span class="demonstration">带快捷选项</span>\n    <el-date-picker\n      v-model="value2"\n      type="datetimerange"\n      :picker-options="pickerOptions"\n      range-separator="至"\n      start-placeholder="开始日期"\n      end-placeholder="结束日期"\n      align="right">\n    </el-date-picker>\n  </div>\n  ',data:function(){return{pickerOptions:{shortcuts:[{text:"最近一周",onClick:function(picker){var end=new Date,start=new Date;start.setTime(start.getTime()-6048e5),picker.$emit("pick",[start,end])}},{text:"最近一个月",onClick:function(picker){var end=new Date,start=new Date;start.setTime(start.getTime()-2592e6),picker.$emit("pick",[start,end])}},{text:"最近三个月",onClick:function(picker){var end=new Date,start=new Date;start.setTime(start.getTime()-7776e6),picker.$emit("pick",[start,end])}}]},value1:[new Date(2e3,10,10,10,10),new Date(2e3,10,11,10,10)],value2:""}}}},默认的起始与结束时刻=function(){return{template:'\n  <div>\n    <div class="block">\n      <span class="demonstration">起始日期时刻为 12:00:00</span>\n      <el-date-picker\n        v-model="value1"\n        type="datetimerange"\n        start-placeholder="开始日期"\n        end-placeholder="结束日期"\n        :default-time="[\'12:00:00\']">\n      </el-date-picker>\n    </div>\n    <div class="block">\n      <span class="demonstration">起始日期时刻为 12:00:00，结束日期时刻为 08:00:00</span>\n      <el-date-picker\n        v-model="value2"\n        type="datetimerange"\n        align="right"\n        start-placeholder="开始日期"\n        end-placeholder="结束日期"\n        :default-time="[\'12:00:00\', \'08:00:00\']">\n      </el-date-picker>\n    </div>\n  </div>\n  ',data:function(){return{value1:"",value2:""}}}};Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),日期和时间点.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div class="block">\r\n      <span class="demonstration">默认</span>\r\n      <el-date-picker\r\n        v-model="value1"\r\n        type="datetime"\r\n        placeholder="选择日期时间">\r\n      </el-date-picker>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">带快捷选项</span>\r\n      <el-date-picker\r\n        v-model="value2"\r\n        type="datetime"\r\n        placeholder="选择日期时间"\r\n        align="right"\r\n        :picker-options="pickerOptions">\r\n      </el-date-picker>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">设置默认时间</span>\r\n      <el-date-picker\r\n        v-model="value3"\r\n        type="datetime"\r\n        placeholder="选择日期时间"\r\n        default-time="12:00:00">\r\n      </el-date-picker>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      pickerOptions: {\r\n        shortcuts: [\r\n          {\r\n            text: \'今天\',\r\n            onClick(picker) {\r\n              picker.$emit(\'pick\', new Date())\r\n            }\r\n          },\r\n          {\r\n            text: \'昨天\',\r\n            onClick(picker) {\r\n              const date = new Date()\r\n              date.setTime(date.getTime() - 3600 * 1000 * 24)\r\n              picker.$emit(\'pick\', date)\r\n            }\r\n          },\r\n          {\r\n            text: \'一周前\',\r\n            onClick(picker) {\r\n              const date = new Date()\r\n              date.setTime(date.getTime() - 3600 * 1000 * 24 * 7)\r\n              picker.$emit(\'pick\', date)\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      value1: \'\',\r\n      value2: \'\',\r\n      value3: \'\'\r\n    }\r\n  }\r\n})'}},日期和时间点.parameters),基础用法.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div class="block">\r\n    <span class="demonstration">默认</span>\r\n    <el-date-picker\r\n      v-model="value1"\r\n      type="datetimerange"\r\n      range-separator="至"\r\n      start-placeholder="开始日期"\r\n      end-placeholder="结束日期">\r\n    </el-date-picker>\r\n  </div>\r\n  <div class="block">\r\n    <span class="demonstration">带快捷选项</span>\r\n    <el-date-picker\r\n      v-model="value2"\r\n      type="datetimerange"\r\n      :picker-options="pickerOptions"\r\n      range-separator="至"\r\n      start-placeholder="开始日期"\r\n      end-placeholder="结束日期"\r\n      align="right">\r\n    </el-date-picker>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      pickerOptions: {\r\n        shortcuts: [\r\n          {\r\n            text: \'最近一周\',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\r\n              picker.$emit(\'pick\', [start, end])\r\n            }\r\n          },\r\n          {\r\n            text: \'最近一个月\',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n              picker.$emit(\'pick\', [start, end])\r\n            }\r\n          },\r\n          {\r\n            text: \'最近三个月\',\r\n            onClick(picker) {\r\n              const end = new Date()\r\n              const start = new Date()\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n              picker.$emit(\'pick\', [start, end])\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      value1: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\r\n      value2: \'\'\r\n    }\r\n  }\r\n})'}},基础用法.parameters),默认的起始与结束时刻.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div class="block">\r\n      <span class="demonstration">起始日期时刻为 12:00:00</span>\r\n      <el-date-picker\r\n        v-model="value1"\r\n        type="datetimerange"\r\n        start-placeholder="开始日期"\r\n        end-placeholder="结束日期"\r\n        :default-time="[\'12:00:00\']">\r\n      </el-date-picker>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">起始日期时刻为 12:00:00，结束日期时刻为 08:00:00</span>\r\n      <el-date-picker\r\n        v-model="value2"\r\n        type="datetimerange"\r\n        align="right"\r\n        start-placeholder="开始日期"\r\n        end-placeholder="结束日期"\r\n        :default-time="[\'12:00:00\', \'08:00:00\']">\r\n      </el-date-picker>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value1: \'\',\r\n      value2: \'\'\r\n    }\r\n  }\r\n})'}},默认的起始与结束时刻.parameters)},"./src/storybook/element/Form.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"典型表单",(function(){return 典型表单})),__webpack_require__.d(__webpack_exports__,"行内表单",(function(){return 行内表单})),__webpack_require__.d(__webpack_exports__,"对齐方式",(function(){return 对齐方式})),__webpack_require__.d(__webpack_exports__,"表单验证",(function(){return 表单验证})),__webpack_require__.d(__webpack_exports__,"自定义校验规则",(function(){return 自定义校验规则})),__webpack_require__.d(__webpack_exports__,"动态增减表单项",(function(){return 动态增减表单项})),__webpack_require__.d(__webpack_exports__,"数字类型验证",(function(){return 数字类型验证})),__webpack_require__.d(__webpack_exports__,"表单内组件尺寸控制",(function(){return 表单内组件尺寸控制}));__webpack_require__("./node_modules/core-js/modules/es.error.cause.js");__webpack_exports__.default={title:"Element/Form",argTypes:{model:{control:"object",description:"表单数据对象"},rules:{control:"object",description:"表单验证规则"},inline:{control:"boolean",defaultValue:!1,description:"行内表单模式"},"label-position":{control:"radio",options:["right","left","top"],defaultValue:"right",description:"表单域标签的位置，如果值为 left 或者 right 时，则需要设置 label-width"},"label-width":{control:"text",description:"表单域标签的宽度，例如 '50px'。作为 Form 直接子元素的 form-item 会继承该值。支持 auto。"},"label-suffix":{control:"text",description:"表单域标签的后缀"},"hide-required-asterisk":{control:"boolean",defaultValue:!1,description:"是否隐藏必填字段的标签旁边的红色星号"},"show-message":{control:"boolean",defaultValue:!0,description:"是否显示校验错误信息"},"inline-message":{control:"boolean",defaultValue:!1,description:"是否以行内形式展示校验信息"},"status-icon":{control:"boolean",defaultValue:!1,description:"是否在输入框中显示校验结果反馈图标"},"validate-on-rule-change":{control:"boolean",defaultValue:!0,description:"是否在 rules 属性改变后立即触发一次验证"},size:{control:"radio",options:["medium","small","mini"],description:"\t用于控制该表单内组件的尺寸"},disabled:{control:"boolean",defaultValue:!1,description:"是否禁用该表单内的所有组件。若设置为 true，则表单内组件上的 disabled 属性不再生效"}},parameters:{docs:{description:{component:"由输入框、选择器、单选框、多选框等控件组成，用以收集、校验、提交数据"}}}};var Attributes=function(){return{}},典型表单=function(){return{template:'\n  <el-form ref="form" :model="form" label-width="80px">\n    <el-form-item label="活动名称">\n      <el-input v-model="form.name"></el-input>\n    </el-form-item>\n    <el-form-item label="活动区域">\n      <el-select v-model="form.region" placeholder="请选择活动区域">\n        <el-option label="区域一" value="shanghai"></el-option>\n        <el-option label="区域二" value="beijing"></el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item label="活动时间">\n      <el-col :span="11">\n        <el-date-picker type="date" placeholder="选择日期" v-model="form.date1" style="width: 100%;"></el-date-picker>\n      </el-col>\n      <el-col class="line" :span="2">-</el-col>\n      <el-col :span="11">\n        <el-time-picker placeholder="选择时间" v-model="form.date2" style="width: 100%;"></el-time-picker>\n      </el-col>\n    </el-form-item>\n    <el-form-item label="即时配送">\n      <el-switch v-model="form.delivery"></el-switch>\n    </el-form-item>\n    <el-form-item label="活动性质">\n      <el-checkbox-group v-model="form.type">\n        <el-checkbox label="美食/餐厅线上活动" name="type"></el-checkbox>\n        <el-checkbox label="地推活动" name="type"></el-checkbox>\n        <el-checkbox label="线下主题活动" name="type"></el-checkbox>\n        <el-checkbox label="单纯品牌曝光" name="type"></el-checkbox>\n      </el-checkbox-group>\n    </el-form-item>\n    <el-form-item label="特殊资源">\n      <el-radio-group v-model="form.resource">\n        <el-radio label="线上品牌商赞助"></el-radio>\n        <el-radio label="线下场地免费"></el-radio>\n      </el-radio-group>\n    </el-form-item>\n    <el-form-item label="活动形式">\n      <el-input type="textarea" v-model="form.desc"></el-input>\n    </el-form-item>\n    <el-form-item>\n      <el-button type="primary" @click="onSubmit">立即创建</el-button>\n      <el-button>取消</el-button>\n    </el-form-item>\n  </el-form>\n  ',data:function(){return{form:{name:"",region:"",date1:"",date2:"",delivery:!1,type:[],resource:"",desc:""}}},methods:{onSubmit:function(){console.log("submit!")}}}};典型表单.parameters={docs:{description:{story:"包括各种表单项，比如输入框、选择器、开关、单选框、多选框等。"}}};var 行内表单=function(){return{template:'\n  <el-form :inline="true" :model="formInline" class="demo-form-inline">\n    <el-form-item label="审批人">\n      <el-input v-model="formInline.user" placeholder="审批人"></el-input>\n    </el-form-item>\n    <el-form-item label="活动区域">\n      <el-select v-model="formInline.region" placeholder="活动区域">\n        <el-option label="区域一" value="shanghai"></el-option>\n        <el-option label="区域二" value="beijing"></el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item>\n      <el-button type="primary" @click="onSubmit">查询</el-button>\n    </el-form-item>\n  </el-form>\n  ',data:function(){return{formInline:{user:"",region:""}}},methods:{onSubmit:function(){console.log("submit!")}}}};行内表单.parameters={docs:{description:{story:"当垂直方向空间受限且表单较简单时，可以在一行内放置表单。"}}};var 对齐方式=function(){return{template:'\n  <div>\n    <el-radio-group v-model="labelPosition" size="small">\n    <el-radio-button label="left">左对齐</el-radio-button>\n    <el-radio-button label="right">右对齐</el-radio-button>\n    <el-radio-button label="top">顶部对齐</el-radio-button>\n    </el-radio-group>\n    <div style="margin: 20px;"></div>\n    <el-form :label-position="labelPosition" label-width="80px" :model="formLabelAlign">\n      <el-form-item label="名称">\n        <el-input v-model="formLabelAlign.name"></el-input>\n      </el-form-item>\n      <el-form-item label="活动区域">\n        <el-input v-model="formLabelAlign.region"></el-input>\n      </el-form-item>\n      <el-form-item label="活动形式">\n        <el-input v-model="formLabelAlign.type"></el-input>\n      </el-form-item>\n    </el-form>\n  </div>\n  ',data:function(){return{labelPosition:"right",formLabelAlign:{name:"",region:"",type:""}}}}};对齐方式.parameters={docs:{description:{story:"根据具体目标和制约因素，选择最佳的标签对齐方式。"}}};var 表单验证=function(){return{template:'\n  <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">\n    <el-form-item label="活动名称" prop="name">\n      <el-input v-model="ruleForm.name"></el-input>\n    </el-form-item>\n    <el-form-item label="活动区域" prop="region">\n      <el-select v-model="ruleForm.region" placeholder="请选择活动区域">\n        <el-option label="区域一" value="shanghai"></el-option>\n        <el-option label="区域二" value="beijing"></el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item label="活动时间" required>\n      <el-col :span="11">\n        <el-form-item prop="date1">\n          <el-date-picker type="date" placeholder="选择日期" v-model="ruleForm.date1" style="width: 100%;"></el-date-picker>\n        </el-form-item>\n      </el-col>\n      <el-col class="line" :span="2">-</el-col>\n      <el-col :span="11">\n        <el-form-item prop="date2">\n          <el-time-picker placeholder="选择时间" v-model="ruleForm.date2" style="width: 100%;"></el-time-picker>\n        </el-form-item>\n      </el-col>\n    </el-form-item>\n    <el-form-item label="即时配送" prop="delivery">\n      <el-switch v-model="ruleForm.delivery"></el-switch>\n    </el-form-item>\n    <el-form-item label="活动性质" prop="type">\n      <el-checkbox-group v-model="ruleForm.type">\n        <el-checkbox label="美食/餐厅线上活动" name="type"></el-checkbox>\n        <el-checkbox label="地推活动" name="type"></el-checkbox>\n        <el-checkbox label="线下主题活动" name="type"></el-checkbox>\n        <el-checkbox label="单纯品牌曝光" name="type"></el-checkbox>\n      </el-checkbox-group>\n    </el-form-item>\n    <el-form-item label="特殊资源" prop="resource">\n      <el-radio-group v-model="ruleForm.resource">\n        <el-radio label="线上品牌商赞助"></el-radio>\n        <el-radio label="线下场地免费"></el-radio>\n      </el-radio-group>\n    </el-form-item>\n    <el-form-item label="活动形式" prop="desc">\n      <el-input type="textarea" v-model="ruleForm.desc"></el-input>\n    </el-form-item>\n    <el-form-item>\n      <el-button type="primary" @click="submitForm(\'ruleForm\')">立即创建</el-button>\n      <el-button @click="resetForm(\'ruleForm\')">重置</el-button>\n    </el-form-item>\n  </el-form>\n  ',data:function(){return{ruleForm:{name:"",region:"",date1:"",date2:"",delivery:!1,type:[],resource:"",desc:""},rules:{name:[{required:!0,message:"请输入活动名称",trigger:"blur"},{min:3,max:5,message:"长度在 3 到 5 个字符",trigger:"blur"}],region:[{required:!0,message:"请选择活动区域",trigger:"change"}],date1:[{type:"date",required:!0,message:"请选择日期",trigger:"change"}],date2:[{type:"date",required:!0,message:"请选择时间",trigger:"change"}],type:[{type:"array",required:!0,message:"请至少选择一个活动性质",trigger:"change"}],resource:[{required:!0,message:"请选择活动资源",trigger:"change"}],desc:[{required:!0,message:"请填写活动形式",trigger:"blur"}]}}},methods:{submitForm:function(formName){this.$refs[formName].validate((function(valid){if(!valid)return console.log("error submit!!"),!1;alert("submit!")}))},resetForm:function(formName){this.$refs[formName].resetFields()}}}};表单验证.parameters={docs:{description:{story:"在防止用户犯错的前提下，尽可能让用户更早地发现并纠正错误。"}}};var 自定义校验规则=function(){return{template:'\n  <el-form :model="ruleForm" status-icon :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">\n    <el-form-item label="密码" prop="pass">\n      <el-input type="password" v-model="ruleForm.pass" autocomplete="off"></el-input>\n    </el-form-item>\n    <el-form-item label="确认密码" prop="checkPass">\n      <el-input type="password" v-model="ruleForm.checkPass" autocomplete="off"></el-input>\n    </el-form-item>\n    <el-form-item label="年龄" prop="age">\n      <el-input v-model.number="ruleForm.age"></el-input>\n    </el-form-item>\n    <el-form-item>\n      <el-button type="primary" @click="submitForm(\'ruleForm\')">提交</el-button>\n      <el-button @click="resetForm(\'ruleForm\')">重置</el-button>\n    </el-form-item>\n  </el-form>\n  ',data:function(){var _this=this;return{ruleForm:{pass:"",checkPass:"",age:""},rules:{pass:[{validator:function(rule,value,callback){""===value?callback(new Error("请输入密码")):(""!==_this.ruleForm.checkPass&&_this.$refs.ruleForm.validateField("checkPass"),callback())},trigger:"blur"}],checkPass:[{validator:function(rule,value,callback){""===value?callback(new Error("请再次输入密码")):value!==_this.ruleForm.pass?callback(new Error("两次输入密码不一致!")):callback()},trigger:"blur"}],age:[{validator:function(rule,value,callback){if(!value)return callback(new Error("年龄不能为空"));setTimeout((function(){Number.isInteger(value)?value<18?callback(new Error("必须年满18岁")):callback():callback(new Error("请输入数字值"))}),1e3)},trigger:"blur"}]}}},methods:{submitForm:function(formName){this.$refs[formName].validate((function(valid){if(!valid)return console.log("error submit!!"),!1;alert("submit!")}))},resetForm:function(formName){this.$refs[formName].resetFields()}}}};自定义校验规则.parameters={docs:{description:{story:"这个例子中展示了如何使用自定义验证规则来完成密码的二次验证。"}}};var 动态增减表单项=function(){return{template:'\n  <el-form :model="dynamicValidateForm" ref="dynamicValidateForm" label-width="100px" class="demo-dynamic">\n    <el-form-item\n      prop="email"\n      label="邮箱"\n      :rules="[\n        { required: true, message: \'请输入邮箱地址\', trigger: \'blur\' },\n        { type: \'email\', message: \'请输入正确的邮箱地址\', trigger: [\'blur\', \'change\'] }\n      ]"\n    >\n      <el-input v-model="dynamicValidateForm.email"></el-input>\n    </el-form-item>\n    <el-form-item\n      v-for="(domain, index) in dynamicValidateForm.domains"\n      :label="\'域名\' + index"\n      :key="domain.key"\n      :prop="\'domains.\' + index + \'.value\'"\n      :rules="{\n        required: true, message: \'域名不能为空\', trigger: \'blur\'\n      }"\n    >\n      <el-input v-model="domain.value"></el-input><el-button @click.prevent="removeDomain(domain)">删除</el-button>\n    </el-form-item>\n    <el-form-item>\n      <el-button type="primary" @click="submitForm(\'dynamicValidateForm\')">提交</el-button>\n      <el-button @click="addDomain">新增域名</el-button>\n      <el-button @click="resetForm(\'dynamicValidateForm\')">重置</el-button>\n    </el-form-item>\n  </el-form>\n  ',data:function(){return{dynamicValidateForm:{domains:[{value:""}],email:""}}},methods:{submitForm:function(formName){this.$refs[formName].validate((function(valid){if(!valid)return console.log("error submit!!"),!1;alert("submit!")}))},resetForm:function(formName){this.$refs[formName].resetFields()},removeDomain:function(item){var index=this.dynamicValidateForm.domains.indexOf(item);-1!==index&&this.dynamicValidateForm.domains.splice(index,1)},addDomain:function(){this.dynamicValidateForm.domains.push({value:"",key:Date.now()})}}}},数字类型验证=function(){return{template:'\n  <el-form :model="numberValidateForm" ref="numberValidateForm" label-width="100px" class="demo-ruleForm">\n    <el-form-item\n      label="年龄"\n      prop="age"\n      :rules="[\n        { required: true, message: \'年龄不能为空\'},\n        { type: \'number\', message: \'年龄必须为数字值\'}\n      ]"\n    >\n      <el-input type="age" v-model.number="numberValidateForm.age" autocomplete="off"></el-input>\n    </el-form-item>\n    <el-form-item>\n      <el-button type="primary" @click="submitForm(\'numberValidateForm\')">提交</el-button>\n      <el-button @click="resetForm(\'numberValidateForm\')">重置</el-button>\n    </el-form-item>\n  </el-form>\n  ',data:function(){return{numberValidateForm:{age:""}}},methods:{submitForm:function(formName){this.$refs[formName].validate((function(valid){if(!valid)return console.log("error submit!!"),!1;alert("submit!")}))},resetForm:function(formName){this.$refs[formName].resetFields()}}}},表单内组件尺寸控制=function(){return{template:'\n  <el-form ref="form" :model="sizeForm" label-width="80px" size="mini">\n    <el-form-item label="活动名称">\n      <el-input v-model="sizeForm.name"></el-input>\n    </el-form-item>\n    <el-form-item label="活动区域">\n      <el-select v-model="sizeForm.region" placeholder="请选择活动区域">\n        <el-option label="区域一" value="shanghai"></el-option>\n        <el-option label="区域二" value="beijing"></el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item label="活动时间">\n      <el-col :span="11">\n        <el-date-picker type="date" placeholder="选择日期" v-model="sizeForm.date1" style="width: 100%;"></el-date-picker>\n      </el-col>\n      <el-col class="line" :span="2">-</el-col>\n      <el-col :span="11">\n        <el-time-picker placeholder="选择时间" v-model="sizeForm.date2" style="width: 100%;"></el-time-picker>\n      </el-col>\n    </el-form-item>\n    <el-form-item label="活动性质">\n      <el-checkbox-group v-model="sizeForm.type">\n        <el-checkbox-button label="美食/餐厅线上活动" name="type"></el-checkbox-button>\n        <el-checkbox-button label="地推活动" name="type"></el-checkbox-button>\n        <el-checkbox-button label="线下主题活动" name="type"></el-checkbox-button>\n      </el-checkbox-group>\n    </el-form-item>\n    <el-form-item label="特殊资源">\n      <el-radio-group v-model="sizeForm.resource" size="medium">\n        <el-radio border label="线上品牌商赞助"></el-radio>\n        <el-radio border label="线下场地免费"></el-radio>\n      </el-radio-group>\n    </el-form-item>\n    <el-form-item size="large">\n      <el-button type="primary" @click="onSubmit">立即创建</el-button>\n      <el-button>取消</el-button>\n    </el-form-item>\n  </el-form>\n  ',data:function(){return{sizeForm:{name:"",region:"",date1:"",date2:"",delivery:!1,type:[],resource:"",desc:""}}},methods:{onSubmit:function(){console.log("submit!")}}}};表单内组件尺寸控制.parameters={docs:{description:{story:"通过设置 Form 上的 size 属性可以使该表单内所有可调节大小的组件继承该尺寸。Form-Item 也具有该属性。"}}},Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),典型表单.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-form ref="form" :model="form" label-width="80px">\r\n    <el-form-item label="活动名称">\r\n      <el-input v-model="form.name"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label="活动区域">\r\n      <el-select v-model="form.region" placeholder="请选择活动区域">\r\n        <el-option label="区域一" value="shanghai"></el-option>\r\n        <el-option label="区域二" value="beijing"></el-option>\r\n      </el-select>\r\n    </el-form-item>\r\n    <el-form-item label="活动时间">\r\n      <el-col :span="11">\r\n        <el-date-picker type="date" placeholder="选择日期" v-model="form.date1" style="width: 100%;"></el-date-picker>\r\n      </el-col>\r\n      <el-col class="line" :span="2">-</el-col>\r\n      <el-col :span="11">\r\n        <el-time-picker placeholder="选择时间" v-model="form.date2" style="width: 100%;"></el-time-picker>\r\n      </el-col>\r\n    </el-form-item>\r\n    <el-form-item label="即时配送">\r\n      <el-switch v-model="form.delivery"></el-switch>\r\n    </el-form-item>\r\n    <el-form-item label="活动性质">\r\n      <el-checkbox-group v-model="form.type">\r\n        <el-checkbox label="美食/餐厅线上活动" name="type"></el-checkbox>\r\n        <el-checkbox label="地推活动" name="type"></el-checkbox>\r\n        <el-checkbox label="线下主题活动" name="type"></el-checkbox>\r\n        <el-checkbox label="单纯品牌曝光" name="type"></el-checkbox>\r\n      </el-checkbox-group>\r\n    </el-form-item>\r\n    <el-form-item label="特殊资源">\r\n      <el-radio-group v-model="form.resource">\r\n        <el-radio label="线上品牌商赞助"></el-radio>\r\n        <el-radio label="线下场地免费"></el-radio>\r\n      </el-radio-group>\r\n    </el-form-item>\r\n    <el-form-item label="活动形式">\r\n      <el-input type="textarea" v-model="form.desc"></el-input>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type="primary" @click="onSubmit">立即创建</el-button>\r\n      <el-button>取消</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n  `,\r\n  data() {\r\n    return {\r\n      form: {\r\n        name: \'\',\r\n        region: \'\',\r\n        date1: \'\',\r\n        date2: \'\',\r\n        delivery: false,\r\n        type: [],\r\n        resource: \'\',\r\n        desc: \'\'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      console.log(\'submit!\')\r\n    }\r\n  }\r\n})'}},典型表单.parameters),行内表单.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-form :inline="true" :model="formInline" class="demo-form-inline">\r\n    <el-form-item label="审批人">\r\n      <el-input v-model="formInline.user" placeholder="审批人"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label="活动区域">\r\n      <el-select v-model="formInline.region" placeholder="活动区域">\r\n        <el-option label="区域一" value="shanghai"></el-option>\r\n        <el-option label="区域二" value="beijing"></el-option>\r\n      </el-select>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type="primary" @click="onSubmit">查询</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n  `,\r\n  data() {\r\n    return {\r\n      formInline: {\r\n        user: \'\',\r\n        region: \'\'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      console.log(\'submit!\')\r\n    }\r\n  }\r\n})'}},行内表单.parameters),对齐方式.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-radio-group v-model="labelPosition" size="small">\r\n    <el-radio-button label="left">左对齐</el-radio-button>\r\n    <el-radio-button label="right">右对齐</el-radio-button>\r\n    <el-radio-button label="top">顶部对齐</el-radio-button>\r\n    </el-radio-group>\r\n    <div style="margin: 20px;"></div>\r\n    <el-form :label-position="labelPosition" label-width="80px" :model="formLabelAlign">\r\n      <el-form-item label="名称">\r\n        <el-input v-model="formLabelAlign.name"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label="活动区域">\r\n        <el-input v-model="formLabelAlign.region"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label="活动形式">\r\n        <el-input v-model="formLabelAlign.type"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      labelPosition: \'right\',\r\n      formLabelAlign: {\r\n        name: \'\',\r\n        region: \'\',\r\n        type: \'\'\r\n      }\r\n    }\r\n  }\r\n})'}},对齐方式.parameters),表单验证.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">\r\n    <el-form-item label="活动名称" prop="name">\r\n      <el-input v-model="ruleForm.name"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label="活动区域" prop="region">\r\n      <el-select v-model="ruleForm.region" placeholder="请选择活动区域">\r\n        <el-option label="区域一" value="shanghai"></el-option>\r\n        <el-option label="区域二" value="beijing"></el-option>\r\n      </el-select>\r\n    </el-form-item>\r\n    <el-form-item label="活动时间" required>\r\n      <el-col :span="11">\r\n        <el-form-item prop="date1">\r\n          <el-date-picker type="date" placeholder="选择日期" v-model="ruleForm.date1" style="width: 100%;"></el-date-picker>\r\n        </el-form-item>\r\n      </el-col>\r\n      <el-col class="line" :span="2">-</el-col>\r\n      <el-col :span="11">\r\n        <el-form-item prop="date2">\r\n          <el-time-picker placeholder="选择时间" v-model="ruleForm.date2" style="width: 100%;"></el-time-picker>\r\n        </el-form-item>\r\n      </el-col>\r\n    </el-form-item>\r\n    <el-form-item label="即时配送" prop="delivery">\r\n      <el-switch v-model="ruleForm.delivery"></el-switch>\r\n    </el-form-item>\r\n    <el-form-item label="活动性质" prop="type">\r\n      <el-checkbox-group v-model="ruleForm.type">\r\n        <el-checkbox label="美食/餐厅线上活动" name="type"></el-checkbox>\r\n        <el-checkbox label="地推活动" name="type"></el-checkbox>\r\n        <el-checkbox label="线下主题活动" name="type"></el-checkbox>\r\n        <el-checkbox label="单纯品牌曝光" name="type"></el-checkbox>\r\n      </el-checkbox-group>\r\n    </el-form-item>\r\n    <el-form-item label="特殊资源" prop="resource">\r\n      <el-radio-group v-model="ruleForm.resource">\r\n        <el-radio label="线上品牌商赞助"></el-radio>\r\n        <el-radio label="线下场地免费"></el-radio>\r\n      </el-radio-group>\r\n    </el-form-item>\r\n    <el-form-item label="活动形式" prop="desc">\r\n      <el-input type="textarea" v-model="ruleForm.desc"></el-input>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type="primary" @click="submitForm(\'ruleForm\')">立即创建</el-button>\r\n      <el-button @click="resetForm(\'ruleForm\')">重置</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n  `,\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        name: \'\',\r\n        region: \'\',\r\n        date1: \'\',\r\n        date2: \'\',\r\n        delivery: false,\r\n        type: [],\r\n        resource: \'\',\r\n        desc: \'\'\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: \'请输入活动名称\', trigger: \'blur\' },\r\n          { min: 3, max: 5, message: \'长度在 3 到 5 个字符\', trigger: \'blur\' }\r\n        ],\r\n        region: [{ required: true, message: \'请选择活动区域\', trigger: \'change\' }],\r\n        date1: [{ type: \'date\', required: true, message: \'请选择日期\', trigger: \'change\' }],\r\n        date2: [{ type: \'date\', required: true, message: \'请选择时间\', trigger: \'change\' }],\r\n        type: [{ type: \'array\', required: true, message: \'请至少选择一个活动性质\', trigger: \'change\' }],\r\n        resource: [{ required: true, message: \'请选择活动资源\', trigger: \'change\' }],\r\n        desc: [{ required: true, message: \'请填写活动形式\', trigger: \'blur\' }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          alert(\'submit!\')\r\n        } else {\r\n          console.log(\'error submit!!\')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    }\r\n  }\r\n})'}},表单验证.parameters),自定义校验规则.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-form :model="ruleForm" status-icon :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">\r\n    <el-form-item label="密码" prop="pass">\r\n      <el-input type="password" v-model="ruleForm.pass" autocomplete="off"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label="确认密码" prop="checkPass">\r\n      <el-input type="password" v-model="ruleForm.checkPass" autocomplete="off"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label="年龄" prop="age">\r\n      <el-input v-model.number="ruleForm.age"></el-input>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type="primary" @click="submitForm(\'ruleForm\')">提交</el-button>\r\n      <el-button @click="resetForm(\'ruleForm\')">重置</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n  `,\r\n  data() {\r\n    var checkAge = (rule, value, callback) => {\r\n      if (!value) {\r\n        return callback(new Error(\'年龄不能为空\'))\r\n      }\r\n      setTimeout(() => {\r\n        if (!Number.isInteger(value)) {\r\n          callback(new Error(\'请输入数字值\'))\r\n        } else {\r\n          if (value < 18) {\r\n            callback(new Error(\'必须年满18岁\'))\r\n          } else {\r\n            callback()\r\n          }\r\n        }\r\n      }, 1000)\r\n    }\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === \'\') {\r\n        callback(new Error(\'请输入密码\'))\r\n      } else {\r\n        if (this.ruleForm.checkPass !== \'\') {\r\n          this.$refs.ruleForm.validateField(\'checkPass\')\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === \'\') {\r\n        callback(new Error(\'请再次输入密码\'))\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error(\'两次输入密码不一致!\'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      ruleForm: {\r\n        pass: \'\',\r\n        checkPass: \'\',\r\n        age: \'\'\r\n      },\r\n      rules: {\r\n        pass: [{ validator: validatePass, trigger: \'blur\' }],\r\n        checkPass: [{ validator: validatePass2, trigger: \'blur\' }],\r\n        age: [{ validator: checkAge, trigger: \'blur\' }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          alert(\'submit!\')\r\n        } else {\r\n          console.log(\'error submit!!\')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    }\r\n  }\r\n})'}},自定义校验规则.parameters),动态增减表单项.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-form :model="dynamicValidateForm" ref="dynamicValidateForm" label-width="100px" class="demo-dynamic">\r\n    <el-form-item\r\n      prop="email"\r\n      label="邮箱"\r\n      :rules="[\r\n        { required: true, message: \'请输入邮箱地址\', trigger: \'blur\' },\r\n        { type: \'email\', message: \'请输入正确的邮箱地址\', trigger: [\'blur\', \'change\'] }\r\n      ]"\r\n    >\r\n      <el-input v-model="dynamicValidateForm.email"></el-input>\r\n    </el-form-item>\r\n    <el-form-item\r\n      v-for="(domain, index) in dynamicValidateForm.domains"\r\n      :label="\'域名\' + index"\r\n      :key="domain.key"\r\n      :prop="\'domains.\' + index + \'.value\'"\r\n      :rules="{\r\n        required: true, message: \'域名不能为空\', trigger: \'blur\'\r\n      }"\r\n    >\r\n      <el-input v-model="domain.value"></el-input><el-button @click.prevent="removeDomain(domain)">删除</el-button>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type="primary" @click="submitForm(\'dynamicValidateForm\')">提交</el-button>\r\n      <el-button @click="addDomain">新增域名</el-button>\r\n      <el-button @click="resetForm(\'dynamicValidateForm\')">重置</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n  `,\r\n  data() {\r\n    return {\r\n      dynamicValidateForm: {\r\n        domains: [\r\n          {\r\n            value: \'\'\r\n          }\r\n        ],\r\n        email: \'\'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          alert(\'submit!\')\r\n        } else {\r\n          console.log(\'error submit!!\')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n    removeDomain(item) {\r\n      var index = this.dynamicValidateForm.domains.indexOf(item)\r\n      if (index !== -1) {\r\n        this.dynamicValidateForm.domains.splice(index, 1)\r\n      }\r\n    },\r\n    addDomain() {\r\n      this.dynamicValidateForm.domains.push({\r\n        value: \'\',\r\n        key: Date.now()\r\n      })\r\n    }\r\n  }\r\n})'}},动态增减表单项.parameters),数字类型验证.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-form :model="numberValidateForm" ref="numberValidateForm" label-width="100px" class="demo-ruleForm">\r\n    <el-form-item\r\n      label="年龄"\r\n      prop="age"\r\n      :rules="[\r\n        { required: true, message: \'年龄不能为空\'},\r\n        { type: \'number\', message: \'年龄必须为数字值\'}\r\n      ]"\r\n    >\r\n      <el-input type="age" v-model.number="numberValidateForm.age" autocomplete="off"></el-input>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type="primary" @click="submitForm(\'numberValidateForm\')">提交</el-button>\r\n      <el-button @click="resetForm(\'numberValidateForm\')">重置</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n  `,\r\n  data() {\r\n    return {\r\n      numberValidateForm: {\r\n        age: \'\'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          alert(\'submit!\')\r\n        } else {\r\n          console.log(\'error submit!!\')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    }\r\n  }\r\n})'}},数字类型验证.parameters),表单内组件尺寸控制.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-form ref="form" :model="sizeForm" label-width="80px" size="mini">\r\n    <el-form-item label="活动名称">\r\n      <el-input v-model="sizeForm.name"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label="活动区域">\r\n      <el-select v-model="sizeForm.region" placeholder="请选择活动区域">\r\n        <el-option label="区域一" value="shanghai"></el-option>\r\n        <el-option label="区域二" value="beijing"></el-option>\r\n      </el-select>\r\n    </el-form-item>\r\n    <el-form-item label="活动时间">\r\n      <el-col :span="11">\r\n        <el-date-picker type="date" placeholder="选择日期" v-model="sizeForm.date1" style="width: 100%;"></el-date-picker>\r\n      </el-col>\r\n      <el-col class="line" :span="2">-</el-col>\r\n      <el-col :span="11">\r\n        <el-time-picker placeholder="选择时间" v-model="sizeForm.date2" style="width: 100%;"></el-time-picker>\r\n      </el-col>\r\n    </el-form-item>\r\n    <el-form-item label="活动性质">\r\n      <el-checkbox-group v-model="sizeForm.type">\r\n        <el-checkbox-button label="美食/餐厅线上活动" name="type"></el-checkbox-button>\r\n        <el-checkbox-button label="地推活动" name="type"></el-checkbox-button>\r\n        <el-checkbox-button label="线下主题活动" name="type"></el-checkbox-button>\r\n      </el-checkbox-group>\r\n    </el-form-item>\r\n    <el-form-item label="特殊资源">\r\n      <el-radio-group v-model="sizeForm.resource" size="medium">\r\n        <el-radio border label="线上品牌商赞助"></el-radio>\r\n        <el-radio border label="线下场地免费"></el-radio>\r\n      </el-radio-group>\r\n    </el-form-item>\r\n    <el-form-item size="large">\r\n      <el-button type="primary" @click="onSubmit">立即创建</el-button>\r\n      <el-button>取消</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n  `,\r\n  data() {\r\n    return {\r\n      sizeForm: {\r\n        name: \'\',\r\n        region: \'\',\r\n        date1: \'\',\r\n        date2: \'\',\r\n        delivery: false,\r\n        type: [],\r\n        resource: \'\',\r\n        desc: \'\'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      console.log(\'submit!\')\r\n    }\r\n  }\r\n})'}},表单内组件尺寸控制.parameters)},"./src/storybook/element/Input.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"禁用状态",(function(){return 禁用状态})),__webpack_require__.d(__webpack_exports__,"可清空",(function(){return 可清空})),__webpack_require__.d(__webpack_exports__,"密码框",(function(){return 密码框})),__webpack_require__.d(__webpack_exports__,"带icon的输入框",(function(){return 带icon的输入框})),__webpack_require__.d(__webpack_exports__,"文本域",(function(){return 文本域})),__webpack_require__.d(__webpack_exports__,"可自适应文本高度的文本域",(function(){return 可自适应文本高度的文本域})),__webpack_require__.d(__webpack_exports__,"复合型输入框",(function(){return 复合型输入框})),__webpack_require__.d(__webpack_exports__,"尺寸",(function(){return 尺寸})),__webpack_require__.d(__webpack_exports__,"带输入建议",(function(){return 带输入建议})),__webpack_require__.d(__webpack_exports__,"自定义模板",(function(){return 自定义模板})),__webpack_require__.d(__webpack_exports__,"远程搜索",(function(){return 远程搜索})),__webpack_require__.d(__webpack_exports__,"输入长度限制",(function(){return 输入长度限制}));__webpack_exports__.default={title:"Element/Input",argTypes:{type:{control:"text",description:"类型（可选值：text，textarea 和其他 原生 input 的 type 值）"},value:{control:"text",description:"绑定值"},maxlength:{control:"number",description:"原生属性，最大输入长度"},minlength:{control:"number",description:"原原生属性，最小输入长度"},"show-word-limit":{control:"boolean",defaultValue:!1,description:'是否显示输入字数统计，只在 type = "text" 或 type = "textarea" 时有效'},description:{control:"text",description:"输入框占位文本"},clearable:{control:"boolean",defaultValue:!1,description:"是否可清空"},"show-password":{control:"boolean",defaultValue:!1,description:"是否显示切换密码图标"},disabled:{control:"boolean",defaultValue:!1,description:"禁用"},size:{control:"radio",options:["medium","small","mini"],description:'输入框尺寸，只在 type!="textarea" 时有效'},"prefix-icon":{control:"text",description:"输入框头部图标"},"suffix-icon":{control:"text",description:"输入框尾部图标"},rows:{control:"number",defaultValue:2,description:'输入框行数，只对 type="textarea" 有效'},autosize:{control:"boolean",defaultValue:!1,description:'自适应内容高度，只对 type="textarea" 有效，可传入对象，如，{ minRows: 2, maxRows: 6 }'},autocomplete:{control:"radio",options:["on","off"],defaultValue:"off",description:"原生属性，自动补全"},"auto-complete":{control:"radio",options:["on","off"],defaultValue:"off",description:"下个主版本弃用"},name:{control:"text",description:"原生属性"},readonly:{control:"boolean",defaultValue:!1,description:"原生属性，是否只读"},max:{control:"text",description:"原生属性，设置最大值"},min:{control:"text",description:"原生属性，设置最小值"},step:{control:"text",description:"原生属性，设置输入字段的合法数字间隔"},resize:{control:"select",options:["none","both","horizontal","vertical"],description:"控制是否能被用户缩放"},autofocus:{control:"boolean",defaultValue:!1,description:"原生属性，自动获取焦点"},form:{control:"text",description:"原生属性"},label:{control:"text",description:"输入框关联的label文字"},tabindex:{control:"text",description:"输入框的tabindex"},"validate-event":{control:"boolean",defaultValue:!0,description:"输入时是否触发表单的校验"}},parameters:{docs:{description:{component:"通过鼠标或键盘输入字符"}}}};var Attributes=function(){return{}},基础用法=function(){return{template:'<el-input v-model="input" placeholder="请输入内容"></el-input>',data:function(){return{input:""}}}},禁用状态=function(){return{template:'\n  <el-input\n    placeholder="请输入内容"\n    v-model="input"\n    :disabled="true">\n  </el-input>',data:function(){return{input:""}}}},可清空=function(){return{template:'\n  <el-input\n    placeholder="请输入内容"\n    v-model="input"\n    clearable>\n  </el-input>\n  ',data:function(){return{input:""}}}},密码框=function(){return{template:'<el-input placeholder="请输入密码" v-model="input" show-password></el-input>',data:function(){return{input:""}}}},带icon的输入框=function(){return{template:'\n  <div>\n  <div class="demo-input-suffix">\n  属性方式：\n  <el-input\n    placeholder="请选择日期"\n    suffix-icon="el-icon-date"\n    v-model="input1">\n  </el-input>\n  <el-input\n    placeholder="请输入内容"\n    prefix-icon="el-icon-search"\n    v-model="input2">\n  </el-input>\n</div>\n<div class="demo-input-suffix">\n  slot 方式：\n  <el-input\n    placeholder="请选择日期"\n    v-model="input3">\n    <i slot="suffix" class="el-input__icon el-icon-date"></i>\n  </el-input>\n  <el-input\n    placeholder="请输入内容"\n    v-model="input4">\n    <i slot="prefix" class="el-input__icon el-icon-search"></i>\n  </el-input>\n</div>\n  </div>\n  ',data:function(){return{input:""}}}},文本域=function(){return{template:'\n  <el-input\n    type="textarea"\n    :rows="2"\n    placeholder="请输入内容"\n    v-model="textarea">\n  </el-input>\n  ',data:function(){return{textarea:""}}}},可自适应文本高度的文本域=function(){return{template:'\n  <div>\n    <el-input\n    type="textarea"\n    autosize\n    placeholder="请输入内容"\n    v-model="textarea1">\n    </el-input>\n    <div style="margin: 20px 0;"></div>\n    <el-input\n      type="textarea"\n      :autosize="{ minRows: 2, maxRows: 4}"\n      placeholder="请输入内容"\n      v-model="textarea2">\n    </el-input>\n  </div>\n  ',data:function(){return{textarea1:"",textarea2:""}}}},复合型输入框=function(){return{template:'\n  <div>\n  <div>\n  <el-input placeholder="请输入内容" v-model="input1">\n    <template slot="prepend">Http://</template>\n  </el-input>\n</div>\n<div style="margin-top: 15px;">\n  <el-input placeholder="请输入内容" v-model="input2">\n    <template slot="append">.com</template>\n  </el-input>\n</div>\n<div style="margin-top: 15px;">\n  <el-input placeholder="请输入内容" v-model="input3" class="input-with-select">\n    <el-select v-model="select" slot="prepend" placeholder="请选择">\n      <el-option label="餐厅名" value="1"></el-option>\n      <el-option label="订单号" value="2"></el-option>\n      <el-option label="用户电话" value="3"></el-option>\n    </el-select>\n    <el-button slot="append" icon="el-icon-search"></el-button>\n  </el-input>\n</div>\n  </div>\n  ',data:function(){return{input1:"",input2:"",input3:"",select:""}}}},尺寸=function(){return{template:'\n  <div class="demo-input-size">\n  <el-input\n    placeholder="请输入内容"\n    suffix-icon="el-icon-date"\n    v-model="input1">\n  </el-input>\n  <el-input\n    size="medium"\n    placeholder="请输入内容"\n    suffix-icon="el-icon-date"\n    v-model="input2">\n  </el-input>\n  <el-input\n    size="small"\n    placeholder="请输入内容"\n    suffix-icon="el-icon-date"\n    v-model="input3">\n  </el-input>\n  <el-input\n    size="mini"\n    placeholder="请输入内容"\n    suffix-icon="el-icon-date"\n    v-model="input4">\n  </el-input>\n</div>\n  ',data:function(){return{input1:"",input2:"",input3:"",input4:""}}}},带输入建议=function(){return{template:'\n  <el-row class="demo-autocomplete">\n  <el-col :span="12">\n    <div class="sub-title">激活即列出输入建议</div>\n    <el-autocomplete\n      class="inline-input"\n      v-model="state1"\n      :fetch-suggestions="querySearch"\n      placeholder="请输入内容"\n      @select="handleSelect"\n    ></el-autocomplete>\n  </el-col>\n  <el-col :span="12">\n    <div class="sub-title">输入后匹配输入建议</div>\n    <el-autocomplete\n      class="inline-input"\n      v-model="state2"\n      :fetch-suggestions="querySearch"\n      placeholder="请输入内容"\n      :trigger-on-focus="false"\n      @select="handleSelect"\n    ></el-autocomplete>\n  </el-col>\n</el-row>\n  ',data:function(){return{restaurants:[],state1:"",state2:""}},methods:{querySearch:function(queryString,cb){var restaurants=this.restaurants;cb(queryString?restaurants.filter(this.createFilter(queryString)):restaurants)},createFilter:function(queryString){return function(restaurant){return 0===restaurant.value.toLowerCase().indexOf(queryString.toLowerCase())}},loadAll:function(){return[{value:"三全鲜食（北新泾店）",address:"长宁区新渔路144号"},{value:"Hot honey 首尔炸鸡（仙霞路）",address:"上海市长宁区淞虹路661号"},{value:"新旺角茶餐厅",address:"上海市普陀区真北路988号创邑金沙谷6号楼113"},{value:"泷千家(天山西路店)",address:"天山西路438号"},{value:"胖仙女纸杯蛋糕（上海凌空店）",address:"上海市长宁区金钟路968号1幢18号楼一层商铺18-101"},{value:"贡茶",address:"上海市长宁区金钟路633号"},{value:"豪大大香鸡排超级奶爸",address:"上海市嘉定区曹安公路曹安路1685号"},{value:"茶芝兰（奶茶，手抓饼）",address:"上海市普陀区同普路1435号"},{value:"十二泷町",address:"上海市北翟路1444弄81号B幢-107"},{value:"星移浓缩咖啡",address:"上海市嘉定区新郁路817号"},{value:"阿姨奶茶/豪大大",address:"嘉定区曹安路1611号"},{value:"新麦甜四季甜品炸鸡",address:"嘉定区曹安公路2383弄55号"},{value:"Monica摩托主题咖啡店",address:"嘉定区江桥镇曹安公路2409号1F，2383弄62号1F"},{value:"浮生若茶（凌空soho店）",address:"上海长宁区金钟路968号9号楼地下一层"},{value:"NONO JUICE  鲜榨果汁",address:"上海市长宁区天山西路119号"},{value:"CoCo都可(北新泾店）",address:"上海市长宁区仙霞西路"},{value:"快乐柠檬（神州智慧店）",address:"上海市长宁区天山西路567号1层R117号店铺"},{value:"Merci Paul cafe",address:"上海市普陀区光复西路丹巴路28弄6号楼819"},{value:"猫山王（西郊百联店）",address:"上海市长宁区仙霞西路88号第一层G05-F01-1-306"},{value:"枪会山",address:"上海市普陀区棕榈路"},{value:"纵食",address:"元丰天山花园(东门) 双流路267号"},{value:"钱记",address:"上海市长宁区天山西路"},{value:"壹杯加",address:"上海市长宁区通协路"},{value:"唦哇嘀咖",address:"上海市长宁区新泾镇金钟路999号2幢（B幢）第01层第1-02A单元"},{value:"爱茜茜里(西郊百联)",address:"长宁区仙霞西路88号1305室"},{value:"爱茜茜里(近铁广场)",address:"上海市普陀区真北路818号近铁城市广场北区地下二楼N-B2-O2-C商铺"},{value:"鲜果榨汁（金沙江路和美广店）",address:"普陀区金沙江路2239号金沙和美广场B1-10-6"},{value:"开心丽果（缤谷店）",address:"上海市长宁区威宁路天山路341号"},{value:"超级鸡车（丰庄路店）",address:"上海市嘉定区丰庄路240号"},{value:"妙生活果园（北新泾店）",address:"长宁区新渔路144号"},{value:"香宜度麻辣香锅",address:"长宁区淞虹路148号"},{value:"凡仔汉堡（老真北路店）",address:"上海市普陀区老真北路160号"},{value:"港式小铺",address:"上海市长宁区金钟路968号15楼15-105室"},{value:"蜀香源麻辣香锅（剑河路店）",address:"剑河路443-1"},{value:"北京饺子馆",address:"长宁区北新泾街道天山西路490-1号"},{value:"饭典*新简餐（凌空SOHO店）",address:"上海市长宁区金钟路968号9号楼地下一层9-83室"},{value:"焦耳·川式快餐（金钟路店）",address:"上海市金钟路633号地下一层甲部"},{value:"动力鸡车",address:"长宁区仙霞西路299弄3号101B"},{value:"浏阳蒸菜",address:"天山西路430号"},{value:"四海游龙（天山西路店）",address:"上海市长宁区天山西路"},{value:"樱花食堂（凌空店）",address:"上海市长宁区金钟路968号15楼15-105室"},{value:"壹分米客家传统调制米粉(天山店)",address:"天山西路428号"},{value:"福荣祥烧腊（平溪路店）",address:"上海市长宁区协和路福泉路255弄57-73号"},{value:"速记黄焖鸡米饭",address:"上海市长宁区北新泾街道金钟路180号1层01号摊位"},{value:"红辣椒麻辣烫",address:"上海市长宁区天山西路492号"},{value:"(小杨生煎)西郊百联餐厅",address:"长宁区仙霞西路88号百联2楼"},{value:"阳阳麻辣烫",address:"天山西路389号"},{value:"南拳妈妈龙虾盖浇饭",address:"普陀区金沙江路1699号鑫乐惠美食广场A13"}]},handleSelect:function(item){console.log(item)}},mounted:function(){this.restaurants=this.loadAll()}}},自定义模板=function(){return{template:'\n  <el-autocomplete\n  popper-class="my-autocomplete"\n  v-model="state"\n  :fetch-suggestions="querySearch"\n  placeholder="请输入内容"\n  @select="handleSelect">\n  <i\n    class="el-icon-edit el-input__icon"\n    slot="suffix"\n    @click="handleIconClick">\n  </i>\n  <template slot-scope="{ item }">\n    <div class="name">{{ item.value }}</div>\n    <span class="addr">{{ item.address }}</span>\n  </template>\n</el-autocomplete>\n  ',data:function(){return{restaurants:[],state:""}},methods:{querySearch:function(queryString,cb){var restaurants=this.restaurants;cb(queryString?restaurants.filter(this.createFilter(queryString)):restaurants)},createFilter:function(queryString){return function(restaurant){return 0===restaurant.value.toLowerCase().indexOf(queryString.toLowerCase())}},loadAll:function(){return[{value:"三全鲜食（北新泾店）",address:"长宁区新渔路144号"},{value:"Hot honey 首尔炸鸡（仙霞路）",address:"上海市长宁区淞虹路661号"},{value:"新旺角茶餐厅",address:"上海市普陀区真北路988号创邑金沙谷6号楼113"},{value:"泷千家(天山西路店)",address:"天山西路438号"},{value:"胖仙女纸杯蛋糕（上海凌空店）",address:"上海市长宁区金钟路968号1幢18号楼一层商铺18-101"},{value:"贡茶",address:"上海市长宁区金钟路633号"},{value:"豪大大香鸡排超级奶爸",address:"上海市嘉定区曹安公路曹安路1685号"},{value:"茶芝兰（奶茶，手抓饼）",address:"上海市普陀区同普路1435号"},{value:"十二泷町",address:"上海市北翟路1444弄81号B幢-107"},{value:"星移浓缩咖啡",address:"上海市嘉定区新郁路817号"},{value:"阿姨奶茶/豪大大",address:"嘉定区曹安路1611号"},{value:"新麦甜四季甜品炸鸡",address:"嘉定区曹安公路2383弄55号"},{value:"Monica摩托主题咖啡店",address:"嘉定区江桥镇曹安公路2409号1F，2383弄62号1F"},{value:"浮生若茶（凌空soho店）",address:"上海长宁区金钟路968号9号楼地下一层"},{value:"NONO JUICE  鲜榨果汁",address:"上海市长宁区天山西路119号"},{value:"CoCo都可(北新泾店）",address:"上海市长宁区仙霞西路"},{value:"快乐柠檬（神州智慧店）",address:"上海市长宁区天山西路567号1层R117号店铺"},{value:"Merci Paul cafe",address:"上海市普陀区光复西路丹巴路28弄6号楼819"},{value:"猫山王（西郊百联店）",address:"上海市长宁区仙霞西路88号第一层G05-F01-1-306"},{value:"枪会山",address:"上海市普陀区棕榈路"},{value:"纵食",address:"元丰天山花园(东门) 双流路267号"},{value:"钱记",address:"上海市长宁区天山西路"},{value:"壹杯加",address:"上海市长宁区通协路"},{value:"唦哇嘀咖",address:"上海市长宁区新泾镇金钟路999号2幢（B幢）第01层第1-02A单元"},{value:"爱茜茜里(西郊百联)",address:"长宁区仙霞西路88号1305室"},{value:"爱茜茜里(近铁广场)",address:"上海市普陀区真北路818号近铁城市广场北区地下二楼N-B2-O2-C商铺"},{value:"鲜果榨汁（金沙江路和美广店）",address:"普陀区金沙江路2239号金沙和美广场B1-10-6"},{value:"开心丽果（缤谷店）",address:"上海市长宁区威宁路天山路341号"},{value:"超级鸡车（丰庄路店）",address:"上海市嘉定区丰庄路240号"},{value:"妙生活果园（北新泾店）",address:"长宁区新渔路144号"},{value:"香宜度麻辣香锅",address:"长宁区淞虹路148号"},{value:"凡仔汉堡（老真北路店）",address:"上海市普陀区老真北路160号"},{value:"港式小铺",address:"上海市长宁区金钟路968号15楼15-105室"},{value:"蜀香源麻辣香锅（剑河路店）",address:"剑河路443-1"},{value:"北京饺子馆",address:"长宁区北新泾街道天山西路490-1号"},{value:"饭典*新简餐（凌空SOHO店）",address:"上海市长宁区金钟路968号9号楼地下一层9-83室"},{value:"焦耳·川式快餐（金钟路店）",address:"上海市金钟路633号地下一层甲部"},{value:"动力鸡车",address:"长宁区仙霞西路299弄3号101B"},{value:"浏阳蒸菜",address:"天山西路430号"},{value:"四海游龙（天山西路店）",address:"上海市长宁区天山西路"},{value:"樱花食堂（凌空店）",address:"上海市长宁区金钟路968号15楼15-105室"},{value:"壹分米客家传统调制米粉(天山店)",address:"天山西路428号"},{value:"福荣祥烧腊（平溪路店）",address:"上海市长宁区协和路福泉路255弄57-73号"},{value:"速记黄焖鸡米饭",address:"上海市长宁区北新泾街道金钟路180号1层01号摊位"},{value:"红辣椒麻辣烫",address:"上海市长宁区天山西路492号"},{value:"(小杨生煎)西郊百联餐厅",address:"长宁区仙霞西路88号百联2楼"},{value:"阳阳麻辣烫",address:"天山西路389号"},{value:"南拳妈妈龙虾盖浇饭",address:"普陀区金沙江路1699号鑫乐惠美食广场A13"}]},handleSelect:function(item){console.log(item)},handleIconClick:function(ev){console.log(ev)}},mounted:function(){this.restaurants=this.loadAll()}}},远程搜索=function(){return{template:'\n  <el-autocomplete\n    v-model="state"\n    :fetch-suggestions="querySearchAsync"\n    placeholder="请输入内容"\n    @select="handleSelect"\n  ></el-autocomplete>\n  ',data:function(){return{restaurants:[],state:"",timeout:null}},methods:{loadAll:function(){return[{value:"三全鲜食（北新泾店）",address:"长宁区新渔路144号"},{value:"Hot honey 首尔炸鸡（仙霞路）",address:"上海市长宁区淞虹路661号"},{value:"新旺角茶餐厅",address:"上海市普陀区真北路988号创邑金沙谷6号楼113"},{value:"泷千家(天山西路店)",address:"天山西路438号"},{value:"胖仙女纸杯蛋糕（上海凌空店）",address:"上海市长宁区金钟路968号1幢18号楼一层商铺18-101"},{value:"贡茶",address:"上海市长宁区金钟路633号"},{value:"豪大大香鸡排超级奶爸",address:"上海市嘉定区曹安公路曹安路1685号"},{value:"茶芝兰（奶茶，手抓饼）",address:"上海市普陀区同普路1435号"},{value:"十二泷町",address:"上海市北翟路1444弄81号B幢-107"},{value:"星移浓缩咖啡",address:"上海市嘉定区新郁路817号"},{value:"阿姨奶茶/豪大大",address:"嘉定区曹安路1611号"},{value:"新麦甜四季甜品炸鸡",address:"嘉定区曹安公路2383弄55号"},{value:"Monica摩托主题咖啡店",address:"嘉定区江桥镇曹安公路2409号1F，2383弄62号1F"},{value:"浮生若茶（凌空soho店）",address:"上海长宁区金钟路968号9号楼地下一层"},{value:"NONO JUICE  鲜榨果汁",address:"上海市长宁区天山西路119号"},{value:"CoCo都可(北新泾店）",address:"上海市长宁区仙霞西路"},{value:"快乐柠檬（神州智慧店）",address:"上海市长宁区天山西路567号1层R117号店铺"},{value:"Merci Paul cafe",address:"上海市普陀区光复西路丹巴路28弄6号楼819"},{value:"猫山王（西郊百联店）",address:"上海市长宁区仙霞西路88号第一层G05-F01-1-306"},{value:"枪会山",address:"上海市普陀区棕榈路"},{value:"纵食",address:"元丰天山花园(东门) 双流路267号"},{value:"钱记",address:"上海市长宁区天山西路"},{value:"壹杯加",address:"上海市长宁区通协路"},{value:"唦哇嘀咖",address:"上海市长宁区新泾镇金钟路999号2幢（B幢）第01层第1-02A单元"},{value:"爱茜茜里(西郊百联)",address:"长宁区仙霞西路88号1305室"},{value:"爱茜茜里(近铁广场)",address:"上海市普陀区真北路818号近铁城市广场北区地下二楼N-B2-O2-C商铺"},{value:"鲜果榨汁（金沙江路和美广店）",address:"普陀区金沙江路2239号金沙和美广场B1-10-6"},{value:"开心丽果（缤谷店）",address:"上海市长宁区威宁路天山路341号"},{value:"超级鸡车（丰庄路店）",address:"上海市嘉定区丰庄路240号"},{value:"妙生活果园（北新泾店）",address:"长宁区新渔路144号"},{value:"香宜度麻辣香锅",address:"长宁区淞虹路148号"},{value:"凡仔汉堡（老真北路店）",address:"上海市普陀区老真北路160号"},{value:"港式小铺",address:"上海市长宁区金钟路968号15楼15-105室"},{value:"蜀香源麻辣香锅（剑河路店）",address:"剑河路443-1"},{value:"北京饺子馆",address:"长宁区北新泾街道天山西路490-1号"},{value:"饭典*新简餐（凌空SOHO店）",address:"上海市长宁区金钟路968号9号楼地下一层9-83室"},{value:"焦耳·川式快餐（金钟路店）",address:"上海市金钟路633号地下一层甲部"},{value:"动力鸡车",address:"长宁区仙霞西路299弄3号101B"},{value:"浏阳蒸菜",address:"天山西路430号"},{value:"四海游龙（天山西路店）",address:"上海市长宁区天山西路"},{value:"樱花食堂（凌空店）",address:"上海市长宁区金钟路968号15楼15-105室"},{value:"壹分米客家传统调制米粉(天山店)",address:"天山西路428号"},{value:"福荣祥烧腊（平溪路店）",address:"上海市长宁区协和路福泉路255弄57-73号"},{value:"速记黄焖鸡米饭",address:"上海市长宁区北新泾街道金钟路180号1层01号摊位"},{value:"红辣椒麻辣烫",address:"上海市长宁区天山西路492号"},{value:"(小杨生煎)西郊百联餐厅",address:"长宁区仙霞西路88号百联2楼"},{value:"阳阳麻辣烫",address:"天山西路389号"},{value:"南拳妈妈龙虾盖浇饭",address:"普陀区金沙江路1699号鑫乐惠美食广场A13"}]},querySearchAsync:function(queryString,cb){var restaurants=this.restaurants,results=queryString?restaurants.filter(this.createStateFilter(queryString)):restaurants;clearTimeout(this.timeout),this.timeout=setTimeout((function(){cb(results)}),3e3*Math.random())},createStateFilter:function(queryString){return function(state){return 0===state.value.toLowerCase().indexOf(queryString.toLowerCase())}},handleSelect:function(item){console.log(item)}},mounted:function(){this.restaurants=this.loadAll()}}},输入长度限制=function(){return{template:'\n    <div>\n    <el-input\n  type="text"\n  placeholder="请输入内容"\n  v-model="text"\n  maxlength="10"\n  show-word-limit\n>\n</el-input>\n<div style="margin: 20px 0;"></div>\n<el-input\n  type="textarea"\n  placeholder="请输入内容"\n  v-model="textarea"\n  maxlength="30"\n  show-word-limit\n>\n</el-input>\n    </div>\n  ',data:function(){return{text:"",textarea:""}}}};Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),基础用法.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `<el-input v-model="input" placeholder="请输入内容"></el-input>`,\r\n  data() {\r\n    return {\r\n      input: \'\'\r\n    }\r\n  }\r\n})'}},基础用法.parameters),禁用状态.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-input\r\n    placeholder="请输入内容"\r\n    v-model="input"\r\n    :disabled="true">\r\n  </el-input>`,\r\n  data() {\r\n    return {\r\n      input: \'\'\r\n    }\r\n  }\r\n})'}},禁用状态.parameters),可清空.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-input\r\n    placeholder="请输入内容"\r\n    v-model="input"\r\n    clearable>\r\n  </el-input>\r\n  `,\r\n  data() {\r\n    return {\r\n      input: \'\'\r\n    }\r\n  }\r\n})'}},可清空.parameters),密码框.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `<el-input placeholder="请输入密码" v-model="input" show-password></el-input>`,\r\n  data() {\r\n    return {\r\n      input: \'\'\r\n    }\r\n  }\r\n})'}},密码框.parameters),带icon的输入框.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n  <div class="demo-input-suffix">\r\n  属性方式：\r\n  <el-input\r\n    placeholder="请选择日期"\r\n    suffix-icon="el-icon-date"\r\n    v-model="input1">\r\n  </el-input>\r\n  <el-input\r\n    placeholder="请输入内容"\r\n    prefix-icon="el-icon-search"\r\n    v-model="input2">\r\n  </el-input>\r\n</div>\r\n<div class="demo-input-suffix">\r\n  slot 方式：\r\n  <el-input\r\n    placeholder="请选择日期"\r\n    v-model="input3">\r\n    <i slot="suffix" class="el-input__icon el-icon-date"></i>\r\n  </el-input>\r\n  <el-input\r\n    placeholder="请输入内容"\r\n    v-model="input4">\r\n    <i slot="prefix" class="el-input__icon el-icon-search"></i>\r\n  </el-input>\r\n</div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      input: \'\'\r\n    }\r\n  }\r\n})'}},带icon的输入框.parameters),文本域.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-input\r\n    type="textarea"\r\n    :rows="2"\r\n    placeholder="请输入内容"\r\n    v-model="textarea">\r\n  </el-input>\r\n  `,\r\n  data() {\r\n    return {\r\n      textarea: \'\'\r\n    }\r\n  }\r\n})'}},文本域.parameters),可自适应文本高度的文本域.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-input\r\n    type="textarea"\r\n    autosize\r\n    placeholder="请输入内容"\r\n    v-model="textarea1">\r\n    </el-input>\r\n    <div style="margin: 20px 0;"></div>\r\n    <el-input\r\n      type="textarea"\r\n      :autosize="{ minRows: 2, maxRows: 4}"\r\n      placeholder="请输入内容"\r\n      v-model="textarea2">\r\n    </el-input>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      textarea1: \'\',\r\n      textarea2: \'\'\r\n    }\r\n  }\r\n})'}},可自适应文本高度的文本域.parameters),复合型输入框.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n  <div>\r\n  <el-input placeholder="请输入内容" v-model="input1">\r\n    <template slot="prepend">Http://</template>\r\n  </el-input>\r\n</div>\r\n<div style="margin-top: 15px;">\r\n  <el-input placeholder="请输入内容" v-model="input2">\r\n    <template slot="append">.com</template>\r\n  </el-input>\r\n</div>\r\n<div style="margin-top: 15px;">\r\n  <el-input placeholder="请输入内容" v-model="input3" class="input-with-select">\r\n    <el-select v-model="select" slot="prepend" placeholder="请选择">\r\n      <el-option label="餐厅名" value="1"></el-option>\r\n      <el-option label="订单号" value="2"></el-option>\r\n      <el-option label="用户电话" value="3"></el-option>\r\n    </el-select>\r\n    <el-button slot="append" icon="el-icon-search"></el-button>\r\n  </el-input>\r\n</div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      input1: \'\',\r\n      input2: \'\',\r\n      input3: \'\',\r\n      select: \'\'\r\n    }\r\n  }\r\n})'}},复合型输入框.parameters),尺寸.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div class="demo-input-size">\r\n  <el-input\r\n    placeholder="请输入内容"\r\n    suffix-icon="el-icon-date"\r\n    v-model="input1">\r\n  </el-input>\r\n  <el-input\r\n    size="medium"\r\n    placeholder="请输入内容"\r\n    suffix-icon="el-icon-date"\r\n    v-model="input2">\r\n  </el-input>\r\n  <el-input\r\n    size="small"\r\n    placeholder="请输入内容"\r\n    suffix-icon="el-icon-date"\r\n    v-model="input3">\r\n  </el-input>\r\n  <el-input\r\n    size="mini"\r\n    placeholder="请输入内容"\r\n    suffix-icon="el-icon-date"\r\n    v-model="input4">\r\n  </el-input>\r\n</div>\r\n  `,\r\n  data() {\r\n    return {\r\n      input1: \'\',\r\n      input2: \'\',\r\n      input3: \'\',\r\n      input4: \'\'\r\n    }\r\n  }\r\n})'}},尺寸.parameters),带输入建议.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-row class=\"demo-autocomplete\">\r\n  <el-col :span=\"12\">\r\n    <div class=\"sub-title\">激活即列出输入建议</div>\r\n    <el-autocomplete\r\n      class=\"inline-input\"\r\n      v-model=\"state1\"\r\n      :fetch-suggestions=\"querySearch\"\r\n      placeholder=\"请输入内容\"\r\n      @select=\"handleSelect\"\r\n    ></el-autocomplete>\r\n  </el-col>\r\n  <el-col :span=\"12\">\r\n    <div class=\"sub-title\">输入后匹配输入建议</div>\r\n    <el-autocomplete\r\n      class=\"inline-input\"\r\n      v-model=\"state2\"\r\n      :fetch-suggestions=\"querySearch\"\r\n      placeholder=\"请输入内容\"\r\n      :trigger-on-focus=\"false\"\r\n      @select=\"handleSelect\"\r\n    ></el-autocomplete>\r\n  </el-col>\r\n</el-row>\r\n  `,\r\n  data() {\r\n    return {\r\n      restaurants: [],\r\n      state1: '',\r\n      state2: ''\r\n    }\r\n  },\r\n  methods: {\r\n    querySearch(queryString, cb) {\r\n      var restaurants = this.restaurants\r\n      var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants\r\n      // 调用 callback 返回建议列表的数据\r\n      cb(results)\r\n    },\r\n    createFilter(queryString) {\r\n      return restaurant => {\r\n        return restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0\r\n      }\r\n    },\r\n    loadAll() {\r\n      return [\r\n        { value: '三全鲜食（北新泾店）', address: '长宁区新渔路144号' },\r\n        { value: 'Hot honey 首尔炸鸡（仙霞路）', address: '上海市长宁区淞虹路661号' },\r\n        { value: '新旺角茶餐厅', address: '上海市普陀区真北路988号创邑金沙谷6号楼113' },\r\n        { value: '泷千家(天山西路店)', address: '天山西路438号' },\r\n        { value: '胖仙女纸杯蛋糕（上海凌空店）', address: '上海市长宁区金钟路968号1幢18号楼一层商铺18-101' },\r\n        { value: '贡茶', address: '上海市长宁区金钟路633号' },\r\n        { value: '豪大大香鸡排超级奶爸', address: '上海市嘉定区曹安公路曹安路1685号' },\r\n        { value: '茶芝兰（奶茶，手抓饼）', address: '上海市普陀区同普路1435号' },\r\n        { value: '十二泷町', address: '上海市北翟路1444弄81号B幢-107' },\r\n        { value: '星移浓缩咖啡', address: '上海市嘉定区新郁路817号' },\r\n        { value: '阿姨奶茶/豪大大', address: '嘉定区曹安路1611号' },\r\n        { value: '新麦甜四季甜品炸鸡', address: '嘉定区曹安公路2383弄55号' },\r\n        { value: 'Monica摩托主题咖啡店', address: '嘉定区江桥镇曹安公路2409号1F，2383弄62号1F' },\r\n        { value: '浮生若茶（凌空soho店）', address: '上海长宁区金钟路968号9号楼地下一层' },\r\n        { value: 'NONO JUICE  鲜榨果汁', address: '上海市长宁区天山西路119号' },\r\n        { value: 'CoCo都可(北新泾店）', address: '上海市长宁区仙霞西路' },\r\n        { value: '快乐柠檬（神州智慧店）', address: '上海市长宁区天山西路567号1层R117号店铺' },\r\n        { value: 'Merci Paul cafe', address: '上海市普陀区光复西路丹巴路28弄6号楼819' },\r\n        { value: '猫山王（西郊百联店）', address: '上海市长宁区仙霞西路88号第一层G05-F01-1-306' },\r\n        { value: '枪会山', address: '上海市普陀区棕榈路' },\r\n        { value: '纵食', address: '元丰天山花园(东门) 双流路267号' },\r\n        { value: '钱记', address: '上海市长宁区天山西路' },\r\n        { value: '壹杯加', address: '上海市长宁区通协路' },\r\n        { value: '唦哇嘀咖', address: '上海市长宁区新泾镇金钟路999号2幢（B幢）第01层第1-02A单元' },\r\n        { value: '爱茜茜里(西郊百联)', address: '长宁区仙霞西路88号1305室' },\r\n        { value: '爱茜茜里(近铁广场)', address: '上海市普陀区真北路818号近铁城市广场北区地下二楼N-B2-O2-C商铺' },\r\n        { value: '鲜果榨汁（金沙江路和美广店）', address: '普陀区金沙江路2239号金沙和美广场B1-10-6' },\r\n        { value: '开心丽果（缤谷店）', address: '上海市长宁区威宁路天山路341号' },\r\n        { value: '超级鸡车（丰庄路店）', address: '上海市嘉定区丰庄路240号' },\r\n        { value: '妙生活果园（北新泾店）', address: '长宁区新渔路144号' },\r\n        { value: '香宜度麻辣香锅', address: '长宁区淞虹路148号' },\r\n        { value: '凡仔汉堡（老真北路店）', address: '上海市普陀区老真北路160号' },\r\n        { value: '港式小铺', address: '上海市长宁区金钟路968号15楼15-105室' },\r\n        { value: '蜀香源麻辣香锅（剑河路店）', address: '剑河路443-1' },\r\n        { value: '北京饺子馆', address: '长宁区北新泾街道天山西路490-1号' },\r\n        { value: '饭典*新简餐（凌空SOHO店）', address: '上海市长宁区金钟路968号9号楼地下一层9-83室' },\r\n        { value: '焦耳·川式快餐（金钟路店）', address: '上海市金钟路633号地下一层甲部' },\r\n        { value: '动力鸡车', address: '长宁区仙霞西路299弄3号101B' },\r\n        { value: '浏阳蒸菜', address: '天山西路430号' },\r\n        { value: '四海游龙（天山西路店）', address: '上海市长宁区天山西路' },\r\n        { value: '樱花食堂（凌空店）', address: '上海市长宁区金钟路968号15楼15-105室' },\r\n        { value: '壹分米客家传统调制米粉(天山店)', address: '天山西路428号' },\r\n        { value: '福荣祥烧腊（平溪路店）', address: '上海市长宁区协和路福泉路255弄57-73号' },\r\n        { value: '速记黄焖鸡米饭', address: '上海市长宁区北新泾街道金钟路180号1层01号摊位' },\r\n        { value: '红辣椒麻辣烫', address: '上海市长宁区天山西路492号' },\r\n        { value: '(小杨生煎)西郊百联餐厅', address: '长宁区仙霞西路88号百联2楼' },\r\n        { value: '阳阳麻辣烫', address: '天山西路389号' },\r\n        { value: '南拳妈妈龙虾盖浇饭', address: '普陀区金沙江路1699号鑫乐惠美食广场A13' }\r\n      ]\r\n    },\r\n    handleSelect(item) {\r\n      console.log(item)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.restaurants = this.loadAll()\r\n  }\r\n})"}},带输入建议.parameters),自定义模板.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-autocomplete\r\n  popper-class=\"my-autocomplete\"\r\n  v-model=\"state\"\r\n  :fetch-suggestions=\"querySearch\"\r\n  placeholder=\"请输入内容\"\r\n  @select=\"handleSelect\">\r\n  <i\r\n    class=\"el-icon-edit el-input__icon\"\r\n    slot=\"suffix\"\r\n    @click=\"handleIconClick\">\r\n  </i>\r\n  <template slot-scope=\"{ item }\">\r\n    <div class=\"name\">{{ item.value }}</div>\r\n    <span class=\"addr\">{{ item.address }}</span>\r\n  </template>\r\n</el-autocomplete>\r\n  `,\r\n  data() {\r\n    return {\r\n      restaurants: [],\r\n      state: ''\r\n    }\r\n  },\r\n  methods: {\r\n    querySearch(queryString, cb) {\r\n      var restaurants = this.restaurants\r\n      var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants\r\n      // 调用 callback 返回建议列表的数据\r\n      cb(results)\r\n    },\r\n    createFilter(queryString) {\r\n      return restaurant => {\r\n        return restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0\r\n      }\r\n    },\r\n    loadAll() {\r\n      return [\r\n        { value: '三全鲜食（北新泾店）', address: '长宁区新渔路144号' },\r\n        { value: 'Hot honey 首尔炸鸡（仙霞路）', address: '上海市长宁区淞虹路661号' },\r\n        { value: '新旺角茶餐厅', address: '上海市普陀区真北路988号创邑金沙谷6号楼113' },\r\n        { value: '泷千家(天山西路店)', address: '天山西路438号' },\r\n        { value: '胖仙女纸杯蛋糕（上海凌空店）', address: '上海市长宁区金钟路968号1幢18号楼一层商铺18-101' },\r\n        { value: '贡茶', address: '上海市长宁区金钟路633号' },\r\n        { value: '豪大大香鸡排超级奶爸', address: '上海市嘉定区曹安公路曹安路1685号' },\r\n        { value: '茶芝兰（奶茶，手抓饼）', address: '上海市普陀区同普路1435号' },\r\n        { value: '十二泷町', address: '上海市北翟路1444弄81号B幢-107' },\r\n        { value: '星移浓缩咖啡', address: '上海市嘉定区新郁路817号' },\r\n        { value: '阿姨奶茶/豪大大', address: '嘉定区曹安路1611号' },\r\n        { value: '新麦甜四季甜品炸鸡', address: '嘉定区曹安公路2383弄55号' },\r\n        { value: 'Monica摩托主题咖啡店', address: '嘉定区江桥镇曹安公路2409号1F，2383弄62号1F' },\r\n        { value: '浮生若茶（凌空soho店）', address: '上海长宁区金钟路968号9号楼地下一层' },\r\n        { value: 'NONO JUICE  鲜榨果汁', address: '上海市长宁区天山西路119号' },\r\n        { value: 'CoCo都可(北新泾店）', address: '上海市长宁区仙霞西路' },\r\n        { value: '快乐柠檬（神州智慧店）', address: '上海市长宁区天山西路567号1层R117号店铺' },\r\n        { value: 'Merci Paul cafe', address: '上海市普陀区光复西路丹巴路28弄6号楼819' },\r\n        { value: '猫山王（西郊百联店）', address: '上海市长宁区仙霞西路88号第一层G05-F01-1-306' },\r\n        { value: '枪会山', address: '上海市普陀区棕榈路' },\r\n        { value: '纵食', address: '元丰天山花园(东门) 双流路267号' },\r\n        { value: '钱记', address: '上海市长宁区天山西路' },\r\n        { value: '壹杯加', address: '上海市长宁区通协路' },\r\n        { value: '唦哇嘀咖', address: '上海市长宁区新泾镇金钟路999号2幢（B幢）第01层第1-02A单元' },\r\n        { value: '爱茜茜里(西郊百联)', address: '长宁区仙霞西路88号1305室' },\r\n        { value: '爱茜茜里(近铁广场)', address: '上海市普陀区真北路818号近铁城市广场北区地下二楼N-B2-O2-C商铺' },\r\n        { value: '鲜果榨汁（金沙江路和美广店）', address: '普陀区金沙江路2239号金沙和美广场B1-10-6' },\r\n        { value: '开心丽果（缤谷店）', address: '上海市长宁区威宁路天山路341号' },\r\n        { value: '超级鸡车（丰庄路店）', address: '上海市嘉定区丰庄路240号' },\r\n        { value: '妙生活果园（北新泾店）', address: '长宁区新渔路144号' },\r\n        { value: '香宜度麻辣香锅', address: '长宁区淞虹路148号' },\r\n        { value: '凡仔汉堡（老真北路店）', address: '上海市普陀区老真北路160号' },\r\n        { value: '港式小铺', address: '上海市长宁区金钟路968号15楼15-105室' },\r\n        { value: '蜀香源麻辣香锅（剑河路店）', address: '剑河路443-1' },\r\n        { value: '北京饺子馆', address: '长宁区北新泾街道天山西路490-1号' },\r\n        { value: '饭典*新简餐（凌空SOHO店）', address: '上海市长宁区金钟路968号9号楼地下一层9-83室' },\r\n        { value: '焦耳·川式快餐（金钟路店）', address: '上海市金钟路633号地下一层甲部' },\r\n        { value: '动力鸡车', address: '长宁区仙霞西路299弄3号101B' },\r\n        { value: '浏阳蒸菜', address: '天山西路430号' },\r\n        { value: '四海游龙（天山西路店）', address: '上海市长宁区天山西路' },\r\n        { value: '樱花食堂（凌空店）', address: '上海市长宁区金钟路968号15楼15-105室' },\r\n        { value: '壹分米客家传统调制米粉(天山店)', address: '天山西路428号' },\r\n        { value: '福荣祥烧腊（平溪路店）', address: '上海市长宁区协和路福泉路255弄57-73号' },\r\n        { value: '速记黄焖鸡米饭', address: '上海市长宁区北新泾街道金钟路180号1层01号摊位' },\r\n        { value: '红辣椒麻辣烫', address: '上海市长宁区天山西路492号' },\r\n        { value: '(小杨生煎)西郊百联餐厅', address: '长宁区仙霞西路88号百联2楼' },\r\n        { value: '阳阳麻辣烫', address: '天山西路389号' },\r\n        { value: '南拳妈妈龙虾盖浇饭', address: '普陀区金沙江路1699号鑫乐惠美食广场A13' }\r\n      ]\r\n    },\r\n    handleSelect(item) {\r\n      console.log(item)\r\n    },\r\n    handleIconClick(ev) {\r\n      console.log(ev)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.restaurants = this.loadAll()\r\n  }\r\n})"}},自定义模板.parameters),远程搜索.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-autocomplete\r\n    v-model=\"state\"\r\n    :fetch-suggestions=\"querySearchAsync\"\r\n    placeholder=\"请输入内容\"\r\n    @select=\"handleSelect\"\r\n  ></el-autocomplete>\r\n  `,\r\n  data() {\r\n    return {\r\n      restaurants: [],\r\n      state: '',\r\n      timeout: null\r\n    }\r\n  },\r\n  methods: {\r\n    loadAll() {\r\n      return [\r\n        { value: '三全鲜食（北新泾店）', address: '长宁区新渔路144号' },\r\n        { value: 'Hot honey 首尔炸鸡（仙霞路）', address: '上海市长宁区淞虹路661号' },\r\n        { value: '新旺角茶餐厅', address: '上海市普陀区真北路988号创邑金沙谷6号楼113' },\r\n        { value: '泷千家(天山西路店)', address: '天山西路438号' },\r\n        { value: '胖仙女纸杯蛋糕（上海凌空店）', address: '上海市长宁区金钟路968号1幢18号楼一层商铺18-101' },\r\n        { value: '贡茶', address: '上海市长宁区金钟路633号' },\r\n        { value: '豪大大香鸡排超级奶爸', address: '上海市嘉定区曹安公路曹安路1685号' },\r\n        { value: '茶芝兰（奶茶，手抓饼）', address: '上海市普陀区同普路1435号' },\r\n        { value: '十二泷町', address: '上海市北翟路1444弄81号B幢-107' },\r\n        { value: '星移浓缩咖啡', address: '上海市嘉定区新郁路817号' },\r\n        { value: '阿姨奶茶/豪大大', address: '嘉定区曹安路1611号' },\r\n        { value: '新麦甜四季甜品炸鸡', address: '嘉定区曹安公路2383弄55号' },\r\n        { value: 'Monica摩托主题咖啡店', address: '嘉定区江桥镇曹安公路2409号1F，2383弄62号1F' },\r\n        { value: '浮生若茶（凌空soho店）', address: '上海长宁区金钟路968号9号楼地下一层' },\r\n        { value: 'NONO JUICE  鲜榨果汁', address: '上海市长宁区天山西路119号' },\r\n        { value: 'CoCo都可(北新泾店）', address: '上海市长宁区仙霞西路' },\r\n        { value: '快乐柠檬（神州智慧店）', address: '上海市长宁区天山西路567号1层R117号店铺' },\r\n        { value: 'Merci Paul cafe', address: '上海市普陀区光复西路丹巴路28弄6号楼819' },\r\n        { value: '猫山王（西郊百联店）', address: '上海市长宁区仙霞西路88号第一层G05-F01-1-306' },\r\n        { value: '枪会山', address: '上海市普陀区棕榈路' },\r\n        { value: '纵食', address: '元丰天山花园(东门) 双流路267号' },\r\n        { value: '钱记', address: '上海市长宁区天山西路' },\r\n        { value: '壹杯加', address: '上海市长宁区通协路' },\r\n        { value: '唦哇嘀咖', address: '上海市长宁区新泾镇金钟路999号2幢（B幢）第01层第1-02A单元' },\r\n        { value: '爱茜茜里(西郊百联)', address: '长宁区仙霞西路88号1305室' },\r\n        { value: '爱茜茜里(近铁广场)', address: '上海市普陀区真北路818号近铁城市广场北区地下二楼N-B2-O2-C商铺' },\r\n        { value: '鲜果榨汁（金沙江路和美广店）', address: '普陀区金沙江路2239号金沙和美广场B1-10-6' },\r\n        { value: '开心丽果（缤谷店）', address: '上海市长宁区威宁路天山路341号' },\r\n        { value: '超级鸡车（丰庄路店）', address: '上海市嘉定区丰庄路240号' },\r\n        { value: '妙生活果园（北新泾店）', address: '长宁区新渔路144号' },\r\n        { value: '香宜度麻辣香锅', address: '长宁区淞虹路148号' },\r\n        { value: '凡仔汉堡（老真北路店）', address: '上海市普陀区老真北路160号' },\r\n        { value: '港式小铺', address: '上海市长宁区金钟路968号15楼15-105室' },\r\n        { value: '蜀香源麻辣香锅（剑河路店）', address: '剑河路443-1' },\r\n        { value: '北京饺子馆', address: '长宁区北新泾街道天山西路490-1号' },\r\n        { value: '饭典*新简餐（凌空SOHO店）', address: '上海市长宁区金钟路968号9号楼地下一层9-83室' },\r\n        { value: '焦耳·川式快餐（金钟路店）', address: '上海市金钟路633号地下一层甲部' },\r\n        { value: '动力鸡车', address: '长宁区仙霞西路299弄3号101B' },\r\n        { value: '浏阳蒸菜', address: '天山西路430号' },\r\n        { value: '四海游龙（天山西路店）', address: '上海市长宁区天山西路' },\r\n        { value: '樱花食堂（凌空店）', address: '上海市长宁区金钟路968号15楼15-105室' },\r\n        { value: '壹分米客家传统调制米粉(天山店)', address: '天山西路428号' },\r\n        { value: '福荣祥烧腊（平溪路店）', address: '上海市长宁区协和路福泉路255弄57-73号' },\r\n        { value: '速记黄焖鸡米饭', address: '上海市长宁区北新泾街道金钟路180号1层01号摊位' },\r\n        { value: '红辣椒麻辣烫', address: '上海市长宁区天山西路492号' },\r\n        { value: '(小杨生煎)西郊百联餐厅', address: '长宁区仙霞西路88号百联2楼' },\r\n        { value: '阳阳麻辣烫', address: '天山西路389号' },\r\n        { value: '南拳妈妈龙虾盖浇饭', address: '普陀区金沙江路1699号鑫乐惠美食广场A13' }\r\n      ]\r\n    },\r\n    querySearchAsync(queryString, cb) {\r\n      var restaurants = this.restaurants\r\n      var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants\r\n\r\n      clearTimeout(this.timeout)\r\n      this.timeout = setTimeout(() => {\r\n        cb(results)\r\n      }, 3000 * Math.random())\r\n    },\r\n    createStateFilter(queryString) {\r\n      return state => {\r\n        return state.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0\r\n      }\r\n    },\r\n    handleSelect(item) {\r\n      console.log(item)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.restaurants = this.loadAll()\r\n  }\r\n})"}},远程搜索.parameters),输入长度限制.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n    <div>\r\n    <el-input\r\n  type="text"\r\n  placeholder="请输入内容"\r\n  v-model="text"\r\n  maxlength="10"\r\n  show-word-limit\r\n>\r\n</el-input>\r\n<div style="margin: 20px 0;"></div>\r\n<el-input\r\n  type="textarea"\r\n  placeholder="请输入内容"\r\n  v-model="textarea"\r\n  maxlength="30"\r\n  show-word-limit\r\n>\r\n</el-input>\r\n    </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      text: \'\',\r\n      textarea: \'\'\r\n    }\r\n  }\r\n})'}},输入长度限制.parameters)},"./src/storybook/element/InputNumber.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"禁用状态",(function(){return 禁用状态})),__webpack_require__.d(__webpack_exports__,"步数",(function(){return 步数})),__webpack_require__.d(__webpack_exports__,"严格步数",(function(){return 严格步数})),__webpack_require__.d(__webpack_exports__,"精度",(function(){return 精度})),__webpack_require__.d(__webpack_exports__,"尺寸",(function(){return 尺寸})),__webpack_require__.d(__webpack_exports__,"按钮位置",(function(){return 按钮位置}));__webpack_exports__.default={title:"Element/InputNumber",argTypes:{value:{control:"number",defaultValue:0,description:"绑定值"},min:{control:"number",defaultValue:-1/0,description:"设置计数器允许的最小值"},max:{control:"number",defaultValue:1/0,description:"设置计数器允许的最大值"},step:{control:"number",defaultValue:1,description:"计数器步长"},"step-strictly":{control:"boolean",defaultValue:!1,description:"是否只能输入 step 的倍数"},precision:{control:"number",description:"数值精度"},size:{control:"radio",options:["large","small"],description:"计数器尺寸"},disabled:{control:"boolean",defaultValue:!1,description:"是否禁用计数器"},controls:{control:"boolean",defaultValue:!0,description:"是否使用控制按钮"},"controls-position":{control:"radio",defaultValue:"right",description:"控制按钮位置"},name:{control:"text",description:"原生属性"},label:{control:"text",description:"输入框关联的label文字"},placeholder:{control:"text",description:"输入框默认 placeholder"}},parameters:{docs:{description:{component:"仅允许输入标准的数字值，可定义范围"}}}};var Attributes=function(){return{}},基础用法=function(){return{template:'<el-input-number v-model="num" @change="handleChange" :min="1" :max="10" label="描述文字"></el-input-number>',data:function(){return{num:1}},methods:{handleChange:function(value){console.log(value)}}}},禁用状态=function(){return{template:'<el-input-number v-model="num" :disabled="true"></el-input-number>',data:function(){return{num:1}}}},步数=function(){return{template:'<el-input-number v-model="num" :step="2"></el-input-number>',data:function(){return{num:5}}}},严格步数=function(){return{template:'<el-input-number v-model="num" :step="2" step-strictly></el-input-number>',data:function(){return{num:1}},methods:{handleChange:function(value){console.log(value)}}}},精度=function(){return{template:'<el-input-number v-model="num" :precision="2" :step="0.1" :max="10"></el-input-number>',data:function(){return{num:1}}}},尺寸=function(){return{template:'\n  <div>\n    <el-input-number v-model="num1"></el-input-number>\n    <el-input-number size="medium" v-model="num2"></el-input-number>\n    <el-input-number size="small" v-model="num3"></el-input-number>\n    <el-input-number size="mini" v-model="num4"></el-input-number>\n  </div>\n  ',data:function(){return{num1:1,num2:1,num3:1,num4:1}}}},按钮位置=function(){return{template:'\n  <el-input-number v-model="num" controls-position="right" @change="handleChange" :min="1" :max="10"></el-input-number>\n  ',data:function(){return{num:1}},methods:{handleChange:function(value){console.log(value)}}}};Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),基础用法.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `<el-input-number v-model="num" @change="handleChange" :min="1" :max="10" label="描述文字"></el-input-number>`,\r\n  data() {\r\n    return {\r\n      num: 1\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange(value) {\r\n      console.log(value)\r\n    }\r\n  }\r\n})'}},基础用法.parameters),禁用状态.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `<el-input-number v-model="num" :disabled="true"></el-input-number>`,\r\n  data() {\r\n    return {\r\n      num: 1\r\n    }\r\n  }\r\n})'}},禁用状态.parameters),步数.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `<el-input-number v-model="num" :step="2"></el-input-number>`,\r\n  data() {\r\n    return {\r\n      num: 5\r\n    }\r\n  }\r\n})'}},步数.parameters),严格步数.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `<el-input-number v-model="num" :step="2" step-strictly></el-input-number>`,\r\n  data() {\r\n    return {\r\n      num: 1\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange(value) {\r\n      console.log(value)\r\n    }\r\n  }\r\n})'}},严格步数.parameters),精度.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `<el-input-number v-model="num" :precision="2" :step="0.1" :max="10"></el-input-number>`,\r\n  data() {\r\n    return {\r\n      num: 1\r\n    }\r\n  }\r\n})'}},精度.parameters),尺寸.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-input-number v-model="num1"></el-input-number>\r\n    <el-input-number size="medium" v-model="num2"></el-input-number>\r\n    <el-input-number size="small" v-model="num3"></el-input-number>\r\n    <el-input-number size="mini" v-model="num4"></el-input-number>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      num1: 1,\r\n      num2: 1,\r\n      num3: 1,\r\n      num4: 1\r\n    }\r\n  }\r\n})'}},尺寸.parameters),按钮位置.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-input-number v-model="num" controls-position="right" @change="handleChange" :min="1" :max="10"></el-input-number>\r\n  `,\r\n  data() {\r\n    return {\r\n      num: 1\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange(value) {\r\n      console.log(value)\r\n    }\r\n  }\r\n})'}},按钮位置.parameters)},"./src/storybook/element/Link.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attitudes",(function(){return Attitudes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"禁用状态",(function(){return 禁用状态})),__webpack_require__.d(__webpack_exports__,"下划线",(function(){return 下划线})),__webpack_require__.d(__webpack_exports__,"图标",(function(){return 图标}));__webpack_exports__.default={title:"Element/Link",argTypes:{type:{control:{type:"select"},options:["primary","success","warning","danger","info"],description:"类型"},underline:{control:{type:"boolean"},defaultValue:!0,description:"是否下划线"},disabled:{control:{type:"boolean"},defaultValue:!1,description:"是否禁用"},href:{control:{type:"text"},description:"原生href属性"},icon:{control:{type:"text"},description:"图标类名"}},parameters:{docs:{description:{component:"文字超链接"}}}};var Attitudes=function(){return{}},基础用法=function(){return{template:'\n  <div>\n    <el-link href="https://element.eleme.io" target="_blank">默认链接</el-link>\n    <el-link type="primary">主要链接</el-link>\n    <el-link type="success">成功链接</el-link>\n    <el-link type="warning">警告链接</el-link>\n    <el-link type="danger">危险链接</el-link>\n    <el-link type="info">信息链接</el-link>\n  </div>\n  '}};基础用法.parameters={docs:{story:"基础的文字链接用法。"}};var 禁用状态=function(){return{template:'\n  <div>\n    <el-link disabled>默认链接</el-link>\n    <el-link type="primary" disabled>主要链接</el-link>\n    <el-link type="success" disabled>成功链接</el-link>\n    <el-link type="warning" disabled>警告链接</el-link>\n    <el-link type="danger" disabled>危险链接</el-link>\n    <el-link type="info" disabled>信息链接</el-link>\n  </div>\n  '}};禁用状态.parameters={docs:{story:"文字链接不可用状态。"}};var 下划线=function(){return{template:'\n  <div>\n    <el-link :underline="false">无下划线</el-link>\n    <el-link>有下划线</el-link>\n  </div>\n  '}};下划线.parameters={docs:{story:"文字链接下划线。"}};var 图标=function(){return{template:'\n  <div>\n    <el-link icon="el-icon-edit">编辑</el-link>\n    <el-link>查看<i class="el-icon-view el-icon--right"></i> </el-link>\n  </div>\n  '}};图标.parameters={docs:{story:"带图标的文字链接可增强辨识度。"}},Attitudes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attitudes.parameters),基础用法.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-link href="https://element.eleme.io" target="_blank">默认链接</el-link>\r\n    <el-link type="primary">主要链接</el-link>\r\n    <el-link type="success">成功链接</el-link>\r\n    <el-link type="warning">警告链接</el-link>\r\n    <el-link type="danger">危险链接</el-link>\r\n    <el-link type="info">信息链接</el-link>\r\n  </div>\r\n  `\r\n})'}},基础用法.parameters),禁用状态.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-link disabled>默认链接</el-link>\r\n    <el-link type="primary" disabled>主要链接</el-link>\r\n    <el-link type="success" disabled>成功链接</el-link>\r\n    <el-link type="warning" disabled>警告链接</el-link>\r\n    <el-link type="danger" disabled>危险链接</el-link>\r\n    <el-link type="info" disabled>信息链接</el-link>\r\n  </div>\r\n  `\r\n})'}},禁用状态.parameters),下划线.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-link :underline="false">无下划线</el-link>\r\n    <el-link>有下划线</el-link>\r\n  </div>\r\n  `\r\n})'}},下划线.parameters),图标.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-link icon="el-icon-edit">编辑</el-link>\r\n    <el-link>查看<i class="el-icon-view el-icon--right"></i> </el-link>\r\n  </div>\r\n  `\r\n})'}},图标.parameters)},"./src/storybook/element/Message.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"不同状态",(function(){return 不同状态})),__webpack_require__.d(__webpack_exports__,"可关闭",(function(){return 可关闭})),__webpack_require__.d(__webpack_exports__,"文字居中",(function(){return 文字居中})),__webpack_require__.d(__webpack_exports__,"使用HTML片段",(function(){return 使用HTML片段}));__webpack_exports__.default={title:"Element/Message"};var Attributes=function(){return{}},基础用法=function(){return{template:'\n  <div>\n    <el-button :plain="true" @click="open">打开消息提示</el-button>\n    <el-button :plain="true" @click="openVn">VNode</el-button>\n  </div>\n  ',methods:{open:function(){this.$message("这是一条消息提示")},openVn:function(){var h=this.$createElement;this.$message({message:h("p",null,[h("span",null,"内容可以是 "),h("i",{style:"color: teal"},"VNode")])})}}}},不同状态=function(){return{template:'\n  <div>\n    <el-button :plain="true" @click="open2">成功</el-button>\n    <el-button :plain="true" @click="open3">警告</el-button>\n    <el-button :plain="true" @click="open1">消息</el-button>\n    <el-button :plain="true" @click="open4">错误</el-button>\n  </div>\n  ',methods:{open1:function(){this.$message("这是一条消息提示")},open2:function(){this.$message({message:"恭喜你，这是一条成功消息",type:"success"})},open3:function(){this.$message({message:"警告哦，这是一条警告消息",type:"warning"})},open4:function(){this.$message.error("错了哦，这是一条错误消息")}}}},可关闭=function(){return{template:'\n  <div>\n    <el-button :plain="true" @click="open1">消息</el-button>\n    <el-button :plain="true" @click="open2">成功</el-button>\n    <el-button :plain="true" @click="open3">警告</el-button>\n    <el-button :plain="true" @click="open4">错误</el-button>\n  </div>\n  ',methods:{open1:function(){this.$message({showClose:!0,message:"这是一条消息提示"})},open2:function(){this.$message({showClose:!0,message:"恭喜你，这是一条成功消息",type:"success"})},open3:function(){this.$message({showClose:!0,message:"警告哦，这是一条警告消息",type:"warning"})},open4:function(){this.$message({showClose:!0,message:"错了哦，这是一条错误消息",type:"error"})}}}},文字居中=function(){return{template:'\n  <div>\n    <el-button :plain="true" @click="openCenter">文字居中</el-button>\n  </div>\n  ',methods:{openCenter:function(){this.$message({message:"居中的文字",center:!0})}}}},使用HTML片段=function(){return{template:'\n  <div>\n    <el-button :plain="true" @click="openHTML">使用 HTML 片段</el-button>\n  </div>\n  ',methods:{openHTML:function(){this.$message({dangerouslyUseHTMLString:!0,message:"<strong>这是 <i>HTML</i> 片段</strong>"})}}}};Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),基础用法.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <div>\r\n    <el-button :plain=\"true\" @click=\"open\">打开消息提示</el-button>\r\n    <el-button :plain=\"true\" @click=\"openVn\">VNode</el-button>\r\n  </div>\r\n  `,\r\n  methods: {\r\n    open() {\r\n      this.$message('这是一条消息提示')\r\n    },\r\n    openVn() {\r\n      const h = this.$createElement\r\n      this.$message({\r\n        message: h('p', null, [h('span', null, '内容可以是 '), h('i', { style: 'color: teal' }, 'VNode')])\r\n      })\r\n    }\r\n  }\r\n})"}},基础用法.parameters),不同状态.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-button :plain="true" @click="open2">成功</el-button>\r\n    <el-button :plain="true" @click="open3">警告</el-button>\r\n    <el-button :plain="true" @click="open1">消息</el-button>\r\n    <el-button :plain="true" @click="open4">错误</el-button>\r\n  </div>\r\n  `,\r\n  methods: {\r\n    open1() {\r\n      this.$message(\'这是一条消息提示\')\r\n    },\r\n    open2() {\r\n      this.$message({\r\n        message: \'恭喜你，这是一条成功消息\',\r\n        type: \'success\'\r\n      })\r\n    },\r\n    open3() {\r\n      this.$message({\r\n        message: \'警告哦，这是一条警告消息\',\r\n        type: \'warning\'\r\n      })\r\n    },\r\n    open4() {\r\n      this.$message.error(\'错了哦，这是一条错误消息\')\r\n    }\r\n  }\r\n})'}},不同状态.parameters),可关闭.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-button :plain="true" @click="open1">消息</el-button>\r\n    <el-button :plain="true" @click="open2">成功</el-button>\r\n    <el-button :plain="true" @click="open3">警告</el-button>\r\n    <el-button :plain="true" @click="open4">错误</el-button>\r\n  </div>\r\n  `,\r\n  methods: {\r\n    open1() {\r\n      this.$message({\r\n        showClose: true,\r\n        message: \'这是一条消息提示\'\r\n      })\r\n    },\r\n    open2() {\r\n      this.$message({\r\n        showClose: true,\r\n        message: \'恭喜你，这是一条成功消息\',\r\n        type: \'success\'\r\n      })\r\n    },\r\n    open3() {\r\n      this.$message({\r\n        showClose: true,\r\n        message: \'警告哦，这是一条警告消息\',\r\n        type: \'warning\'\r\n      })\r\n    },\r\n    open4() {\r\n      this.$message({\r\n        showClose: true,\r\n        message: \'错了哦，这是一条错误消息\',\r\n        type: \'error\'\r\n      })\r\n    }\r\n  }\r\n})'}},可关闭.parameters),文字居中.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-button :plain="true" @click="openCenter">文字居中</el-button>\r\n  </div>\r\n  `,\r\n  methods: {\r\n    openCenter() {\r\n      this.$message({\r\n        message: \'居中的文字\',\r\n        center: true\r\n      })\r\n    }\r\n  }\r\n})'}},文字居中.parameters),使用HTML片段.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-button :plain="true" @click="openHTML">使用 HTML 片段</el-button>\r\n  </div>\r\n  `,\r\n  methods: {\r\n    openHTML() {\r\n      this.$message({\r\n        dangerouslyUseHTMLString: true,\r\n        message: \'<strong>这是 <i>HTML</i> 片段</strong>\'\r\n      })\r\n    }\r\n  }\r\n})'}},使用HTML片段.parameters)},"./src/storybook/element/Radio.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attitudes",(function(){return Attitudes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"禁用状态",(function(){return 禁用状态})),__webpack_require__.d(__webpack_exports__,"单选框组",(function(){return 单选框组})),__webpack_require__.d(__webpack_exports__,"按钮样式",(function(){return 按钮样式})),__webpack_require__.d(__webpack_exports__,"带有边框",(function(){return 带有边框}));__webpack_exports__.default={title:"Element/Radio",argTypes:{value:{control:{type:"text"},description:"绑定值"},label:{control:{type:"text"},description:"Radio 的 value"},disabled:{control:{type:"boolean"},defaultValue:!1,description:"是否禁用"},border:{control:{type:"boolean"},defaultValue:!1,description:"是否显示边框"},size:{control:{type:"radio"},options:["medium","small","mini"],description:"类型"},name:{description:"原生 name 属性"}},parameters:{docs:{description:{component:"在一组备选项中进行单选"}}}};var Attitudes=function(){return{}},基础用法=function(){return{template:'\n  <div>\n    <el-radio v-model="radio" label="1">备选项</el-radio>\n    <el-radio v-model="radio" label="2">备选项</el-radio>\n  </div>\n  ',data:function(){return{radio:"1"}}}};基础用法.parameters={docs:{story:"由于选项默认可见，不宜过多，若选项过多，建议使用 Select 选择器。"}};var 禁用状态=function(){return{template:'\n  <div>\n    <el-radio disabled v-model="radio" label="禁用">备选项</el-radio>\n    <el-radio disabled v-model="radio" label="选中且禁用">备选项</el-radio>\n  </div>\n  ',data:function(){return{radio:"选中且禁用"}}}};禁用状态.parameters={docs:{story:"单选框不可用的状态。"}};var 单选框组=function(){return{template:'\n  <el-radio-group v-model="radio">\n    <el-radio :label="3">备选项</el-radio>\n    <el-radio :label="6">备选项</el-radio>\n    <el-radio :label="9">备选项</el-radio>\n  </el-radio-group>\n  ',data:function(){return{radio:3}}}};单选框组.parameters={docs:{story:"适用于在多个互斥的选项中选择的场景"}};var 按钮样式=function(){return{template:'\n  <div>\n    <div>\n      <el-radio-group v-model="radio1">\n        <el-radio-button label="上海"></el-radio-button>\n        <el-radio-button label="北京"></el-radio-button>\n        <el-radio-button label="广州"></el-radio-button>\n        <el-radio-button label="深圳"></el-radio-button>\n      </el-radio-group>\n    </div>\n    <div style="margin-top: 20px">\n      <el-radio-group v-model="radio2" size="medium">\n        <el-radio-button label="上海" ></el-radio-button>\n        <el-radio-button label="北京"></el-radio-button>\n        <el-radio-button label="广州"></el-radio-button>\n        <el-radio-button label="深圳"></el-radio-button>\n      </el-radio-group>\n    </div>\n    <div style="margin-top: 20px">\n      <el-radio-group v-model="radio3" size="small">\n        <el-radio-button label="上海"></el-radio-button>\n        <el-radio-button label="北京" disabled ></el-radio-button>\n        <el-radio-button label="广州"></el-radio-button>\n        <el-radio-button label="深圳"></el-radio-button>\n      </el-radio-group>\n    </div>\n    <div style="margin-top: 20px">\n      <el-radio-group v-model="radio4" disabled size="mini">\n        <el-radio-button label="上海"></el-radio-button>\n        <el-radio-button label="北京"></el-radio-button>\n        <el-radio-button label="广州"></el-radio-button>\n        <el-radio-button label="深圳"></el-radio-button>\n      </el-radio-group>\n    </div>\n  </div>\n  ',data:function(){return{radio1:"上海",radio2:"上海",radio3:"上海",radio4:"上海"}}}};按钮样式.parameters={docs:{story:"按钮样式的单选组合。"}};var 带有边框=function(){return{template:'\n  <div>\n    <div>\n      <el-radio v-model="radio1" label="1" border>备选项1</el-radio>\n      <el-radio v-model="radio1" label="2" border>备选项2</el-radio>\n    </div>\n    <div style="margin-top: 20px">\n      <el-radio v-model="radio2" label="1" border size="medium">备选项1</el-radio>\n      <el-radio v-model="radio2" label="2" border size="medium">备选项2</el-radio>\n    </div>\n    <div style="margin-top: 20px">\n      <el-radio-group v-model="radio3" size="small">\n        <el-radio label="1" border>备选项1</el-radio>\n        <el-radio label="2" border disabled>备选项2</el-radio>\n      </el-radio-group>\n    </div>\n    <div style="margin-top: 20px">\n      <el-radio-group v-model="radio4" size="mini" disabled>\n        <el-radio label="1" border>备选项1</el-radio>\n        <el-radio label="2" border>备选项2</el-radio>\n      </el-radio-group>\n    </div>\n  </div>\n  ',data:function(){return{radio1:"1",radio2:"1",radio3:"1",radio4:"1"}}}};Attitudes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attitudes.parameters),基础用法.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-radio v-model="radio" label="1">备选项</el-radio>\r\n    <el-radio v-model="radio" label="2">备选项</el-radio>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      radio: \'1\'\r\n    }\r\n  }\r\n})'}},基础用法.parameters),禁用状态.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-radio disabled v-model="radio" label="禁用">备选项</el-radio>\r\n    <el-radio disabled v-model="radio" label="选中且禁用">备选项</el-radio>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      radio: \'选中且禁用\'\r\n    }\r\n  }\r\n})'}},禁用状态.parameters),单选框组.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-radio-group v-model="radio">\r\n    <el-radio :label="3">备选项</el-radio>\r\n    <el-radio :label="6">备选项</el-radio>\r\n    <el-radio :label="9">备选项</el-radio>\r\n  </el-radio-group>\r\n  `,\r\n  data() {\r\n    return {\r\n      radio: 3\r\n    }\r\n  }\r\n})'}},单选框组.parameters),按钮样式.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div>\r\n      <el-radio-group v-model="radio1">\r\n        <el-radio-button label="上海"></el-radio-button>\r\n        <el-radio-button label="北京"></el-radio-button>\r\n        <el-radio-button label="广州"></el-radio-button>\r\n        <el-radio-button label="深圳"></el-radio-button>\r\n      </el-radio-group>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-radio-group v-model="radio2" size="medium">\r\n        <el-radio-button label="上海" ></el-radio-button>\r\n        <el-radio-button label="北京"></el-radio-button>\r\n        <el-radio-button label="广州"></el-radio-button>\r\n        <el-radio-button label="深圳"></el-radio-button>\r\n      </el-radio-group>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-radio-group v-model="radio3" size="small">\r\n        <el-radio-button label="上海"></el-radio-button>\r\n        <el-radio-button label="北京" disabled ></el-radio-button>\r\n        <el-radio-button label="广州"></el-radio-button>\r\n        <el-radio-button label="深圳"></el-radio-button>\r\n      </el-radio-group>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-radio-group v-model="radio4" disabled size="mini">\r\n        <el-radio-button label="上海"></el-radio-button>\r\n        <el-radio-button label="北京"></el-radio-button>\r\n        <el-radio-button label="广州"></el-radio-button>\r\n        <el-radio-button label="深圳"></el-radio-button>\r\n      </el-radio-group>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      radio1: \'上海\',\r\n      radio2: \'上海\',\r\n      radio3: \'上海\',\r\n      radio4: \'上海\'\r\n    }\r\n  }\r\n})'}},按钮样式.parameters),带有边框.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div>\r\n      <el-radio v-model="radio1" label="1" border>备选项1</el-radio>\r\n      <el-radio v-model="radio1" label="2" border>备选项2</el-radio>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-radio v-model="radio2" label="1" border size="medium">备选项1</el-radio>\r\n      <el-radio v-model="radio2" label="2" border size="medium">备选项2</el-radio>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-radio-group v-model="radio3" size="small">\r\n        <el-radio label="1" border>备选项1</el-radio>\r\n        <el-radio label="2" border disabled>备选项2</el-radio>\r\n      </el-radio-group>\r\n    </div>\r\n    <div style="margin-top: 20px">\r\n      <el-radio-group v-model="radio4" size="mini" disabled>\r\n        <el-radio label="1" border>备选项1</el-radio>\r\n        <el-radio label="2" border>备选项2</el-radio>\r\n      </el-radio-group>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      radio1: \'1\',\r\n      radio2: \'1\',\r\n      radio3: \'1\',\r\n      radio4: \'1\'\r\n    }\r\n  }\r\n})'}},带有边框.parameters)},"./src/storybook/element/Rate.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attitudes",(function(){return Attitudes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"辅助文字",(function(){return 辅助文字})),__webpack_require__.d(__webpack_exports__,"其它icon",(function(){return 其它icon})),__webpack_require__.d(__webpack_exports__,"只读",(function(){return 只读}));__webpack_exports__.default={title:"",argTypes:{value:{control:"number",defaultValue:0,description:"绑定值"},max:{control:"number",defaultValue:5,description:"最大分值"},disabled:{control:"boolean",defaultValue:!1,description:"是否为只读"},"allow-half":{control:"boolean",defaultValue:!1,description:"是否允许半选"},"low-threshold":{control:"number",defaultValue:2,description:"低分和中等分数的界限值，值本身被划分在低分中"},"high-threshold":{control:"number",defaultValue:4,description:"高分和中等分数的界限值，值本身被划分在高分中"},colors:{control:"object",defaultValue:["#F7BA2A","#F7BA2A","#F7BA2A"],description:"icon 的颜色。若传入数组，共有 3 个元素，为 3 个分段所对应的颜色；若传入对象，可自定义分段，键名为分段的界限值，键值为对应的颜色"},"void-color":{control:"text",defaultValue:"#C6D1DE",description:"未选中 icon 的颜色"},"disabled-void-color":{control:"text",defaultValue:"#C6D1DE",description:"只读时未选中 icon 的颜色"},"icon-classes":{control:"object",defaultValue:["el-icon-star-on","el-icon-star-on","el-icon-star-on"],description:"icon 的类名。若传入数组，共有 3 个元素，为 3 个分段所对应的类名；若传入对象，可自定义分段，键名为分段的界限值，键值为对应的类名"},"void-icon-class":{control:"text",defaultValue:"el-icon-star-off",description:"未选中 icon 的类名"},"disabled-void-icon-class":{control:"text",defaultValue:"el-icon-star-on",description:"只读时未选中 icon 的类名"},"show-text":{control:"boolean",defaultValue:!1,description:"是否显示辅助文字，若为真，则会从 texts 数组中选取当前分数对应的文字内容"},"show-score":{control:"boolean",defaultValue:!1,description:"是否显示当前分数，show-score 和 show-text 不能同时为真"},"text-color":{control:"text",defaultValue:"#1F2D3D",description:"辅助文字的颜色"},texts:{control:"object",defaultValue:["极差","失望","一般","满意","惊喜"],description:"辅助文字数组"},"score-template":{control:"text",description:"分数显示模板"}},parameters:{docs:{description:{component:"评分组件"}}}};var Attitudes=function(){return{}},基础用法=function(){return{template:'\n  <div>\n    <div class="block">\n      <span class="demonstration">默认不区分颜色</span>\n      <el-rate v-model="value1"></el-rate>\n    </div>\n    <div class="block">\n      <span class="demonstration">区分颜色</span>\n      <el-rate\n        v-model="value2"\n        :colors="colors">\n      </el-rate>\n    </div>\n  </div>\n  ',data:function(){return{value1:null,value2:null,colors:["#99A9BF","#F7BA2A","#FF9900"]}}}},辅助文字=function(){return{template:'\n  <el-rate\n    v-model="value"\n    show-text>\n  </el-rate>\n  ',data:function(){return{value:null}}}};辅助文字.parameters={docs:{description:{story:"用辅助文字直接地表达对应分数"}}};var 其它icon=function(){return{template:'\n  <el-rate\n    v-model="value"\n    :icon-classes="iconClasses"\n    void-icon-class="icon-rate-face-off"\n    :colors="[\'#99A9BF\', \'#F7BA2A\', \'#FF9900\']">\n  </el-rate>\n  ',data:function(){return{value:null,iconClasses:["icon-rate-face-1","icon-rate-face-2","icon-rate-face-3"]}}}};其它icon.parameters={docs:{description:{story:"当有多层评价时，可以用不同类型的 icon 区分评分层级"}}};var 只读=function(){return{template:'\n  <el-rate\n    v-model="value"\n    disabled\n    show-score\n    text-color="#ff9900"\n    score-template="{value}">\n  </el-rate>\n  ',data:function(){return{value:3.7}}}};只读.parameters={docs:{description:{story:"只读的评分用来展示分数，允许出现半星"}}},Attitudes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attitudes.parameters),基础用法.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div class="block">\r\n      <span class="demonstration">默认不区分颜色</span>\r\n      <el-rate v-model="value1"></el-rate>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">区分颜色</span>\r\n      <el-rate\r\n        v-model="value2"\r\n        :colors="colors">\r\n      </el-rate>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value1: null,\r\n      value2: null,\r\n      colors: [\'#99A9BF\', \'#F7BA2A\', \'#FF9900\'] // 等同于 { 2: \'#99A9BF\', 4: { value: \'#F7BA2A\', excluded: true }, 5: \'#FF9900\' }\r\n    }\r\n  }\r\n})'}},基础用法.parameters),辅助文字.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-rate\r\n    v-model="value"\r\n    show-text>\r\n  </el-rate>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: null\r\n    }\r\n  }\r\n})'}},辅助文字.parameters),其它icon.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-rate\r\n    v-model=\"value\"\r\n    :icon-classes=\"iconClasses\"\r\n    void-icon-class=\"icon-rate-face-off\"\r\n    :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\">\r\n  </el-rate>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: null,\r\n      iconClasses: ['icon-rate-face-1', 'icon-rate-face-2', 'icon-rate-face-3'] // 等同于 { 2: 'icon-rate-face-1', 4: { value: 'icon-rate-face-2', excluded: true }, 5: 'icon-rate-face-3' }\r\n    }\r\n  }\r\n})"}},其它icon.parameters),只读.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-rate\r\n    v-model="value"\r\n    disabled\r\n    show-score\r\n    text-color="#ff9900"\r\n    score-template="{value}">\r\n  </el-rate>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: 3.7\r\n    }\r\n  }\r\n})'}},只读.parameters)},"./src/storybook/element/Select.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attitudes",(function(){return Attitudes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"有禁用选项",(function(){return 有禁用选项})),__webpack_require__.d(__webpack_exports__,"禁用状态",(function(){return 禁用状态})),__webpack_require__.d(__webpack_exports__,"可清空单选",(function(){return 可清空单选})),__webpack_require__.d(__webpack_exports__,"基础多选",(function(){return 基础多选})),__webpack_require__.d(__webpack_exports__,"自定义模板",(function(){return 自定义模板})),__webpack_require__.d(__webpack_exports__,"分组",(function(){return 分组})),__webpack_require__.d(__webpack_exports__,"可搜索",(function(){return 可搜索})),__webpack_require__.d(__webpack_exports__,"远程搜索",(function(){return 远程搜索})),__webpack_require__.d(__webpack_exports__,"创建条目",(function(){return 创建条目}));__webpack_exports__.default={title:"Element/Select",argTypes:{value:{control:"string",description:"绑定值"},multiple:{control:"boolean",defaultValue:!1,description:"是否多选"},disabled:{control:"boolean",defaultValue:!1,description:"是否禁用"},"value-key":{control:"string",defaultValue:"value",description:"作为 value 唯一标识的键名，绑定值为对象类型时必填"},size:{control:"radio",options:["medium","small","mini"],description:"输入框尺寸"},clearable:{control:"boolean",defaultValue:!1,description:"是否可以清空选项"},"collapse-tags":{control:"boolean",defaultValue:!1,description:"多选时是否将选中值按文字的形式展示"},"multiple-limit":{control:"number",defaultValue:0,description:"多选时用户最多可以选择的项目数，为 0 则不限制"},name:{control:"string",description:"select input 的 name 属性"},autocomplete:{control:"string",default:"off",description:"select input 的 autocomplete 属性"},"auto-complete":{control:"string",default:"off",description:"下个主版本弃用"},placeholder:{control:"string",defaultValue:"请选择",description:"占位符"},filterable:{control:"boolean",defaultValue:!1,description:"是否可搜索"},"allow-create":{control:"boolean",defaultValue:!1,description:"是否允许用户创建新条目，需配合 filterable 使用"},"filter-method":{control:"object",description:"自定义搜索方法"},remote:{control:"boolean",defaultValue:!1,description:"是否为远程搜索"},"remote-method":{control:"object",description:"远程搜索方法"},loading:{control:"boolean",defaultValue:!1,description:"是否正在从远程获取数据"},"loading-text":{control:"string",default:"加载中",description:"远程加载时显示的文字"},"no-match-text":{control:"string",default:"无匹配数据",description:'搜索条件无匹配时显示的文字，也可以使用slot="empty"设置'},"no-data-text":{control:"string",default:"无数据",description:"绑定值"},"popper-class":{control:"string",description:"Select 下拉框的类名"},"reserve-keyword":{control:"boolean",defaultValue:!1,description:"多选且可搜索时，是否在选中一个选项后保留当前的搜索关键词"},"default-first-option":{control:"boolean",defaultValue:!1,description:"在输入框按下回车，选择第一个匹配项。需配合 filterable 或 remote 使用"},"popper-append-to-body":{control:"boolean",defaultValue:!0,description:"是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false"},"automatic-dropdown":{control:"boolean",defaultValue:!1,description:"对于不可搜索的 Select，是否在输入框获得焦点后自动弹出选项菜单"}},parameters:{docs:{description:{component:"当选项过多时，使用下拉菜单展示并选择内容。"}}}};var Attitudes=function(){return{}},基础用法=function(){return{template:'\n  <el-select v-model="value" placeholder="请选择">\n    <el-option\n      v-for="item in options"\n      :key="item.value"\n      :label="item.label"\n      :value="item.value">\n    </el-option>\n  </el-select>\n  ',data:function(){return{options:[{value:"选项1",label:"黄金糕"},{value:"选项2",label:"双皮奶"},{value:"选项3",label:"蚵仔煎"},{value:"选项4",label:"龙须面"},{value:"选项5",label:"北京烤鸭"}],value:""}}}};基础用法.parameters={docs:{description:{story:"适用广泛的基础单选"}}};var 有禁用选项=function(){return{template:'\n  <el-select v-model="value" placeholder="请选择">\n  <el-option\n    v-for="item in options"\n    :key="item.value"\n    :label="item.label"\n    :value="item.value"\n    :disabled="item.disabled">\n  </el-option>\n</el-select>\n  ',data:function(){return{options:[{value:"选项1",label:"黄金糕"},{value:"选项2",label:"双皮奶",disabled:!0},{value:"选项3",label:"蚵仔煎"},{value:"选项4",label:"龙须面"},{value:"选项5",label:"北京烤鸭"}],value:""}}}},禁用状态=function(){return{template:'\n  <el-select v-model="value" disabled placeholder="请选择">\n  <el-option\n    v-for="item in options"\n    :key="item.value"\n    :label="item.label"\n    :value="item.value">\n  </el-option>\n</el-select>\n  ',data:function(){return{options:[{value:"选项1",label:"黄金糕"},{value:"选项2",label:"双皮奶"},{value:"选项3",label:"蚵仔煎"},{value:"选项4",label:"龙须面"},{value:"选项5",label:"北京烤鸭"}],value:""}}}};禁用状态.parameters={docs:{description:{story:"选择器不可用状态"}}};var 可清空单选=function(){return{template:'\n  <el-select v-model="value" clearable placeholder="请选择">\n  <el-option\n    v-for="item in options"\n    :key="item.value"\n    :label="item.label"\n    :value="item.value">\n  </el-option>\n</el-select>\n  ',data:function(){return{options:[{value:"选项1",label:"黄金糕"},{value:"选项2",label:"双皮奶"},{value:"选项3",label:"蚵仔煎"},{value:"选项4",label:"龙须面"},{value:"选项5",label:"北京烤鸭"}],value:""}}}};可清空单选.parameters={docs:{description:{story:"包含清空按钮，可将选择器清空为初始状态"}}};var 基础多选=function(){return{template:'\n  <div>\n  <el-select v-model="value1" multiple placeholder="请选择">\n    <el-option\n      v-for="item in options"\n      :key="item.value"\n      :label="item.label"\n      :value="item.value">\n    </el-option>\n  </el-select>\n\n  <el-select\n    v-model="value2"\n    multiple\n    collapse-tags\n    style="margin-left: 20px;"\n    placeholder="请选择">\n    <el-option\n      v-for="item in options"\n      :key="item.value"\n      :label="item.label"\n      :value="item.value">\n    </el-option>\n  </el-select>\n  </div>\n  ',data:function(){return{options:[{value:"选项1",label:"黄金糕"},{value:"选项2",label:"双皮奶"},{value:"选项3",label:"蚵仔煎"},{value:"选项4",label:"龙须面"},{value:"选项5",label:"北京烤鸭"}],value1:[],value2:[]}}}};基础多选.parameters={docs:{description:{story:"适用性较广的基础多选，用 Tag 展示已选项"}}};var 自定义模板=function(){return{template:'\n  <el-select v-model="value" placeholder="请选择">\n  <el-option\n    v-for="item in cities"\n    :key="item.value"\n    :label="item.label"\n    :value="item.value">\n    <span style="float: left">{{ item.label }}</span>\n    <span style="float: right; color: #8492a6; font-size: 13px">{{ item.value }}</span>\n  </el-option>\n</el-select>\n  ',data:function(){return{cities:[{value:"Beijing",label:"北京"},{value:"Shanghai",label:"上海"},{value:"Nanjing",label:"南京"},{value:"Chengdu",label:"成都"},{value:"Shenzhen",label:"深圳"},{value:"Guangzhou",label:"广州"}],value:""}}}};自定义模板.parameters={docs:{description:{story:"可以自定义备选项"}}};var 分组=function(){return{template:'\n  <el-select v-model="value" placeholder="请选择">\n    <el-option-group\n      v-for="group in options"\n      :key="group.label"\n      :label="group.label">\n      <el-option\n        v-for="item in group.options"\n        :key="item.value"\n        :label="item.label"\n        :value="item.value">\n      </el-option>\n    </el-option-group>\n  </el-select>\n  ',data:function(){return{options:[{label:"热门城市",options:[{value:"Shanghai",label:"上海"},{value:"Beijing",label:"北京"}]},{label:"城市名",options:[{value:"Chengdu",label:"成都"},{value:"Shenzhen",label:"深圳"},{value:"Guangzhou",label:"广州"},{value:"Dalian",label:"大连"}]}],value:""}}}};分组.parameters={docs:{description:{story:"备选项进行分组展示"}}};var 可搜索=function(){return{template:'\n  <el-select v-model="value" filterable placeholder="请选择">\n    <el-option\n      v-for="item in options"\n      :key="item.value"\n      :label="item.label"\n      :value="item.value">\n    </el-option>\n  </el-select>\n  ',data:function(){return{options:[{value:"选项1",label:"黄金糕"},{value:"选项2",label:"双皮奶"},{value:"选项3",label:"蚵仔煎"},{value:"选项4",label:"龙须面"},{value:"选项5",label:"北京烤鸭"}],value:""}}}};可搜索.parameters={docs:{description:{story:"可以利用搜索功能快速查找选项"}}};var 远程搜索=function(){return{template:'\n  <el-select\n    v-model="value"\n    multiple\n    filterable\n    remote\n    reserve-keyword\n    placeholder="请输入关键词"\n    :remote-method="remoteMethod"\n    :loading="loading">\n    <el-option\n      v-for="item in options"\n      :key="item.value"\n      :label="item.label"\n      :value="item.value">\n    </el-option>\n  </el-select>\n  ',data:function(){return{options:[],value:[],list:[],loading:!1,states:["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"]}},mounted:function(){this.list=this.states.map((function(item){return{value:`value:${item}`,label:`label:${item}`}}))},methods:{remoteMethod:function(query){var _this=this;""!==query?(this.loading=!0,setTimeout((function(){_this.loading=!1,_this.options=_this.list.filter((function(item){return item.label.toLowerCase().indexOf(query.toLowerCase())>-1}))}),200)):this.options=[]}}}};远程搜索.parameters={docs:{description:{story:"从服务器搜索数据，输入关键字进行查找"}}};var 创建条目=function(){return{template:'\n  <el-select\n    v-model="value"\n    multiple\n    filterable\n    allow-create\n    default-first-option\n    placeholder="请选择文章标签">\n    <el-option\n      v-for="item in options"\n      :key="item.value"\n      :label="item.label"\n      :value="item.value">\n    </el-option>\n  </el-select>\n  ',data:function(){return{options:[{value:"HTML",label:"HTML"},{value:"CSS",label:"CSS"},{value:"JavaScript",label:"JavaScript"}],value:[]}}}};创建条目.parameters={docs:{description:{story:"可以创建并选中选项中不存在的条目"}}},Attitudes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attitudes.parameters),基础用法.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-select v-model=\"value\" placeholder=\"请选择\">\r\n    <el-option\r\n      v-for=\"item in options\"\r\n      :key=\"item.value\"\r\n      :label=\"item.label\"\r\n      :value=\"item.value\">\r\n    </el-option>\r\n  </el-select>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: '选项1',\r\n          label: '黄金糕'\r\n        },\r\n        {\r\n          value: '选项2',\r\n          label: '双皮奶'\r\n        },\r\n        {\r\n          value: '选项3',\r\n          label: '蚵仔煎'\r\n        },\r\n        {\r\n          value: '选项4',\r\n          label: '龙须面'\r\n        },\r\n        {\r\n          value: '选项5',\r\n          label: '北京烤鸭'\r\n        }\r\n      ],\r\n      value: ''\r\n    }\r\n  }\r\n})"}},基础用法.parameters),有禁用选项.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-select v-model=\"value\" placeholder=\"请选择\">\r\n  <el-option\r\n    v-for=\"item in options\"\r\n    :key=\"item.value\"\r\n    :label=\"item.label\"\r\n    :value=\"item.value\"\r\n    :disabled=\"item.disabled\">\r\n  </el-option>\r\n</el-select>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: '选项1',\r\n          label: '黄金糕'\r\n        },\r\n        {\r\n          value: '选项2',\r\n          label: '双皮奶',\r\n          disabled: true\r\n        },\r\n        {\r\n          value: '选项3',\r\n          label: '蚵仔煎'\r\n        },\r\n        {\r\n          value: '选项4',\r\n          label: '龙须面'\r\n        },\r\n        {\r\n          value: '选项5',\r\n          label: '北京烤鸭'\r\n        }\r\n      ],\r\n      value: ''\r\n    }\r\n  }\r\n})"}},有禁用选项.parameters),禁用状态.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-select v-model=\"value\" disabled placeholder=\"请选择\">\r\n  <el-option\r\n    v-for=\"item in options\"\r\n    :key=\"item.value\"\r\n    :label=\"item.label\"\r\n    :value=\"item.value\">\r\n  </el-option>\r\n</el-select>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: '选项1',\r\n          label: '黄金糕'\r\n        },\r\n        {\r\n          value: '选项2',\r\n          label: '双皮奶'\r\n        },\r\n        {\r\n          value: '选项3',\r\n          label: '蚵仔煎'\r\n        },\r\n        {\r\n          value: '选项4',\r\n          label: '龙须面'\r\n        },\r\n        {\r\n          value: '选项5',\r\n          label: '北京烤鸭'\r\n        }\r\n      ],\r\n      value: ''\r\n    }\r\n  }\r\n})"}},禁用状态.parameters),可清空单选.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-select v-model=\"value\" clearable placeholder=\"请选择\">\r\n  <el-option\r\n    v-for=\"item in options\"\r\n    :key=\"item.value\"\r\n    :label=\"item.label\"\r\n    :value=\"item.value\">\r\n  </el-option>\r\n</el-select>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: '选项1',\r\n          label: '黄金糕'\r\n        },\r\n        {\r\n          value: '选项2',\r\n          label: '双皮奶'\r\n        },\r\n        {\r\n          value: '选项3',\r\n          label: '蚵仔煎'\r\n        },\r\n        {\r\n          value: '选项4',\r\n          label: '龙须面'\r\n        },\r\n        {\r\n          value: '选项5',\r\n          label: '北京烤鸭'\r\n        }\r\n      ],\r\n      value: ''\r\n    }\r\n  }\r\n})"}},可清空单选.parameters),基础多选.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n  <el-select v-model="value1" multiple placeholder="请选择">\r\n    <el-option\r\n      v-for="item in options"\r\n      :key="item.value"\r\n      :label="item.label"\r\n      :value="item.value">\r\n    </el-option>\r\n  </el-select>\r\n\r\n  <el-select\r\n    v-model="value2"\r\n    multiple\r\n    collapse-tags\r\n    style="margin-left: 20px;"\r\n    placeholder="请选择">\r\n    <el-option\r\n      v-for="item in options"\r\n      :key="item.value"\r\n      :label="item.label"\r\n      :value="item.value">\r\n    </el-option>\r\n  </el-select>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: \'选项1\',\r\n          label: \'黄金糕\'\r\n        },\r\n        {\r\n          value: \'选项2\',\r\n          label: \'双皮奶\'\r\n        },\r\n        {\r\n          value: \'选项3\',\r\n          label: \'蚵仔煎\'\r\n        },\r\n        {\r\n          value: \'选项4\',\r\n          label: \'龙须面\'\r\n        },\r\n        {\r\n          value: \'选项5\',\r\n          label: \'北京烤鸭\'\r\n        }\r\n      ],\r\n      value1: [],\r\n      value2: []\r\n    }\r\n  }\r\n})'}},基础多选.parameters),自定义模板.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-select v-model=\"value\" placeholder=\"请选择\">\r\n  <el-option\r\n    v-for=\"item in cities\"\r\n    :key=\"item.value\"\r\n    :label=\"item.label\"\r\n    :value=\"item.value\">\r\n    <span style=\"float: left\">{{ item.label }}</span>\r\n    <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.value }}</span>\r\n  </el-option>\r\n</el-select>\r\n  `,\r\n  data() {\r\n    return {\r\n      cities: [\r\n        {\r\n          value: 'Beijing',\r\n          label: '北京'\r\n        },\r\n        {\r\n          value: 'Shanghai',\r\n          label: '上海'\r\n        },\r\n        {\r\n          value: 'Nanjing',\r\n          label: '南京'\r\n        },\r\n        {\r\n          value: 'Chengdu',\r\n          label: '成都'\r\n        },\r\n        {\r\n          value: 'Shenzhen',\r\n          label: '深圳'\r\n        },\r\n        {\r\n          value: 'Guangzhou',\r\n          label: '广州'\r\n        }\r\n      ],\r\n      value: ''\r\n    }\r\n  }\r\n})"}},自定义模板.parameters),分组.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-select v-model=\"value\" placeholder=\"请选择\">\r\n    <el-option-group\r\n      v-for=\"group in options\"\r\n      :key=\"group.label\"\r\n      :label=\"group.label\">\r\n      <el-option\r\n        v-for=\"item in group.options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\">\r\n      </el-option>\r\n    </el-option-group>\r\n  </el-select>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          label: '热门城市',\r\n          options: [\r\n            {\r\n              value: 'Shanghai',\r\n              label: '上海'\r\n            },\r\n            {\r\n              value: 'Beijing',\r\n              label: '北京'\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: '城市名',\r\n          options: [\r\n            {\r\n              value: 'Chengdu',\r\n              label: '成都'\r\n            },\r\n            {\r\n              value: 'Shenzhen',\r\n              label: '深圳'\r\n            },\r\n            {\r\n              value: 'Guangzhou',\r\n              label: '广州'\r\n            },\r\n            {\r\n              value: 'Dalian',\r\n              label: '大连'\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      value: ''\r\n    }\r\n  }\r\n})"}},分组.parameters),可搜索.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-select v-model=\"value\" filterable placeholder=\"请选择\">\r\n    <el-option\r\n      v-for=\"item in options\"\r\n      :key=\"item.value\"\r\n      :label=\"item.label\"\r\n      :value=\"item.value\">\r\n    </el-option>\r\n  </el-select>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: '选项1',\r\n          label: '黄金糕'\r\n        },\r\n        {\r\n          value: '选项2',\r\n          label: '双皮奶'\r\n        },\r\n        {\r\n          value: '选项3',\r\n          label: '蚵仔煎'\r\n        },\r\n        {\r\n          value: '选项4',\r\n          label: '龙须面'\r\n        },\r\n        {\r\n          value: '选项5',\r\n          label: '北京烤鸭'\r\n        }\r\n      ],\r\n      value: ''\r\n    }\r\n  }\r\n})"}},可搜索.parameters),远程搜索.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-select\r\n    v-model=\"value\"\r\n    multiple\r\n    filterable\r\n    remote\r\n    reserve-keyword\r\n    placeholder=\"请输入关键词\"\r\n    :remote-method=\"remoteMethod\"\r\n    :loading=\"loading\">\r\n    <el-option\r\n      v-for=\"item in options\"\r\n      :key=\"item.value\"\r\n      :label=\"item.label\"\r\n      :value=\"item.value\">\r\n    </el-option>\r\n  </el-select>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [],\r\n      value: [],\r\n      list: [],\r\n      loading: false,\r\n      states: [\r\n        'Alabama',\r\n        'Alaska',\r\n        'Arizona',\r\n        'Arkansas',\r\n        'California',\r\n        'Colorado',\r\n        'Connecticut',\r\n        'Delaware',\r\n        'Florida',\r\n        'Georgia',\r\n        'Hawaii',\r\n        'Idaho',\r\n        'Illinois',\r\n        'Indiana',\r\n        'Iowa',\r\n        'Kansas',\r\n        'Kentucky',\r\n        'Louisiana',\r\n        'Maine',\r\n        'Maryland',\r\n        'Massachusetts',\r\n        'Michigan',\r\n        'Minnesota',\r\n        'Mississippi',\r\n        'Missouri',\r\n        'Montana',\r\n        'Nebraska',\r\n        'Nevada',\r\n        'New Hampshire',\r\n        'New Jersey',\r\n        'New Mexico',\r\n        'New York',\r\n        'North Carolina',\r\n        'North Dakota',\r\n        'Ohio',\r\n        'Oklahoma',\r\n        'Oregon',\r\n        'Pennsylvania',\r\n        'Rhode Island',\r\n        'South Carolina',\r\n        'South Dakota',\r\n        'Tennessee',\r\n        'Texas',\r\n        'Utah',\r\n        'Vermont',\r\n        'Virginia',\r\n        'Washington',\r\n        'West Virginia',\r\n        'Wisconsin',\r\n        'Wyoming'\r\n      ]\r\n    }\r\n  },\r\n  mounted() {\r\n    this.list = this.states.map(item => {\r\n      return { value: `value:${item}`, label: `label:${item}` }\r\n    })\r\n  },\r\n  methods: {\r\n    remoteMethod(query) {\r\n      if (query !== '') {\r\n        this.loading = true\r\n        setTimeout(() => {\r\n          this.loading = false\r\n          this.options = this.list.filter(item => {\r\n            return item.label.toLowerCase().indexOf(query.toLowerCase()) > -1\r\n          })\r\n        }, 200)\r\n      } else {\r\n        this.options = []\r\n      }\r\n    }\r\n  }\r\n})"}},远程搜索.parameters),创建条目.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-select\r\n    v-model=\"value\"\r\n    multiple\r\n    filterable\r\n    allow-create\r\n    default-first-option\r\n    placeholder=\"请选择文章标签\">\r\n    <el-option\r\n      v-for=\"item in options\"\r\n      :key=\"item.value\"\r\n      :label=\"item.label\"\r\n      :value=\"item.value\">\r\n    </el-option>\r\n  </el-select>\r\n  `,\r\n  data() {\r\n    return {\r\n      options: [\r\n        {\r\n          value: 'HTML',\r\n          label: 'HTML'\r\n        },\r\n        {\r\n          value: 'CSS',\r\n          label: 'CSS'\r\n        },\r\n        {\r\n          value: 'JavaScript',\r\n          label: 'JavaScript'\r\n        }\r\n      ],\r\n      value: []\r\n    }\r\n  }\r\n})"}},创建条目.parameters)},"./src/storybook/element/Slider.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attitudes",(function(){return Attitudes})),__webpack_require__.d(__webpack_exports__,"基本使用",(function(){return 基本使用})),__webpack_require__.d(__webpack_exports__,"离散值",(function(){return 离散值})),__webpack_require__.d(__webpack_exports__,"带有输入框",(function(){return 带有输入框})),__webpack_require__.d(__webpack_exports__,"范围选择",(function(){return 范围选择})),__webpack_require__.d(__webpack_exports__,"竖向模式",(function(){return 竖向模式})),__webpack_require__.d(__webpack_exports__,"展示标记",(function(){return 展示标记}));__webpack_exports__.default={title:"Element/Slider",argTypes:{value:{control:"number",defaultValue:0,description:"绑定值"},min:{control:"number",defaultValue:0,description:"最小值"},max:{control:"number",defaultValue:100,description:"最大值"},disabled:{control:"boolean",defaultValue:!1,description:"是否禁用"},step:{control:"number",defaultValue:1,description:"步长"},"show-input":{control:"boolean",defaultValue:!1,description:"是否显示输入框，仅在非范围选择时有效"},"show-input-controls":{control:"boolean",defaultValue:!0,description:"在显示输入框的情况下，是否显示输入框的控制按钮"},"input-size":{control:"select",opitons:["large","medium","small","mini"],defaultValue:"small",description:"输入框的尺寸"},"show-stops":{control:"boolean",defaultValue:!1,description:"是否显示间断点"},"show-tooltip":{control:"boolean",defaultValue:!0,description:"是否显示 tooltip"},"format-tooltip":{control:"object",description:"格式化 tooltip message"},range:{control:"boolean",defaultValue:!1,description:"是否为范围选择"},range:{control:"boolean",defaultValue:!1,description:"是否为范围选择"},vertical:{control:"boolean",defaultValue:!1,description:"是否竖向模式"},height:{control:"string",description:"Slider 高度，竖向模式时必填"},label:{control:"string",description:"屏幕阅读器标签"},debounce:{control:"number",defaultValue:300,description:"输入时的去抖延迟，毫秒，仅在show-input等于true时有效"},"tooltip-class":{control:"text",description:"tooltip 的自定义类名"},marks:{control:"object",description:"标记， key 的类型必须为 number 且取值在闭区间 [min, max] 内，每个标记可以单独设置样式"}},parameters:{docs:{description:{component:"通过拖动滑块在一个固定区间内进行选择"}}}};var Attitudes=function(){return{}},基本使用=function(){return{template:'\n  <div>\n    <div class="block">\n      <span class="demonstration">默认</span>\n      <el-slider v-model="value1"></el-slider>\n    </div>\n    <div class="block">\n      <span class="demonstration">自定义初始值</span>\n      <el-slider v-model="value2"></el-slider>\n    </div>\n    <div class="block">\n      <span class="demonstration">隐藏 Tooltip</span>\n      <el-slider v-model="value3" :show-tooltip="false"></el-slider>\n    </div>\n    <div class="block">\n      <span class="demonstration">格式化 Tooltip</span>\n      <el-slider v-model="value4" :format-tooltip="formatTooltip"></el-slider>\n    </div>\n    <div class="block">\n      <span class="demonstration">禁用</span>\n      <el-slider v-model="value5" disabled></el-slider>\n    </div>\n  </div>\n  ',data:function(){return{value1:0,value2:50,value3:36,value4:48,value5:42}},methods:{formatTooltip:function(val){return val/100}}}};基本使用.parameters={docs:{description:{story:"在拖动滑块时，显示当前值"}}};var 离散值=function(){return{template:'\n  <div>\n    <div class="block">\n      <span class="demonstration">不显示间断点</span>\n      <el-slider\n        v-model="value1"\n        :step="10">\n      </el-slider>\n    </div>\n    <div class="block">\n      <span class="demonstration">显示间断点</span>\n      <el-slider\n        v-model="value2"\n        :step="10"\n        show-stops>\n      </el-slider>\n    </div>\n  </div>\n  ',data:function(){return{value1:0,value2:0}}}};离散值.parameters={docs:{description:{story:"选项可以是离散的"}}};var 带有输入框=function(){return{template:'\n  <div class="block">\n    <el-slider\n      v-model="value"\n      show-input>\n    </el-slider>\n  </div>\n  ',data:function(){return{value:0}}}};带有输入框.parameters={docs:{description:{story:"通过输入框设置精确数值"}}};var 范围选择=function(){return{template:'\n  <div class="block">\n    <el-slider\n      v-model="value"\n      range\n      show-stops\n      :max="10">\n    </el-slider>\n  </div>\n  ',data:function(){return{value:[4,8]}}}};范围选择.parameters={docs:{description:{story:"支持选择某一数值范围"}}};var 竖向模式=function(){return{template:'\n  <div class="block">\n    <el-slider\n      v-model="value"\n      vertical\n      height="200px">\n    </el-slider>\n  </div>\n  ',data:function(){return{value:0}}}},展示标记=function(){return{template:'\n  <div class="block">\n    <el-slider\n      v-model="value"\n      range\n      :marks="marks">\n    </el-slider>\n  </div>\n  ',data:function(){return{value:[30,60],marks:{0:"0°C",8:"8°C",37:"37°C",50:{style:{color:"#1989FA"},label:this.$createElement("strong","50%")}}}}}};Attitudes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attitudes.parameters),基本使用.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div class="block">\r\n      <span class="demonstration">默认</span>\r\n      <el-slider v-model="value1"></el-slider>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">自定义初始值</span>\r\n      <el-slider v-model="value2"></el-slider>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">隐藏 Tooltip</span>\r\n      <el-slider v-model="value3" :show-tooltip="false"></el-slider>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">格式化 Tooltip</span>\r\n      <el-slider v-model="value4" :format-tooltip="formatTooltip"></el-slider>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">禁用</span>\r\n      <el-slider v-model="value5" disabled></el-slider>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value1: 0,\r\n      value2: 50,\r\n      value3: 36,\r\n      value4: 48,\r\n      value5: 42\r\n    }\r\n  },\r\n  methods: {\r\n    formatTooltip(val) {\r\n      return val / 100\r\n    }\r\n  }\r\n})'}},基本使用.parameters),离散值.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <div class="block">\r\n      <span class="demonstration">不显示间断点</span>\r\n      <el-slider\r\n        v-model="value1"\r\n        :step="10">\r\n      </el-slider>\r\n    </div>\r\n    <div class="block">\r\n      <span class="demonstration">显示间断点</span>\r\n      <el-slider\r\n        v-model="value2"\r\n        :step="10"\r\n        show-stops>\r\n      </el-slider>\r\n    </div>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value1: 0,\r\n      value2: 0\r\n    }\r\n  }\r\n})'}},离散值.parameters),带有输入框.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div class="block">\r\n    <el-slider\r\n      v-model="value"\r\n      show-input>\r\n    </el-slider>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: 0\r\n    }\r\n  }\r\n})'}},带有输入框.parameters),范围选择.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div class="block">\r\n    <el-slider\r\n      v-model="value"\r\n      range\r\n      show-stops\r\n      :max="10">\r\n    </el-slider>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: [4, 8]\r\n    }\r\n  }\r\n})'}},范围选择.parameters),竖向模式.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div class="block">\r\n    <el-slider\r\n      v-model="value"\r\n      vertical\r\n      height="200px">\r\n    </el-slider>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: 0\r\n    }\r\n  }\r\n})'}},竖向模式.parameters),展示标记.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <div class=\"block\">\r\n    <el-slider\r\n      v-model=\"value\"\r\n      range\r\n      :marks=\"marks\">\r\n    </el-slider>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: [30, 60],\r\n      marks: {\r\n        0: '0°C',\r\n        8: '8°C',\r\n        37: '37°C',\r\n        50: {\r\n          style: {\r\n            color: '#1989FA'\r\n          },\r\n          label: this.$createElement('strong', '50%')\r\n        }\r\n      }\r\n    }\r\n  }\r\n})"}},展示标记.parameters)},"./src/storybook/element/Switch.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attitudes",(function(){return Attitudes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"文字描述",(function(){return 文字描述})),__webpack_require__.d(__webpack_exports__,"扩展的value类型",(function(){return 扩展的value类型})),__webpack_require__.d(__webpack_exports__,"禁用状态",(function(){return 禁用状态}));__webpack_exports__.default={title:"Element/Switch",argTypes:{value:{control:"text",description:"绑定值"},disabled:{control:"boolean",defaultValue:!1,description:"是否禁用"},width:{control:"number",defaultValue:40,description:"switch 的宽度（像素）"},"active-icon-class":{control:"text",description:"switch 打开时所显示图标的类名，设置此项会忽略 active-text"},"inactive-icon-class":{control:"text",description:"switch 关闭时所显示图标的类名，设置此项会忽略 inactive-text"},"active-text":{control:"text",description:"switch 打开时的文字描述"},"inactive-text":{control:"text",description:"switch 关闭时的文字描述"},"active-value":{control:"boolean",defaultValue:!0,description:"switch 打开时的值"},"inactive-value":{control:"boolean",defaultValue:!1,description:"switch 关闭时的值"},"active-color":{control:"text",defaultValue:"#409EFF",description:"switch 打开时的背景色"},"inactive-color":{control:"text",defaultValue:"#C0CCDA",description:"switch 关闭时的背景色"},name:{control:"text",description:"switch 对应的 name 属性"},"validate-event":{control:"boolean",defaultValue:!0,description:"改变 switch 状态时是否触发表单的校验"}},parameters:{docs:{description:{component:"表示两种相互对立的状态间的切换，多用于触发「开/关」。"}}}};var Attitudes=function(){return{}},基础用法=function(){return{template:'\n  <el-switch\n    v-model="value"\n    active-color="#13ce66"\n    inactive-color="#ff4949">\n  </el-switch>\n  ',data:function(){return{value:!0}}}},文字描述=function(){return{template:'\n  <div>\n    <el-switch\n      v-model="value1"\n      active-text="按月付费"\n      inactive-text="按年付费">\n    </el-switch>\n    <el-switch\n      style="display: block"\n      v-model="value2"\n      active-color="#13ce66"\n      inactive-color="#ff4949"\n      active-text="按月付费"\n      inactive-text="按年付费">\n    </el-switch>\n  </div>\n  ',data:function(){return{value1:!0,value2:!0}}}},扩展的value类型=function(){return{template:'\n  <el-tooltip :content="\'Switch value: \' + value" placement="top">\n    <el-switch\n      v-model="value"\n      active-color="#13ce66"\n      inactive-color="#ff4949"\n      active-value="100"\n      inactive-value="0">\n    </el-switch>\n  </el-tooltip>\n  ',data:function(){return{value:"100"}}}},禁用状态=function(){return{template:'\n  <div>\n    <el-switch\n      v-model="value1"\n      disabled>\n    </el-switch>\n    <el-switch\n      v-model="value2"\n      disabled>\n    </el-switch>\n  </div>\n  ',data:function(){return{value1:!0,value2:!1}}}};Attitudes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attitudes.parameters),基础用法.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-switch\r\n    v-model="value"\r\n    active-color="#13ce66"\r\n    inactive-color="#ff4949">\r\n  </el-switch>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: true\r\n    }\r\n  }\r\n})'}},基础用法.parameters),文字描述.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-switch\r\n      v-model="value1"\r\n      active-text="按月付费"\r\n      inactive-text="按年付费">\r\n    </el-switch>\r\n    <el-switch\r\n      style="display: block"\r\n      v-model="value2"\r\n      active-color="#13ce66"\r\n      inactive-color="#ff4949"\r\n      active-text="按月付费"\r\n      inactive-text="按年付费">\r\n    </el-switch>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value1: true,\r\n      value2: true\r\n    }\r\n  }\r\n})'}},文字描述.parameters),扩展的value类型.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-tooltip :content="\'Switch value: \' + value" placement="top">\r\n    <el-switch\r\n      v-model="value"\r\n      active-color="#13ce66"\r\n      inactive-color="#ff4949"\r\n      active-value="100"\r\n      inactive-value="0">\r\n    </el-switch>\r\n  </el-tooltip>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: \'100\'\r\n    }\r\n  }\r\n})'}},扩展的value类型.parameters),禁用状态.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-switch\r\n      v-model="value1"\r\n      disabled>\r\n    </el-switch>\r\n    <el-switch\r\n      v-model="value2"\r\n      disabled>\r\n    </el-switch>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value1: true,\r\n      value2: false\r\n    }\r\n  }\r\n})'}},禁用状态.parameters)},"./src/storybook/element/TimePicker.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"固定时间点",(function(){return 固定时间点})),__webpack_require__.d(__webpack_exports__,"任意时间点",(function(){return 任意时间点})),__webpack_require__.d(__webpack_exports__,"固定时间范围",(function(){return 固定时间范围})),__webpack_require__.d(__webpack_exports__,"任意时间范围",(function(){return 任意时间范围}));__webpack_exports__.default={title:"Element/TimePicker",argTypes:{value:{control:"text",description:"绑定值"},readonly:{control:"boolean",defaultValue:!1,description:"完全只读"},disabled:{control:"boolean",defaultValue:!1,description:"禁用"},editable:{control:"boolean",defaultValue:!0,description:"文本框可输入"},clearable:{control:"boolean",defaultValue:!0,description:"是否显示清除按钮"},size:{control:"radio",options:["medium","small","mini"],description:"输入框尺寸"},placeholder:{control:"text",description:"非范围选择时的占位内容"},"start-placeholder":{control:"text",description:"范围选择时开始日期的占位内容"},"end-placeholder":{control:"text",description:"范围选择时开始日期的占位内容"},"is-range":{control:"boolean",defaultValue:!1,description:"是否为时间范围选择，仅对<el-time-picker>有效"},"arrow-control":{control:"boolean",defaultValue:!1,description:"是否使用箭头进行时间选择，仅对<el-time-picker>有效"},align:{control:"radio",options:["left","center","right"],defaultValue:"left",description:"对齐方式"},"popper-class":{control:"text",description:"TimePicker 下拉框的类名"},"picker-options":{control:"object",description:"当前时间日期选择器特有的选项"},"range-separator":{control:"text",defaultValue:"-",description:"选择范围时的分隔符"},"value-format":{control:"text",description:"可选，仅TimePicker时可用，绑定值的格式。不指定则绑定值为 Date 对象"},"default-value":{control:"text",description:"可选，选择器打开时默认显示的时间"},name:{control:"text",description:"原生属性"},"prefix-icon":{control:"text",defaultValue:"el-icon-time",description:"自定义头部图标的类名"},"clear-icon":{control:"text",defaultValue:"el-icon-circle-close",description:"自定义清空图标的类名"}},parameters:{docs:{description:{component:"用于选择或输入日期"}}}};var Attributes=function(){return{}},固定时间点=function(){return{template:"\n  <el-time-select\n    v-model=\"value\"\n    :picker-options=\"{\n      start: '08:30',\n      step: '00:15',\n      end: '18:30'\n    }\"\n    placeholder=\"选择时间\">\n  </el-time-select>\n  ",data:function(){return{value:""}}}};固定时间点.parameters={docs:{description:{story:"提供几个固定的时间点供用户选择"}}};var 任意时间点=function(){return{template:'\n  <div>\n    <el-time-picker\n      v-model="value1"\n      :picker-options="{\n        selectableRange: \'18:30:00 - 20:30:00\'\n      }"\n      placeholder="任意时间点">\n    </el-time-picker>\n    <el-time-picker\n      arrow-control\n      v-model="value2"\n      :picker-options="{\n        selectableRange: \'18:30:00 - 20:30:00\'\n      }"\n      placeholder="任意时间点">\n    </el-time-picker>\n  </div>\n  ',data:function(){return{value1:new Date(2016,9,10,18,40),value2:new Date(2016,9,10,18,40)}}}};任意时间点.parameters={docs:{description:{story:"可以选择任意时间"}}};var 固定时间范围=function(){return{template:"\n  <div>\n    <el-time-select\n      placeholder=\"起始时间\"\n      v-model=\"startTime\"\n      :picker-options=\"{\n        start: '08:30',\n        step: '00:15',\n        end: '18:30'\n      }\">\n    </el-time-select>\n    <el-time-select\n      placeholder=\"结束时间\"\n      v-model=\"endTime\"\n      :picker-options=\"{\n        start: '08:30',\n        step: '00:15',\n        end: '18:30',\n        minTime: startTime\n      }\">\n    </el-time-select>\n  </div>\n  ",data:function(){return{startTime:"",endTime:""}}}};固定时间范围.parameters={docs:{description:{story:"若先选择开始时间，则结束时间内备选项的状态会随之改变"}}};var 任意时间范围=function(){return{template:'\n  <div>\n    <el-time-picker\n      is-range\n      v-model="value1"\n      range-separator="至"\n      start-placeholder="开始时间"\n      end-placeholder="结束时间"\n      placeholder="选择时间范围">\n    </el-time-picker>\n    <el-time-picker\n      is-range\n      arrow-control\n      v-model="value2"\n      range-separator="至"\n      start-placeholder="开始时间"\n      end-placeholder="结束时间"\n      placeholder="选择时间范围">\n    </el-time-picker>\n  </div>\n  ',data:function(){return{value1:[new Date(2016,9,10,8,40),new Date(2016,9,10,9,40)],value2:[new Date(2016,9,10,8,40),new Date(2016,9,10,9,40)]}}}};任意时间范围.parameters={docs:{description:{story:"可选择任意的时间范围"}}},Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),固定时间点.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-time-select\r\n    v-model=\"value\"\r\n    :picker-options=\"{\r\n      start: '08:30',\r\n      step: '00:15',\r\n      end: '18:30'\r\n    }\"\r\n    placeholder=\"选择时间\">\r\n  </el-time-select>\r\n  `,\r\n  data() {\r\n    return {\r\n      value: ''\r\n    }\r\n  }\r\n})"}},固定时间点.parameters),任意时间点.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-time-picker\r\n      v-model="value1"\r\n      :picker-options="{\r\n        selectableRange: \'18:30:00 - 20:30:00\'\r\n      }"\r\n      placeholder="任意时间点">\r\n    </el-time-picker>\r\n    <el-time-picker\r\n      arrow-control\r\n      v-model="value2"\r\n      :picker-options="{\r\n        selectableRange: \'18:30:00 - 20:30:00\'\r\n      }"\r\n      placeholder="任意时间点">\r\n    </el-time-picker>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value1: new Date(2016, 9, 10, 18, 40),\r\n      value2: new Date(2016, 9, 10, 18, 40)\r\n    }\r\n  }\r\n})'}},任意时间点.parameters),固定时间范围.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <div>\r\n    <el-time-select\r\n      placeholder=\"起始时间\"\r\n      v-model=\"startTime\"\r\n      :picker-options=\"{\r\n        start: '08:30',\r\n        step: '00:15',\r\n        end: '18:30'\r\n      }\">\r\n    </el-time-select>\r\n    <el-time-select\r\n      placeholder=\"结束时间\"\r\n      v-model=\"endTime\"\r\n      :picker-options=\"{\r\n        start: '08:30',\r\n        step: '00:15',\r\n        end: '18:30',\r\n        minTime: startTime\r\n      }\">\r\n    </el-time-select>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      startTime: '',\r\n      endTime: ''\r\n    }\r\n  }\r\n})"}},固定时间范围.parameters),任意时间范围.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-time-picker\r\n      is-range\r\n      v-model="value1"\r\n      range-separator="至"\r\n      start-placeholder="开始时间"\r\n      end-placeholder="结束时间"\r\n      placeholder="选择时间范围">\r\n    </el-time-picker>\r\n    <el-time-picker\r\n      is-range\r\n      arrow-control\r\n      v-model="value2"\r\n      range-separator="至"\r\n      start-placeholder="开始时间"\r\n      end-placeholder="结束时间"\r\n      placeholder="选择时间范围">\r\n    </el-time-picker>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      value1: [new Date(2016, 9, 10, 8, 40), new Date(2016, 9, 10, 9, 40)],\r\n      value2: [new Date(2016, 9, 10, 8, 40), new Date(2016, 9, 10, 9, 40)]\r\n    }\r\n  }\r\n})'}},任意时间范围.parameters)},"./src/storybook/element/Transfer.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"基础用法",(function(){return 基础用法})),__webpack_require__.d(__webpack_exports__,"可搜索",(function(){return 可搜索})),__webpack_require__.d(__webpack_exports__,"数据项属性别名",(function(){return 数据项属性别名}));__webpack_exports__.default={title:"Element/Transfer",argTypes:{value:{control:"object",description:"绑定值"},data:{control:"object",defaultValue:[],description:"Transfer 的数据源"},filterable:{control:"boolean",default:!1,description:"是否可搜索"},"filter-placeholder":{control:"text",defaultValue:"请输入搜索内容",description:"搜索框占位符"},"filter-method":{control:"object",description:"自定义搜索方法"},"target-order":{control:"radio",options:["original","push","unshift"],description:"右侧列表元素的排序策略：若为 original，则保持与数据源相同的顺序；若为 push，则新加入的元素排在最后；若为 unshift，则新加入的元素排在最前"},titles:{control:"object",defaultValue:["列表 1","列表 2"],description:"自定义列表标题"},"button-texts":{control:"object",defaultValue:[],description:"自定义按钮文案"},"render-content":{control:"object",description:"自定义数据项渲染函数"},format:{control:"object",defaultValue:{noChecked:"${checked}/${total}",hasChecked:"${checked}/${total}"},description:"列表顶部勾选状态文案"},props:{control:"object",description:"数据源的字段别名"},"left-default-checked":{control:"object",defaultValue:[],description:"初始状态下左侧列表的已勾选项的 key 数组"},"right-default-checked":{control:"object",defaultValue:[],description:"初始状态下右侧列表的已勾选项的 key 数组"}}};var Attributes=function(){return{}},基础用法=function(){return{template:'<el-transfer v-model="value" :data="data"></el-transfer>',data:function(){return{data:function(_){for(var data=[],i=1;i<=15;i++)data.push({key:i,label:`备选项 ${i}`,disabled:i%4==0});return data}(),value:[1,4]}}}},可搜索=function(){return{template:'\n  <el-transfer\n    filterable\n    :filter-method="filterMethod"\n    filter-placeholder="请输入城市拼音"\n    v-model="value"\n    :data="data">\n  </el-transfer>\n  ',data:function(){var data,pinyin;return{data:(data=[],pinyin=["shanghai","beijing","guangzhou","shenzhen","nanjing","xian","chengdu"],["上海","北京","广州","深圳","南京","西安","成都"].forEach((function(city,index){data.push({label:city,key:index,pinyin:pinyin[index]})})),data),value:[],filterMethod:function(query,item){return item.pinyin.indexOf(query)>-1}}}}};可搜索.parameters={docs:{story:"在数据很多的情况下，可以对数据进行搜索和过滤。"}};var 数据项属性别名=function(){return{template:'\n  <el-transfer\n    v-model="value"\n    :props="{\n      key: \'value\',\n      label: \'desc\'\n    }"\n    :data="data">\n  </el-transfer>\n  ',data:function(){return{data:function(_){for(var data=[],i=1;i<=15;i++)data.push({value:i,desc:`备选项 ${i}`,disabled:i%4==0});return data}(),value:[]}}}};数据项属性别名.parameters={docs:{description:{story:"默认情况下，Transfer 仅能识别数据项中的 key、label 和 disabled 字段。如果你的数据的字段名不同，可以使用 props 属性为它们设置别名。"}}},Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),基础用法.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `<el-transfer v-model="value" :data="data"></el-transfer>`,\r\n  data() {\r\n    const generateData = _ => {\r\n      const data = []\r\n      for (let i = 1; i <= 15; i++) {\r\n        data.push({\r\n          key: i,\r\n          label: `备选项 ${i}`,\r\n          disabled: i % 4 === 0\r\n        })\r\n      }\r\n      return data\r\n    }\r\n    return {\r\n      data: generateData(),\r\n      value: [1, 4]\r\n    }\r\n  }\r\n})'}},基础用法.parameters),可搜索.parameters=Object.assign({storySource:{source:"() => ({\r\n  template: `\r\n  <el-transfer\r\n    filterable\r\n    :filter-method=\"filterMethod\"\r\n    filter-placeholder=\"请输入城市拼音\"\r\n    v-model=\"value\"\r\n    :data=\"data\">\r\n  </el-transfer>\r\n  `,\r\n  data() {\r\n    const generateData = _ => {\r\n      const data = []\r\n      const cities = ['上海', '北京', '广州', '深圳', '南京', '西安', '成都']\r\n      const pinyin = ['shanghai', 'beijing', 'guangzhou', 'shenzhen', 'nanjing', 'xian', 'chengdu']\r\n      cities.forEach((city, index) => {\r\n        data.push({\r\n          label: city,\r\n          key: index,\r\n          pinyin: pinyin[index]\r\n        })\r\n      })\r\n      return data\r\n    }\r\n    return {\r\n      data: generateData(),\r\n      value: [],\r\n      filterMethod(query, item) {\r\n        return item.pinyin.indexOf(query) > -1\r\n      }\r\n    }\r\n  }\r\n})"}},可搜索.parameters),数据项属性别名.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-transfer\r\n    v-model="value"\r\n    :props="{\r\n      key: \'value\',\r\n      label: \'desc\'\r\n    }"\r\n    :data="data">\r\n  </el-transfer>\r\n  `,\r\n  data() {\r\n    const generateData = _ => {\r\n      const data = []\r\n      for (let i = 1; i <= 15; i++) {\r\n        data.push({\r\n          value: i,\r\n          desc: `备选项 ${i}`,\r\n          disabled: i % 4 === 0\r\n        })\r\n      }\r\n      return data\r\n    }\r\n    return {\r\n      data: generateData(),\r\n      value: []\r\n    }\r\n  }\r\n})'}},数据项属性别名.parameters)},"./src/storybook/element/Upload.stories.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Attributes",(function(){return Attributes})),__webpack_require__.d(__webpack_exports__,"点击上传",(function(){return 点击上传})),__webpack_require__.d(__webpack_exports__,"用户头像上传",(function(){return 用户头像上传})),__webpack_require__.d(__webpack_exports__,"照片墙",(function(){return 照片墙})),__webpack_require__.d(__webpack_exports__,"文件缩略图",(function(){return 文件缩略图})),__webpack_require__.d(__webpack_exports__,"图片列表缩略图",(function(){return 图片列表缩略图})),__webpack_require__.d(__webpack_exports__,"上传文件列表控制",(function(){return 上传文件列表控制})),__webpack_require__.d(__webpack_exports__,"拖拽上传",(function(){return 拖拽上传})),__webpack_require__.d(__webpack_exports__,"手动上传",(function(){return 手动上传}));__webpack_exports__.default={title:"Element/Upload",argTypes:{action:{control:"text",description:"必选参数，上传的地址"},headers:{control:"object",description:"设置上传的请求头部"},multiple:{control:"boolean",description:"是否支持多选文件"},data:{control:"object",description:"上传时附带的额外参数"},name:{control:"text",defaultValue:"file",description:"上传的文件字段名"},"with-credentials":{control:"boolean",defaultValue:!1,description:"支持发送 cookie 凭证信息"},"show-file-list":{control:"boolean",defaultValue:!0,description:"是否显示已上传文件列表"},drag:{control:"boolean",defaultValue:!1,description:"是否启用拖拽上传"},accept:{control:"text",description:"接受上传的文件类型（thumbnail-mode 模式下此参数无效）"},"on-preview":{control:"object",description:"点击文件列表中已上传的文件时的钩子"},"on-remove":{control:"object",description:"文件列表移除文件时的钩子"},"on-success":{control:"object",description:"文件上传成功时的钩子"},"on-error":{control:"object",description:"文件上传失败时的钩子"},"on-progress":{control:"object",description:"文件上传时的钩子"},"on-change":{control:"object",description:"文件状态改变时的钩子，添加文件、上传成功和上传失败时都会被调用"},"before-upload":{control:"object",description:"上传文件之前的钩子，参数为上传的文件，若返回 false 或者返回 Promise 且被 reject，则停止上传。"},"before-remove":{control:"object",description:"删除文件之前的钩子，参数为上传的文件和文件列表，若返回 false 或者返回 Promise 且被 reject，则停止删除。"},"list-type":{control:"select",options:["text","picture","picture-card"],defaultValue:"text",description:"文件列表的类型"},"auto-upload":{control:"boolean",defaultValue:!0,description:"是否在选取文件后立即进行上传"},"file-list":{control:"object",description:"上传的文件列表, 例如: [{name: 'food.jpg', url: 'https://xxx.cdn.com/xxx.jpg'}]"},"http-request":{control:"object",description:"覆盖默认的上传行为，可以自定义上传的实现"},disabled:{control:"boolean",defaultValue:!1,description:"是否禁用"},limit:{control:"number",description:"最大允许上传个数"},"on-exceed":{control:"object",description:"文件超出个数限制时的钩子"}},parameters:{docs:{description:{component:"通过点击或者拖拽上传文件"}}}};var Attributes=function(){return{}},点击上传=function(){return{template:'\n  <el-upload\n    class="upload-demo"\n    action="https://jsonplaceholder.typicode.com/posts/"\n    :on-preview="handlePreview"\n    :on-remove="handleRemove"\n    :before-remove="beforeRemove"\n    multiple\n    :limit="3"\n    :on-exceed="handleExceed"\n    :file-list="fileList">\n    <el-button size="small" type="primary">点击上传</el-button>\n    <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>\n  </el-upload>\n  ',data:function(){return{fileList:[{name:"food.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"},{name:"food2.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"}]}},methods:{handleRemove:function(file,fileList){console.log(file,fileList)},handlePreview:function(file){console.log(file)},handleExceed:function(files,fileList){this.$message.warning(`当前限制选择 3 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length+fileList.length} 个文件`)},beforeRemove:function(file,fileList){return this.$confirm(`确定移除 ${file.name}？`)}}}},用户头像上传=function(){return{template:'\n  <el-upload\n    class="avatar-uploader"\n    action="https://jsonplaceholder.typicode.com/posts/"\n    :show-file-list="false"\n    :on-success="handleAvatarSuccess"\n    :before-upload="beforeAvatarUpload">\n    <img v-if="imageUrl" :src="imageUrl" class="avatar">\n    <i v-else class="el-icon-plus avatar-uploader-icon"></i>\n  </el-upload>\n  ',data:function(){return{imageUrl:""}},methods:{handleAvatarSuccess:function(res,file){this.imageUrl=URL.createObjectURL(file.raw)},beforeAvatarUpload:function(file){var isJPG="image/jpeg"===file.type,isLt2M=file.size/1024/1024<2;return isJPG||this.$message.error("上传头像图片只能是 JPG 格式!"),isLt2M||this.$message.error("上传头像图片大小不能超过 2MB!"),isJPG&&isLt2M}}}},照片墙=function(){return{template:'\n  <div>\n    <el-upload\n      action="https://jsonplaceholder.typicode.com/posts/"\n      list-type="picture-card"\n      :on-preview="handlePictureCardPreview"\n      :on-remove="handleRemove">\n      <i class="el-icon-plus"></i>\n    </el-upload>\n    <el-dialog :visible.sync="dialogVisible">\n      <img width="100%" :src="dialogImageUrl" alt="">\n    </el-dialog>\n  </div>\n  ',data:function(){return{dialogImageUrl:"",dialogVisible:!1}},methods:{handleRemove:function(file,fileList){console.log(file,fileList)},handlePictureCardPreview:function(file){this.dialogImageUrl=file.url,this.dialogVisible=!0}}}},文件缩略图=function(){return{template:'\n  <div>\n    <el-upload\n      action="#"\n      list-type="picture-card"\n      :auto-upload="false">\n        <i slot="default" class="el-icon-plus"></i>\n        <div slot="file" slot-scope="{file}">\n          <img\n            class="el-upload-list__item-thumbnail"\n            :src="file.url" alt=""\n          >\n          <span class="el-upload-list__item-actions">\n            <span\n              class="el-upload-list__item-preview"\n              @click="handlePictureCardPreview(file)"\n            >\n              <i class="el-icon-zoom-in"></i>\n            </span>\n            <span\n              v-if="!disabled"\n              class="el-upload-list__item-delete"\n              @click="handleDownload(file)"\n            >\n              <i class="el-icon-download"></i>\n            </span>\n            <span\n              v-if="!disabled"\n              class="el-upload-list__item-delete"\n              @click="handleRemove(file)"\n            >\n              <i class="el-icon-delete"></i>\n            </span>\n          </span>\n        </div>\n    </el-upload>\n    <el-dialog :visible.sync="dialogVisible">\n      <img width="100%" :src="dialogImageUrl" alt="">\n    </el-dialog>\n  </div>\n  ',data:function(){return{dialogImageUrl:"",dialogVisible:!1,disabled:!1}},methods:{handleRemove:function(file){console.log(file)},handlePictureCardPreview:function(file){this.dialogImageUrl=file.url,this.dialogVisible=!0},handleDownload:function(file){console.log(file)}}}},图片列表缩略图=function(){return{template:'\n    <el-upload\n      class="upload-demo"\n      action="https://jsonplaceholder.typicode.com/posts/"\n      :on-preview="handlePreview"\n      :on-remove="handleRemove"\n      :file-list="fileList"\n      list-type="picture">\n      <el-button size="small" type="primary">点击上传</el-button>\n      <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>\n    </el-upload>\n  ',data:function(){return{fileList:[{name:"food.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"},{name:"food2.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"}]}},methods:{handleRemove:function(file,fileList){console.log(file,fileList)},handlePreview:function(file){console.log(file)}}}},上传文件列表控制=function(){return{template:'\n  <el-upload\n    class="upload-demo"\n    action="https://jsonplaceholder.typicode.com/posts/"\n    :on-change="handleChange"\n    :file-list="fileList">\n    <el-button size="small" type="primary">点击上传</el-button>\n    <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>\n  </el-upload>\n  ',data:function(){return{fileList:[{name:"food.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"},{name:"food2.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"}]}},methods:{handleChange:function(file,fileList){this.fileList=fileList.slice(-3)}}}},拖拽上传=function(){return{template:'\n  <el-upload\n    class="upload-demo"\n    drag\n    action="https://jsonplaceholder.typicode.com/posts/"\n    multiple>\n    <i class="el-icon-upload"></i>\n    <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>\n    <div class="el-upload__tip" slot="tip">只能上传jpg/png文件，且不超过500kb</div>\n  </el-upload>\n  '}},手动上传=function(){return{template:'\n  <el-upload\n    class="upload-demo"\n    ref="upload"\n    action="https://jsonplaceholder.typicode.com/posts/"\n    :on-preview="handlePreview"\n    :on-remove="handleRemove"\n    :file-list="fileList"\n    :auto-upload="false">\n    <el-button slot="trigger" size="small" type="primary">选取文件</el-button>\n    <el-button style="margin-left: 10px;" size="small" type="success" @click="submitUpload">上传到服务器</el-button>\n    <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>\n  </el-upload>\n  ',data:function(){return{fileList:[{name:"food.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"},{name:"food2.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"}]}},methods:{submitUpload:function(){this.$refs.upload.submit()},handleRemove:function(file,fileList){console.log(file,fileList)},handlePreview:function(file){console.log(file)}}}};Attributes.parameters=Object.assign({storySource:{source:"() => ({})"}},Attributes.parameters),点击上传.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-upload\r\n    class="upload-demo"\r\n    action="https://jsonplaceholder.typicode.com/posts/"\r\n    :on-preview="handlePreview"\r\n    :on-remove="handleRemove"\r\n    :before-remove="beforeRemove"\r\n    multiple\r\n    :limit="3"\r\n    :on-exceed="handleExceed"\r\n    :file-list="fileList">\r\n    <el-button size="small" type="primary">点击上传</el-button>\r\n    <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>\r\n  </el-upload>\r\n  `,\r\n  data() {\r\n    return {\r\n      fileList: [\r\n        { name: \'food.jpeg\', url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\' },\r\n        { name: \'food2.jpeg\', url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\' }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    handleRemove(file, fileList) {\r\n      console.log(file, fileList)\r\n    },\r\n    handlePreview(file) {\r\n      console.log(file)\r\n    },\r\n    handleExceed(files, fileList) {\r\n      this.$message.warning(`当前限制选择 3 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`)\r\n    },\r\n    beforeRemove(file, fileList) {\r\n      return this.$confirm(`确定移除 ${file.name}？`)\r\n    }\r\n  }\r\n})'}},点击上传.parameters),用户头像上传.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-upload\r\n    class="avatar-uploader"\r\n    action="https://jsonplaceholder.typicode.com/posts/"\r\n    :show-file-list="false"\r\n    :on-success="handleAvatarSuccess"\r\n    :before-upload="beforeAvatarUpload">\r\n    <img v-if="imageUrl" :src="imageUrl" class="avatar">\r\n    <i v-else class="el-icon-plus avatar-uploader-icon"></i>\r\n  </el-upload>\r\n  `,\r\n  data() {\r\n    return {\r\n      imageUrl: \'\'\r\n    }\r\n  },\r\n  methods: {\r\n    handleAvatarSuccess(res, file) {\r\n      this.imageUrl = URL.createObjectURL(file.raw)\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type === \'image/jpeg\'\r\n      const isLt2M = file.size / 1024 / 1024 < 2\r\n\r\n      if (!isJPG) {\r\n        this.$message.error(\'上传头像图片只能是 JPG 格式!\')\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error(\'上传头像图片大小不能超过 2MB!\')\r\n      }\r\n      return isJPG && isLt2M\r\n    }\r\n  }\r\n})'}},用户头像上传.parameters),照片墙.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-upload\r\n      action="https://jsonplaceholder.typicode.com/posts/"\r\n      list-type="picture-card"\r\n      :on-preview="handlePictureCardPreview"\r\n      :on-remove="handleRemove">\r\n      <i class="el-icon-plus"></i>\r\n    </el-upload>\r\n    <el-dialog :visible.sync="dialogVisible">\r\n      <img width="100%" :src="dialogImageUrl" alt="">\r\n    </el-dialog>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      dialogImageUrl: \'\',\r\n      dialogVisible: false\r\n    }\r\n  },\r\n  methods: {\r\n    handleRemove(file, fileList) {\r\n      console.log(file, fileList)\r\n    },\r\n    handlePictureCardPreview(file) {\r\n      this.dialogImageUrl = file.url\r\n      this.dialogVisible = true\r\n    }\r\n  }\r\n})'}},照片墙.parameters),文件缩略图.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <div>\r\n    <el-upload\r\n      action="#"\r\n      list-type="picture-card"\r\n      :auto-upload="false">\r\n        <i slot="default" class="el-icon-plus"></i>\r\n        <div slot="file" slot-scope="{file}">\r\n          <img\r\n            class="el-upload-list__item-thumbnail"\r\n            :src="file.url" alt=""\r\n          >\r\n          <span class="el-upload-list__item-actions">\r\n            <span\r\n              class="el-upload-list__item-preview"\r\n              @click="handlePictureCardPreview(file)"\r\n            >\r\n              <i class="el-icon-zoom-in"></i>\r\n            </span>\r\n            <span\r\n              v-if="!disabled"\r\n              class="el-upload-list__item-delete"\r\n              @click="handleDownload(file)"\r\n            >\r\n              <i class="el-icon-download"></i>\r\n            </span>\r\n            <span\r\n              v-if="!disabled"\r\n              class="el-upload-list__item-delete"\r\n              @click="handleRemove(file)"\r\n            >\r\n              <i class="el-icon-delete"></i>\r\n            </span>\r\n          </span>\r\n        </div>\r\n    </el-upload>\r\n    <el-dialog :visible.sync="dialogVisible">\r\n      <img width="100%" :src="dialogImageUrl" alt="">\r\n    </el-dialog>\r\n  </div>\r\n  `,\r\n  data() {\r\n    return {\r\n      dialogImageUrl: \'\',\r\n      dialogVisible: false,\r\n      disabled: false\r\n    }\r\n  },\r\n  methods: {\r\n    handleRemove(file) {\r\n      console.log(file)\r\n    },\r\n    handlePictureCardPreview(file) {\r\n      this.dialogImageUrl = file.url\r\n      this.dialogVisible = true\r\n    },\r\n    handleDownload(file) {\r\n      console.log(file)\r\n    }\r\n  }\r\n})'}},文件缩略图.parameters),图片列表缩略图.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n    <el-upload\r\n      class="upload-demo"\r\n      action="https://jsonplaceholder.typicode.com/posts/"\r\n      :on-preview="handlePreview"\r\n      :on-remove="handleRemove"\r\n      :file-list="fileList"\r\n      list-type="picture">\r\n      <el-button size="small" type="primary">点击上传</el-button>\r\n      <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>\r\n    </el-upload>\r\n  `,\r\n  data() {\r\n    return {\r\n      fileList: [\r\n        { name: \'food.jpeg\', url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\' },\r\n        { name: \'food2.jpeg\', url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\' }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    handleRemove(file, fileList) {\r\n      console.log(file, fileList)\r\n    },\r\n    handlePreview(file) {\r\n      console.log(file)\r\n    }\r\n  }\r\n})'}},图片列表缩略图.parameters),上传文件列表控制.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-upload\r\n    class="upload-demo"\r\n    action="https://jsonplaceholder.typicode.com/posts/"\r\n    :on-change="handleChange"\r\n    :file-list="fileList">\r\n    <el-button size="small" type="primary">点击上传</el-button>\r\n    <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>\r\n  </el-upload>\r\n  `,\r\n  data() {\r\n    return {\r\n      fileList: [\r\n        {\r\n          name: \'food.jpeg\',\r\n          url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\'\r\n        },\r\n        {\r\n          name: \'food2.jpeg\',\r\n          url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange(file, fileList) {\r\n      this.fileList = fileList.slice(-3)\r\n    }\r\n  }\r\n})'}},上传文件列表控制.parameters),拖拽上传.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-upload\r\n    class="upload-demo"\r\n    drag\r\n    action="https://jsonplaceholder.typicode.com/posts/"\r\n    multiple>\r\n    <i class="el-icon-upload"></i>\r\n    <div class="el-upload__text">将文件拖到此处，或<em>点击上传</em></div>\r\n    <div class="el-upload__tip" slot="tip">只能上传jpg/png文件，且不超过500kb</div>\r\n  </el-upload>\r\n  `\r\n})'}},拖拽上传.parameters),手动上传.parameters=Object.assign({storySource:{source:'() => ({\r\n  template: `\r\n  <el-upload\r\n    class="upload-demo"\r\n    ref="upload"\r\n    action="https://jsonplaceholder.typicode.com/posts/"\r\n    :on-preview="handlePreview"\r\n    :on-remove="handleRemove"\r\n    :file-list="fileList"\r\n    :auto-upload="false">\r\n    <el-button slot="trigger" size="small" type="primary">选取文件</el-button>\r\n    <el-button style="margin-left: 10px;" size="small" type="success" @click="submitUpload">上传到服务器</el-button>\r\n    <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>\r\n  </el-upload>\r\n  `,\r\n  data() {\r\n    return {\r\n      fileList: [\r\n        { name: \'food.jpeg\', url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\' },\r\n        { name: \'food2.jpeg\', url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\' }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    submitUpload() {\r\n      this.$refs.upload.submit()\r\n    },\r\n    handleRemove(file, fileList) {\r\n      console.log(file, fileList)\r\n    },\r\n    handlePreview(file) {\r\n      console.log(file)\r\n    }\r\n  }\r\n})'}},手动上传.parameters)},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/vue/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/vue/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/vue/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-interactions/preview.js-generated-config-entry.js"),__webpack_require__("./node_modules/@storybook/addon-a11y/preview.js-generated-config-entry.js"),__webpack_require__("./.storybook/preview.js-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,5,6]]]);